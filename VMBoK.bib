% Encoding: UTF-8

@InProceedings{Chen2009a,
  author    = {Chen, Lianping and Ali Babar, Muhammad and Ali, Nour},
  booktitle = {Proceedings of the 13th International Software Product Line Conference},
  title     = {Variability Management in Software Product Lines: A Systematic Review},
  year      = {2009},
  address   = {USA},
  pages     = {81–90},
  publisher = {Carnegie Mellon University},
  series    = {SPLC '09},
  abstract  = {Variability Management (VM) in Software Product Line (SPL) is a key activity that usually affects the degree to which a SPL is successful. SPL community has spent huge amount of resources on developing various approaches to dealing with variability related challenges over the last decade. To provide an overview of different aspects of the proposed VM approaches, we carried out a systematic literature review of the papers reporting VM in SPL. This paper presents and discusses the findings from this systematic literature review. The results reveal the chronological backgrounds of various approaches over the history of VM research, and summarize the key issues that drove the evolution of different approaches. This study has also identified several gaps that need to be filled by future efforts in this line of research.},
  groups    = {includes, software product lines, variability management, systematic literature review},
  keywords  = {software product lines, variability management, systematic reviews},
  location  = {San Francisco, California, USA},
  numpages  = {10},
  timestamp = {2021-01-05},
  url       = {http://hdl.handle.net/10344/1168},
}

@Conference{Ardimento2020a,
  author          = {Ardimento, P. and Boffoli, N. and Superbo, G.},
  title           = {Multi software product lines: A systematic mapping study},
  year            = {2020},
  editor          = {Ali R., Kaindl H., Maciaszek L., Maciaszek L.},
  pages           = {470-476},
  publisher       = {SciTePress},
  abstract        = {Even if Software Product Line (SPL) is an established technique in software engineering, there are several limitations of its use. This is mainly caused by the exponential increase of software systems complexity and by the high pace of software and hardware evolution. Many of these limitations have been studied and faced by applying the Multi Software Product Line (MSPL), an extension of the SPL. MSPL is an emerging and novel technique based on using more than one SPL to derive a functional product system. This paper aims to characterize the state of the art of MSPL, the main goal is to highlight the reached achievement in this field and then discuss about the open issues or the not covered aspects of this approach. In order to make an overall analysis inside the research community, a well-defined method of systematic mapping is applied in order to classify, in a proper scheme, every paper strictly related to this topic. These classified results could give a valid hint about lacks which should be investigated further. © Copyright 2020 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  affiliation     = {Computer Science Department, University of Bari Aldo Moro, Via Orabona, 4, Bari, 70125, Italy},
  author_keywords = {mapping study, multi software product line, software engineering, software product line, variability management},
  doi             = {10.5220/0009469804700476},
  groups          = {includes, multi software product lines, systematic mapping study},
  journal         = {ENASE 2020 - Proceedings of the 15th International Conference on Evaluation of Novel Approaches to Software Engineering},
  keywords        = {mapping, software design, exponential increase, functional products, research communities, software and hardwares, software product line, software product lines, systematic mapping, systematic mapping studies, computer software},
  timestamp       = {2021-01-05},
}

@Article{Sahid2016a,
  author          = {Sahid, M.Z. and Sultan, A.B.M. and Ghani, A.A.A. and Baharom, S.},
  journal         = {Journal of Computer Science},
  title           = {Combinatorial interaction testing of software product lines: A mapping study},
  year            = {2016},
  number          = {8},
  pages           = {379-398},
  volume          = {12},
  abstract        = {Software Product Line (SPL) is a software engineering paradigm that is inspired by the concept of reusability of common features, formulated for different software product. Complete testing on entire SPL is known to be unfeasible, due to the very large number of possible products to be produced, configured using a subset or all possible features in the SPL. This paper reports a Systematic Mapping Study (SMS) of relevant primary studies as the evidence on the application of Combinatorial Interaction Testing (CIT) for SPL. In CIT, one has to construct a covering array, which is a set of configurations having valid feature combinations and every combination of t features appears at least once in the array. This is also known as t-wise testing. By following the systematic mapping study guidelines, we have selected and filtered 44 primary studies for review. The most prominent CIT techniques in aiding SPL testing are those based on greedy algorithms followed by meta-heuristics algorithms. The motivation of SPL testing is to anticipate the feature interaction problem, in which the majority of the works were reported to leverage test configuration selection approach, while some employed test configuration prioritization approach. Numerous works have been reported, but only few works managed to demonstrate their scalability, as most primary studies only deal with low strength (t is less than 4) of t-wise testing. © 2016 Mohd Zanes Sahid, Abu Bakar Md Sultan, Abdul Azim Abdul Ghani and Salmi Baharom.},
  affiliation     = {Faculty of Computer Science and Information Technology, Universiti Tun Hussein Onn Malaysia (UTHM), Malaysia; Faculty of Computer Science and Information Technology, Universiti Putra Malaysia (UPM), Malaysia},
  author_keywords = {combinatorial interaction testing, secondary study, software product line, systematic mapping study},
  doi             = {10.3844/jcssp.2016.379.398},
  groups          = {includes, testing, software product lines, systematic mapping study},
  publisher       = {Science Publications},
  timestamp       = {2021-01-05},
}

@Conference{Santos2015a,
  author          = {Santos, A.R. and De Oliveira, R.P. and De Almeida, E.S.},
  title           = {Strategies for consistency checking on software product lines: A mapping study},
  year            = {2015},
  publisher       = {Association for Computing Machinery},
  volume          = {27-29-April-2015},
  abstract        = {Context. Software Product Lines (SPL) has become one of the most prominents way to promote the systematic reuse of software artifacts. Like any other piece of software, with the SPL aging, it becomes necessary to manage their evolution. However, in this process, engineers might introduce divergences among the SPL artifacts. Thus, a number of initiatives address the management of such inconsistencies. Objective. In this paper, we mapped the existing approaches to inconsistency management within SPL. Method. We used the systematic mapping study methodology. Results. We classified and performed a characterization of the approaches found, which we mangaged to arrange in three main categories. Most papers selected proposed new methods as solution research. Besides, there is still a need for validation and evaluation studies. Conclusion. We identified a lack of support for a number of activities of consistency assurance. For instance, no paper addressed the tracking of findings, decisions, and actions, as well as, few papers describing either the handling or a management policy for identified inconsistencies. Copyright 2015 ACM.},
  affiliation     = {Reuse in Software Engineering Laboratory - RiSELabs, Federal University of Bahia, Salvador, Brazil; Fraunhofer Project Center for Software and Systems Engineering, Federal University of Bahia, Salvador, Brazil},
  art_number      = {a5},
  author_keywords = {consistency checking, literature review, mapping study, software product line engineering},
  doi             = {10.1145/2745802.2745806},
  groups          = {includes, consistency checking, software product lines, systematic mapping study},
  journal         = {ACM International Conference Proceeding Series},
  keywords        = {computer software, mapping, software design, software engineering, consistency checking, inconsistency management, literature reviews, mapping studies, software product line, software product line engineerings, software product lines, systematic mapping studies, computer software reusability},
  timestamp       = {2021-01-05},
}

@Article{Heradio2015a,
  author          = {Heradio, R. and Perez-Morago, H. and Fernandez-Amoros, D. and Cabrerizo, F.J. and Herrera-Viedma, E.},
  journal         = {Communications in Computer and Information Science},
  title           = {A science mapping analysis of the literature on software product lines},
  year            = {2015},
  pages           = {242-251},
  volume          = {532},
  abstract        = {To compete in the global marketplace, manufacturers try to differentiate their products by focusing on individual customer needs. Fulfilling this goal requires companies to shift from mass production to mass customization. In the context of software development, software product line engineering has emerged as a cost effective approach to developing families of similar products by support high levels of mass customization. This paper analyzes the literature on software product lines from its beginnings to 2014. A science mapping approach is applied to identify the most researched topics, and how the interest in those topics has evolved along the way. © Springer International Publishing Switzerland 2015.},
  affiliation     = {Departamento de Ingeniería de Software y Sistemas Informáticos, UNED, Madrid, 28040, Spain; Departamento de Ciencias de la Computación e Inteligencia Artificial, Universidad de Granada, Granada, 18071, Spain},
  author_keywords = {bibliometrics, science mapping, software product lines},
  doi             = {10.1007/978-3-319-22689-7_18},
  editor          = {Fujita H., Guizzi G.},
  groups          = {includes, software product lines, systematic mapping study},
  keywords        = {computer aided manufacturing, computer software, cost effectiveness, cost engineering, mapping, bibliometrics, cost-effective approach, global marketplaces, individual customers, mapping analysis, mass customization, software product line, software product line engineerings, software design},
  publisher       = {Springer Verlag},
  timestamp       = {2021-01-05},
}

@Article{Carvalho2014a,
  author          = {de Carvalho, D.D. and Chagas, L.F. and Lima, A.M. and Reis, C.A.L.},
  journal         = {Communications in Computer and Information Science},
  title           = {Software process lines: A systematic literature review},
  year            = {2014},
  pages           = {118-130},
  volume          = {477},
  abstract        = {Software Process Line (SPrL) has been claimed as a suitable paradigm for tailoring and reuse of software processes. However, despite its increasing importance, there is still a lack of research that systematically characterizes and analyzes the state of the art of SPrL approaches, in particular focusing on how such a paradigm has been used to improve software processes. This paper presents the method followed to perform a systematic literature review on SPrL in order to investigate the state of the art of this area, as well as the results of this review focusing especially on how variability is represented. We found 40 primary studies about this topic published from 1996 to 2013. Our results indicate that the software engineering community has increasingly invested effort in this area. However, it is still considered an immature area with many open issues such as the lack of the modeling of well-known process standards and models using SPrL concepts and the lack of empirical evaluations. © Springer International Publishing Switzerland 2014.},
  affiliation     = {Graduate Program in Computer Science, Federal University of Pará, Belém, Brazil},
  author_keywords = {feature model, software process lines, software process variability, systematic literature review, variability management},
  doi             = {10.1007/978-3-319-13036-1_11},
  editor          = {Mitasiunas A., Rout Z., Rout Z., O'Connor R.V., O'Connor R.V., Dorling A., Dorling A.},
  groups          = {includes, software process lines, systematic literature review, business processes, variability management},
  keywords        = {computer science, computers, empirical evaluations, engineering community, feature modeling, process standards, software process, state of the art, systematic literature review, variability management, computer software reusability},
  publisher       = {Springer Verlag},
  timestamp       = {2021-01-05},
}

@Article{Pereira2014a,
  author          = {Pereira, J.A. and Constantino, K. and Figueiredo, E.},
  journal         = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  title           = {A systematic literature review of software product line management tools},
  year            = {2014},
  pages           = {73-89},
  volume          = {8919},
  abstract        = {Software Product Line (SPL) management is a key activity for software product line engineering. The idea behind SPL management is to focus on artifacts that are shared in order to support software reuse and adaptation. Gains are expected in terms of time to market, consistency across products, costs reduction, better flexibility, and better management of change requirements. In this context, there are many available options of SPL variability management tools. This paper presents and discusses the findings from a Systematic Literature Review (SLR) of SPL management tools. Our research method aimed at analyzing the available literature on SPL management tools and the involved experts in the field. This review provides insights (i) to support companies interested to choose a tool for SPL variability management that best fits their needs; (ii) to point out attributes and requirements relevant to those interested in developing new tools; and (iii) to help the improvement of the tools already available. As a direct result of this SLR, we identify gaps, such as the lack of industrial support during product configuration. © Springer International Publishing Switzerland 2014.},
  affiliation     = {Computer Science Department, Federal University of Minas Gerais, Belo Horizonte, Brazil},
  author_keywords = {software product lines, systematic literature review, tools, variability management},
  doi             = {10.1007/978-3-319-14130-5_6},
  editor          = {Schaefer I., Stamelos I.},
  groups          = {includes, systematic literature review, software product lines, variability management, tools},
  keywords        = {empowerment of personnel, software design, tools, management of change, product configuration, software product line, software product line engineerings, software product lines, systematic literature review, systematic literature review (slr), variability management, computer software reusability},
  publisher       = {Springer Verlag},
  timestamp       = {2021-01-05},
}

@Article{Jabar2013a,
  author          = {Jabar, M.A. and Zarei, M.B. and Sidi, F. and Sani, N.F.M.},
  journal         = {Journal of Theoretical and Applied Information Technology},
  title           = {A review of software product line adoption},
  year            = {2013},
  number          = {1},
  pages           = {88-94},
  volume          = {57},
  abstract        = {Software Product Line was proposed in 2000 as a systematic approach toward reuse. Although benefits of this strategy is totally well known but there are still uncertainties between organizations about how they can apply SPL to their software product. This review tries to study articles in which adoption models and their properties were discussed in order to get a clear perspective about SPLs implementations and adoption strategy. This study is conducted as a Systematic Literature Review which was used to identify important characteristic which should be considered for product line adoption. 22 primary studies from different sources were evaluated to answer 2 research questions. The research identified more than 30 paper on this study but only 21 of them was precisely relevant in the field of SPL adoption. This research provides a general guideline for organization which wants to use SPL in their company. Our preliminary study conclude that in order to choose an appropriate adoption model organizations should identify their needs and choose best way according to that. © 2005 - 2013 JATIT & LLS. All rights reserved.},
  affiliation     = {Department of Information System, Universiti Putra Malaysia, Malaysia; Department of Computer Science, Universiti Putra Malaysia, Malaysia},
  author_keywords = {adoption, adoption model, adoption strategy, software product line},
  groups          = {includes, adoption, systematic literature review},
  publisher       = {Asian Research Publishing Network (ARPN)},
  timestamp       = {2021-01-05},
  url             = {http://www.jatit.org/volumes/Vol57No1/12Vol57No1.pdf},
}

@Conference{Czarnecki2012a,
  author          = {Czarnecki, K. and Grünbacher, P. and Rabiser, R. and Schmid, K. and Wa̧sowski, A.},
  title           = {Cool features and tough decisions: A comparison of variability modeling approaches},
  year            = {2012},
  pages           = {173-182},
  abstract        = {Variability modeling is essential for defining and managing the commonalities and variabilities in software product lines. Numerous variability modeling approaches exist today to support domain and application engineering activities. Most are based on feature modeling (FM) or decision modeling (DM), but so far no systematic comparison exists between these two classes of approaches. Over the last two decades many new features have been added to both FM and DM and it is tough to decide which approach to use for what purpose. This paper clarifies the relation between FM and DM. We aim to systematize the research field of variability modeling and to explore potential synergies. We compare multiple aspects of FM and DM ranging from historical origins and rationale, through syntactic and semantic richness, to tool support, identifying commonalities and differences. We hope that this effort will improve the understanding of the range of approaches to variability modeling by discussing the possible variations. This will provide insights to users considering adopting variability modeling in practice and to designers of new languages, such as the new OMG Common Variability Language. Copyright 2012 ACM.},
  affiliation     = {University of Waterloo, Canada; Johannes Kepler University, Linz, Austria; CD Lab for Autom. Softw. Eng., JKU Linz, Austria; University of Hildesheim, Germany; IT University of Copenhagen, Denmark},
  author_keywords = {decision modeling, feature modeling, product lines, variability modeling},
  doi             = {10.1145/2110147.2110167},
  groups          = {includes, decision models, feature models, variability modeling, systematic literature review},
  journal         = {ACM International Conference Proceeding Series},
  keywords        = {application engineering, decision modeling, feature modeling, potential synergies, product-lines, research fields, software product line, tool support, variability modeling, computer applications, semantics},
  timestamp       = {2021-01-05},
}

@Conference{Pirmoradi2011a,
  author          = {Pirmoradi, Z. and Wang, G.G.},
  title           = {Recent advancements in product family design and platform-based product development: A literature review},
  year            = {2011},
  number          = {PARTS A AND B},
  pages           = {1041-1055},
  volume          = {5},
  abstract        = {Increase of demand on product variety has pushed companies to think about offering more and more product variants in order to take more market shares. However, product variation can lead to cost increase for design and production, as well as the lead time for new variants. As a result, a proper tradeoff is required between cost-effectiveness of manufacturing and satisfying diverse demands. Such tradeoff has been shown to be manageable effectively by exploiting product family design (PFD) and platform-based product development. These strategies have been widely studied during the past decades, and a large number of approaches have been proposed for covering different issues and steps related to design and development of product families and platforms. Verification and performance of such approaches have also been traced through practical case studies applied to several industries. This paper focuses on a review of the research in this field and efforts to classify the recent advancements relevant to product family design and platform development issues. A comprehensive review on the state-of-the-art research in this field was done by Jiao et al. in 2007; therefore the main focus of this paper is on the research activities from 2006 to present. Mainly, the effort of this paper is to identify new achievements in regard with different aspects of product family design such as customer involvement in design, market driven studies, new indices and metrics for assessing families and developing the desired platforms, issues relevant to product family optimization (i.e., new algorithms and optimization approaches applied to different PFD problems along with their benefits and limitations in comparison to previously developed approaches), issues relevant to development of platforms (i.e., platform configuration approaches, joint platform design and optimization, and factors effective on forming proper platform types), and issues relevant to knowledge management and modeling of families and platforms for facilitating and supporting future design efforts. Through a comparison with previous research, new achievements are discussed and the remaining challenges and potential new research areas in this field are addressed. Copyright © 2011 by ASME.},
  affiliation     = {Product Design and Optimization Laboratory (PDOL), School of Engineering Science, Simon Fraser University, BC, Canada},
  author_keywords = {literature review, platform-based product development, product family design},
  doi             = {10.1115/DETC2011-47959},
  groups          = {includes, product design, systematic literature review, software product lines},
  journal         = {Proceedings of the ASME Design Engineering Technical Conference},
  keywords        = {cost-increases, design and development, future designs, leadtime, literature reviews, market driven, market share, new indices, optimization approach, platform design, platform development, product families, product family design, product variants, product variations, product variety, research activities, commerce, competition, computer aided design, knowledge management, optimization, product development, research, product design},
  timestamp       = {2021-01-05},
}

@Conference{Schmid2011a,
  author          = {Schmid, K. and Rabiser, R. and Grünbacher, P.},
  title           = {A comparison of decision modeling approaches in product lines},
  year            = {2011},
  pages           = {119-126},
  abstract        = {It has been shown that product line engineering can significantly improve the productivity, quality and time-to-market of software development by leveraging extensive reuse. Variability models are currently the most advanced approach to define, document and manage the commonalities and variabilities of reusable artifacts such as software components, requirements, test cases, etc. These models provide the basis for automating the derivation of new products and are thus the key artifact to leverage the flexibility and adaptability of systems in a product line. Among the existing approaches to variability modeling feature modeling and decision modeling have gained most importance. A significant amount of research exists on comparing and analyzing different feature modeling approaches. However, despite their significant role in product line research and practical applications, only little effort has been devoted to compare and analyze decision modeling approaches. In order to address this shortcoming and to provide a basis for more structured research on decision modeling in the future, we present a comparative analysis of representative approaches. We identify their major modeling concepts and present an analysis of their commonalities and variabilities. Copyright 2011 ACM.},
  affiliation     = {Software Systems Engineering, University of Hildesheim, Marienburger Platz 22, 31141 Hildesheim, Germany; Christian Doppler Laboratory for Automated Software Engineering, Johannes Kepler University, Altenberger Str. 69, 4040 Linz, Austria; Systems Engineering and Automation, Johannes Kepler University, Altenberger Str. 69, 4040 Linz, Austria},
  author_keywords = {comparison, decision models, product lines, survey, variability modeling},
  doi             = {10.1145/1944892.1944907},
  groups          = {includes, decision models, variability modeling, software product lines, survey},
  journal         = {ACM International Conference Proceeding Series},
  keywords        = {comparative analysis, compare and analyze, comparison, decision modeling, decision models, feature modeling, modeling concepts, new product, product line engineering, product-lines, software component, software development, test case, time-to-market, variability model, variability modeling, models, production engineering, research, software design, surveys, computer software reusability},
  timestamp       = {2021-01-05},
}

@InProceedings{Murugesupillai2011a,
  author          = {Murugesupillai, Esan and Mohabbati, Bardia and Ga\v{s}evi\'{c}, Dragan},
  booktitle       = {Proceedings of the 15th International Software Product Line Conference, Volume 2},
  title           = {A Preliminary Mapping Study of Approaches Bridging Software Product Lines and Service-Oriented Architectures},
  year            = {2011},
  address         = {New York, NY, USA},
  publisher       = {Association for Computing Machinery},
  series          = {SPLC '11},
  abstract        = {Service Oriented Architectures (SOA) and Software Product Lines (SPL) have individually proven to be software engineering concepts that create added value to the development of software systems. Recently, the research community has recognized and investigated potentials for combining these two concepts. However, there have been no mapping study and literature surveys that systematically review the present research results in combining the two. This paper presents results of a preliminary work on a systematic mapping study of research papers that report on combining SOA and SPL. The main goal of a systematic mapping study is to provide a breath overview, classification of approaches and the quantity and type of research as well as available research results, which is complimentary step toward further systematic literature review. This paper, based on selected papers published from 2002 to mid-2010, reports on various aspects of the analyzed literature, including the motivations for combining the two concepts; contributions to specific stages of software engineering lifecycles; types of synergies and characteristics that are accomplished through combinations of the two concepts; and the methods used for and the rigor of the evaluations of the research conducted on the studied topic.},
  affiliation     = {Athabasca University, Canada; Simon Fraser University, Canada},
  art_number      = {2019149},
  articleno       = {11},
  author_keywords = {service- oriented product line, service-oriented architecture, software product line, software variability, variability management},
  doi             = {10.1145/2019136.2019149},
  groups          = {includes, software product lines, systematic mapping study, service-oriented architecture, variability management},
  isbn            = {9781450307895},
  journal         = {ACM International Conference Proceeding Series},
  keywords        = {service-oriented architecture, variability management, software variability, software product line, service-oriented product line},
  location        = {Munich, Germany},
  numpages        = {8},
  timestamp       = {2021-01-05},
  url             = {https://doi.org/10.1145/2019136.2019149},
}

@InProceedings{Myllaerniemi2012a,
  author          = {Myll\"{a}rniemi, Varvana and Raatikainen, Mikko and M\"{a}nnist\"{o}, Tomi},
  booktitle       = {Proceedings of the 16th International Software Product Line Conference - Volume 1},
  title           = {A Systematically Conducted Literature Review: Quality Attribute Variability in Software Product Lines},
  year            = {2012},
  address         = {New York, NY, USA},
  pages           = {41–45},
  publisher       = {Association for Computing Machinery},
  series          = {SPLC '12},
  volume          = {1},
  abstract        = {Typically, products in a software product line differ by their functionality, and quality attributes are not intentionally varied. Why, how, and which quality attributes to vary has remained an open issue. A systematically conducted literature review on quality attribute variability is presented, where primary studies are selected by reading all content of full studies in Software Product Line Conference. The results indicate that the success of feature modeling influences the proposed approaches, different approaches suit specific quality attributes differently, and empirical evidence on industrial quality variability is lacking.},
  affiliation     = {Aalto University, P.O. Box 15400, 00076 Aalto, Finland},
  author_keywords = {quality attribute, systematic literature review, variability},
  doi             = {10.1145/2362536.2362546},
  groups          = {includes, quality, systematic literature review, software product lines},
  isbn            = {9781450310949},
  journal         = {ACM International Conference Proceeding Series},
  keywords        = {systematic literature review, quality attribute, variability},
  location        = {Salvador, Brazil},
  numpages        = {5},
  timestamp       = {2021-01-05},
  url             = {https://doi.org/10.1145/2362536.2362546},
}

@InProceedings{Assuncao2014a,
  author          = {Assun\c{c}\~{a}o, Wesley Klewerton Guez and Vergilio, Silvia Regina},
  booktitle       = {Proceedings of the 18th International Software Product Line Conference: Companion Volume for Workshops, Demonstrations and Tools - Volume 2},
  title           = {Feature Location for Software Product Line Migration: A Mapping Study},
  year            = {2014},
  address         = {New York, NY, USA},
  pages           = {52–59},
  publisher       = {Association for Computing Machinery},
  series          = {SPLC '14},
  volume          = {2},
  abstract        = {Developing software from scratch is a high cost and error-prone activity. A possible solution to reduce time-to-market and produce high quality software is the reuse of existing software. But when the number of features in the system grows, the maintenance becomes more complex. In such cases, to adopt a systematic approach, such as Software Product Line Engineering, is necessary. Existing systems are generally migrated to a product line, allowing systematic reuse of artefacts and easing maintenance. To this end, some approaches have been proposed in the literature in the last years. A mapping of works on this subject and the identification of some research gaps can lead to an improvement of such approaches. This paper describes the main outcomes of a systematic mapping study on the evolution and migration of systems to SPL. The main works found are presented and classified according to adopted strategy, artefacts used, and evaluation conducted. Analysis of the evolution along the past years are also presented. At the end, we summarize some trends and open issues to serve as reference to new researches.},
  affiliation     = {DINF, Federal University of Paraná (UFPR), CP: 19081, Curitiba, CEP: 81.531-980, Brazil; COINF, Technological Federal University of Paraná (UTFPR), Toledo, CEP: 85.902-490, Brazil},
  author_keywords = {evolution, reengineering, reuse, software product line},
  doi             = {10.1145/2647908.2655967},
  groups          = {includes, evolution, feature identification, reengineering, reuse, software product lines, systematic mapping study},
  isbn            = {9781450327398},
  journal         = {ACM International Conference Proceeding Series},
  keywords        = {reengineering, reuse, evolution, software product line},
  location        = {Florence, Italy},
  numpages        = {8},
  timestamp       = {2021-01-05},
  url             = {https://doi.org/10.1145/2647908.2655967},
}

@InProceedings{Groher2015a,
  author                     = {I. {Groher} and R. {Weinreich}},
  booktitle                  = {2015 48th Hawaii International Conference on System Sciences},
  title                      = {Variability Support in Architecture Knowledge Management Approaches: A Systematic Literature Review},
  year                       = {2015},
  address                    = {{10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA}},
  editor                     = {{Bui, TX and Sprague, RH}},
  month                      = {Jan},
  organization               = {{IEEE Comp Soc, Univ Hawaii, Shidler Coll Business; Univ Hawaii, Dept EE; Univ Hawaii, Informat Sci Program; ONR; AFOSR; Natl Sci Fdn; IEEE Syst Sci \& Cybernet Soc; ACM; SIAM; IEEE Hawaii Sect; IEEE Control Syst Soc; IEEE Grp Informat Theory; IEEE Grp Automat Control; ARO; Reg Med Program Hawaii; Univ Hawaii, Coll Business Adm; Nasdaq}},
  pages                      = {5393-5402},
  publisher                  = {{IEEE COMPUTER SOC}},
  series                     = {{Proceedings of the Annual Hawaii International Conference on System Sciences}},
  abstract                   = {Research on software architecture knowledge management (SAKM) within the last 10 years has focused on capturing and storing design decisions and their underlying rationales. Recent attempts have tried to combine SAKM with variability management to support the capture of knowledge for a set of related products. To assess the current state of the art of variability management in the context of SAKM, we conducted a systematic literature review to identify the characteristics of the existing approaches for combining variability and SAKM and the gaps related to their application in practice. We further identified the main elements of SAKM models related to variability management, which can serve as a first step towards a commonly agreed approach for documenting architecture knowledge in the context of software product line engineering.},
  affiliation                = {{Groher, I (Corresponding Author), Johannes Kepler Univ Linz, Linz, Austria. Groher, Iris; Weinreich, Rainer, Johannes Kepler Univ Linz, Linz, Austria.}},
  author-email               = {{iris.groher@jku.at rainer.weinreich@jku.at}},
  doi                        = {10.1109/HICSS.2015.634},
  groups                     = {includes, software product lines, architecture, systematic literature review},
  isbn                       = {{978-1-4799-7367-5}},
  issn                       = {1530-1605},
  keywords                   = {knowledge management,software architecture,software product lines,variability support,software architecture knowledge management,sakm,variability management,software product line engineering,computer architecture,software architecture,context,data mining,systematics,analytical models,knowledge management},
  number-of-cited-references = {{35}},
  orcid-numbers              = {{Groher, Iris/0000-0003-0905-6791}},
  research-areas             = {{Computer Science, Operations Research \& Management Science}},
  timestamp                  = {2021-01-05},
}

@Article{Chaconluna2020a,
  author                     = {Chacón-Luna, A.E. and Gutiérrez, A.M. and Galindo, J.A. and Benavides, D.},
  journal                    = {Information and Software Technology},
  title                      = {Empirical software product line engineering: A systematic literature review},
  year                       = {2020},
  issn                       = {{0950-5849}},
  month                      = {{DEC}},
  volume                     = {128},
  abstract                   = {Context: The adoption of Software Product Line Engineering (SPLE) is usually only based on its theoretical benefits instead of empirical evidences. In fact, there is no work that synthesizes the empirical studies on SPLE. This makes it difficult for researchers to base their contributions on previous works validated with an empirical strategy. Objective: The objective of this work is to discover and summarize the studies that have used empirical evidences in SPLE limited to those ones with the intervention of humans. This will allow evaluating the quality and to know the scope of these studies over time. Doing so, research opportunities can arise Methods: A systematic literature review was conducted. The scope of the work focuses on those studies in which there is human intervention and were published between 2000 and 2018. We considered peer-reviewed papers from journals and top software engineering conferences. Results: Out of a total of 1880 studies in the initial set, a total of 62 primary studies were selected after applying a series of inclusion and exclusion criteria. We found that, approximately 56% of the studies used the empirical case study strategy while the rest used experimental strategies. Around 86% of the case studies were performed in an industrial environment showing the penetration of SPLE in industry. Conclusion: The interest of empirical studies has been growing since 2008. Around 95.16% of the studies address aspects related to domain engineering while application engineering received less attention. Most of the experiments and case study evaluated showed an acceptable level of quality. The first study found dates from 2005 and since then, the interest in the empirical SPLE has increased. © 2020 Elsevier B.V.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Universidad Estatal de Milagro, Km. 1 1/2 vía km. 26, Milagro, Ecuador; ISIS Papyrus, Papyrus Platz 1, Brunn am Gebirge, 2345, Austria; Dept. Lenguajes y Sistemas Informáticos, University of Seville, Avda. Reina Mercedes s/n, Seville, 41012, Spain},
  art_number                 = {106389},
  article-number             = {{106389}},
  author-email               = {{achaconl1@unemi.edu.ec antonio.gutierrez@isis-papyrus.com jagalindo@us.es benavides@us.es}},
  author_keywords            = {case study, empirical strategies, experiment, software product lines, systematic literature review},
  doi                        = {10.1016/j.infsof.2020.106389},
  groups                     = {includes, empirical, software product lines, systematic literature review},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {computer software, application engineering, experiments and case studies, inclusion and exclusions, industrial environments, research opportunities, software product line engineering(sple), software product line engineerings, systematic literature review, software design},
  number-of-cited-references = {{93}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Bhushan2020a,
  author                     = {Bhushan, M. and Negi, A. and Samant, P. and Goel, S. and Kumar, A.},
  journal                    = {Software Quality Journal},
  title                      = {A classification and systematic review of product line feature model defects},
  year                       = {2020},
  issn                       = {{0963-9314}},
  number                     = {4},
  pages                      = {1507-1550},
  volume                     = {28},
  abstract                   = {Product line (PL)-based development is a thriving research area to develop software-intensive systems. Feature models (FMs) facilitate derivation of valid products from a PL by managing commonalities and variabilities among software products. However, the researchers in academia as well as in the industries experience difficulties in quality assessment of FMs. The increasing complexity and size of FMs may lead to defects, which outweigh the benefits of PL. This paper provides a systematic literature review and key research issues related to the FM defects in PL. We derive a typology of FM defects according to their level of importance. The information on defects’ identification and explanations are provided with formalization. Further, corrective explanations are presented which incorporates various techniques used to fix defects with their implementation. This information would help software engineering community by enabling developers or modelers to find the types of defects and their causes and to choose an appropriate technique to fix defects in order to produce defect-free products from FMs, thereby enhancing the overall quality of PL-based development. © 2020, Springer Science+Business Media, LLC, part of Springer Nature.},
  address                    = {{VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS}},
  affiliation                = {School of Computing, DIT University, Dehradun, Uttarakhand, India; Cyber Advisory, Deloitte USI, Hyderabad, India; Adventum Advanced Solution Pvt. Ltd., Bangalore, Karnataka, India; Bennett University, Greater Noida, Uttar Pradesh, India; Thapar Institute of Engineering, Patiala, Punjab, India},
  author-email               = {{megha@chitkara.edu.in arun98765@gmail.com piyush.e8056@cumail.in shivani.goel@bennett.edu.in ajaykumar@thapar.edu}},
  author_keywords            = {defect, feature model, product line model, quality, software product line},
  doi                        = {10.1007/s11219-020-09522-1},
  groups                     = {includes, feature models, defects, quality, software product lines, systematic literature review},
  journal-iso                = {{Softw. Qual. J.}},
  keywords                   = {software engineering, appropriate techniques, engineering community, quality assessment, research issues, software intensive systems, software products, systematic literature review, systematic review, defects},
  number-of-cited-references = {{122}},
  orcid-numbers              = {{Bhushan, Megha/0000-0003-4309-875X}},
  publisher                  = {Springer},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Petry2020b,
  author                     = {Petry, K.L. and OliveiraJr, E. and Zorzo, A.F.},
  journal                    = {Journal of Systems and Software},
  title                      = {Model-based testing of software product lines: Mapping study and research roadmap},
  year                       = {2020},
  issn                       = {{0164-1212}},
  month                      = {{SEP}},
  volume                     = {167},
  abstract                   = {Model-Based Testing (MBT) has been successfully applied to Software Product Lines (SPL). This paper provides a panorama of state-of-the-art on MBT of SPLs. We performed a systematic mapping for answering questions related with domains, approaches, solution types, variability, test case automation, artifacts, and evaluation. We built a roadmap from 44 selected studies. Main obtained results are: Software and Automotive domains are most considered; Black-box testing is widely performed; most studies have fully-automated support; variability is considered in most studies; Finite State Machines is the most used model to test SPLs; Behavioral-based and Scenario-based are the most used models; Case Studies and Experiments are used to evaluate MBT solutions and the majority is performed in industrial environments; traceability is not widely explored for MBT solutions. Furthermore, we provide a roadmap synthesizing studies based on used models, more formal artifacts, supporting tools, variability management, (semi-)automation, and traceability. The roadmap contributes to identify related primary studies based on given artifacts, variability management, tools, automation, and traceability techniques and to identify, from a given primary study, which artifacts, tools, variability management, automation and traceability techniques are related. Therefore, the roadmap serves as a guide to researchers and practitioners on how to model-based test SPLs. © 2020 Elsevier Inc.},
  address                    = {{STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA}},
  affiliation                = {Informatics Department (DIN), State University of Maringá (UEM), Maringá-PR, Brazil; School of Technology, Pontifical Catholic University of Rio Grande do Sul (PUCRS), Porto Alegre-RS, Brazil},
  art_number                 = {110608},
  article-number             = {{110608}},
  author-email               = {{kleberpetry@gmail.com edson@din.uem.br avelino.zorzo@pucrs.br}},
  author_keywords            = {mbt roadmap, model-b-ased testing, reuse of test cases, software product line, systematic mapping study, variability},
  doi                        = {10.1016/j.jss.2020.110608},
  groups                     = {includes, testing, software product lines, systematic mapping study},
  journal-iso                = {{J. Syst. Softw.}},
  keywords                   = {automation, mapping, model checking, automotive domains, industrial environments, model based testing, software product line, software product lines, systematic mapping, traceability techniques, variability management, black-box testing},
  number-of-cited-references = {{94}},
  orcid-numbers              = {{OliveiraJr, Edson/0000-0002-4760-1626}},
  publisher                  = {Elsevier Inc.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Geraldi2020a,
  author                     = {Geraldi, R.T. and Reinehr, S. and Malucelli, A.},
  journal                    = {Information and Software Technology},
  title                      = {Software product line applied to the internet of things: A systematic literature review},
  year                       = {2020},
  issn                       = {{0950-5849}},
  month                      = {{AUG}},
  volume                     = {124},
  abstract                   = {Context: Internet of Things (IoT) is a promising paradigm due to the growing number of devices that may be connected, defined as “things”. Managing these “things” is still considered a challenge. One way to overcome this challenge may be by adopting the software product line (SPL) paradigm and the variability management (VM) activity. SPL engineering consists of mechanisms that provide identification, representation, and traceability, which may be helpful to “things” management supported by VM organizational and technical activities. Objective: This research aims to investigate how SPL engineering has been applied along with the IoT paradigm, as well as how VM is being carried out. Method: A systematic literature review (SLR) was conducted considering papers available until March 2019. This systematic review identified 1039 papers. After eliminating the duplicated titles and the ones not related to the review, 112 papers remained. The number of papers was narrowed to 56 after applying the exclusion criteria. Results: The results provide evidence on the diversity of proposed SPLs used to specify approaches for managing IoT systems. However, most SPLs and research developed for IoT lack a systematic and detailed specification to ensure their quality, as well as tailoring guidelines for further use. © 2020 Elsevier B.V.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Graduate Program in Computer Science (PPGIa), Pontifícia Universidade Católica do Paraná (PUCPR), Curitiba, Brazil},
  art_number                 = {106293},
  article-number             = {{106293}},
  author-email               = {{ricardo.geraldi@ppgia.pucpr.br sheila.reinehr@pucpr.br malu@ppgia.pucpr.br}},
  author_keywords            = {families of systems, internet of things, product family engineering, software product line, variability management},
  doi                        = {10.1016/j.infsof.2020.106293},
  groups                     = {includes, internet of things, systematic literature review, software product lines},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {computer software, paper, internet of things (iot), software product line, software product lines, systematic literature review, systematic literature review (slr), systematic review, technical activities, variability management, internet of things},
  number-of-cited-references = {{83}},
  orcid-numbers              = {{Theis Geraldi, Ricardo/0000-0002-6167-4792 Reinehr, Sheila/0000-0001-9430-7713}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Lee2020b,
  author                     = {Lee, J. and Kang, S. and Jung, P.},
  journal                    = {Information and Software Technology},
  title                      = {Test coverage criteria for software product line testing: Systematic literature review},
  year                       = {2020},
  issn                       = {{0950-5849}},
  month                      = {{JUN}},
  volume                     = {122},
  abstract                   = {Context: In software product line testing (SPLT), test coverage criterion is an important concept, as it provides a means of measuring the extent to which domain testing has been performed and redundant application testing can be avoided based on the test coverage level achieved in domain testing. However, no previous literature reviews on SPLT have addressed test coverage criterion in SPLT. Objective: The objectives of this paper are as follows: (1) to clarify the notions of test basis and test coverage criterion for SPLT; (2) to identify the test coverage criteria currently used for SPLT; (3) to investigate how various SPLT aspects, such as the SPLT method, variability implementation mechanism, and variability management approach, affect the choice of test coverage criterion for SPLT; and (4) to analyze the limitations of test coverage criteria currently used for SPLT. Method: This paper conducts a systematic review of test coverage criteria in SPLT with 78 selected studies. Results: We have several findings that can guide the future research on SPLT. One important finding is that choice of test coverage criterion in SPLT is independent from variability implementation mechanism, variability management, SPL approach, and binding time but is dependent on the variability representation used in development artifacts. Another that is easily overlooked is that SPL test coverage criteria with the same test coverage criterion names of single system testing neither adequately convey what should be covered by the test methods applying them, nor can they be more generally regarded as extensions or generalizations for SPLT of their corresponding test coverage criteria of single system testing. Conclusion: This study showed that SPL test coverage criteria should be defined or redefined so that they can clearly deliver the target properties to be satisfied by SPLT. © 2020},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Department of Software Engineering, Jeonbuk National University, 567 Baekje-daero, Deokjin-gu, Jeonju-si, South Korea; School of Computing, KAIST, 291 Daehak-ro, Yuseong-gu, Daejeon, South Korea},
  art_number                 = {106272},
  article-number             = {{106272}},
  author-email               = {{jihyun30@jbnu.ac.kr sungwon.kang@kaist.ac.kr psjung@kaist.ac.kr}},
  author_keywords            = {software product line, software product line testing, test coverage, test coverage criteria},
  doi                        = {10.1016/j.infsof.2020.106272},
  groups                     = {includes, software product lines, testing, systematic literature review},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {application programs, system theory, testing, application testing, implementation mechanisms, software product line, software product line testing, systematic literature review, test coverage, test coverage criteria, variability management, software testing},
  number-of-cited-references = {{39}},
  orcid-numbers              = {{, sungwon/0000-0001-7947-8741}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Berger2020a,
  author                     = {Berger, T. and Steghöfer, J.-P. and Ziadi, T. and Robin, J. and Martinez, J.},
  journal                    = {Empirical Software Engineering},
  title                      = {The state of adoption and the challenges of systematic variability management in industry},
  year                       = {2020},
  issn                       = {{1382-3256}},
  month                      = {{MAY}},
  number                     = {3},
  pages                      = {1755-1797},
  volume                     = {25},
  abstract                   = {Handling large-scale software variability is still a challenge for many organizations. After decades of research on variability management concepts, many industrial organizations have introduced techniques known from research, but still lament that pure textbook approaches are not applicable or efficient. For instance, software product line engineering—an approach to systematically develop portfolios of products—is difficult to adopt given the high upfront investments; and even when adopted, organizations are challenged by evolving their complex product lines. Consequently, the research community now mainly focuses on re-engineering and evolution techniques for product lines; yet, understanding the current state of adoption and the industrial challenges for organizations is necessary to conceive effective techniques. In this multiple-case study, we analyze the current adoption of variability management techniques in twelve medium- to large-scale industrial cases in domains such as automotive, aerospace or railway systems. We identify the current state of variability management, emphasizing the techniques and concepts they adopted. We elicit the needs and challenges expressed for these cases, triangulated with results from a literature review. We believe our results help to understand the current state of adoption and shed light on gaps to address in industrial practice. © 2020, The Author(s).},
  address                    = {{VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS}},
  affiliation                = {Chalmers | University of Gothenburg, Gothenburg, Sweden; Sorbonne University, Paris, France; University of Paris 1 Pantheon-Sorbonne, Paris, France; Tecnalia, Bilbao, Spain},
  author-email               = {{thorsten.berger@chalmers.se jan-philipp.steghofer@chalmers.se tewfik.ziadi@lip6.fr jacques.robin@univ-paris1.fr jabier.martinez@tecnalia.com}},
  author_keywords            = {challenges, multiple-case study, software product lines, variability management},
  doi                        = {10.1007/s10664-019-09787-6},
  groups                     = {includes, adoption, challenges, variability management, industry},
  journal-iso                = {{Empir. Softw. Eng.}},
  keywords                   = {industrial management, industrial research, software design, industrial challenges, industrial organization, industrial practices, multiple-case study, research communities, software product line engineerings, software variabilities, variability management, railroad transportation},
  number-of-cited-references = {{192}},
  orcid-numbers              = {{Steghofer, Jan-Philipp/0000-0003-1694-0972}},
  publisher                  = {Springer},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Gauss2020a,
  author                     = {Gauss, L. and Lacerda, D.P. and Cauchick Miguel, P.A.},
  journal                    = {Journal of Intelligent Manufacturing},
  title                      = {Module-based product family design: systematic literature review and meta-synthesis},
  year                       = {2020},
  issn                       = {{0956-5515}},
  abstract                   = {Increased demand for a greater variety of products has forced many companies to rethink their strategies to offer more product variants without sacrificing production efficiency. In this context, research has found that such a trade-off can be properly managed by exploiting the module-based product family (MBPF) design. Over the years, active work in developing methods to design MBPFs has been carried out. Nevertheless, many of them have been created, and consequently exist, in isolation from one other. As a result, the adoption of these methods in industry and academy alike is inhibited by the seemingly broad array of material without a coherent organizing structure. To bridge this gap, this paper performs a systematic literature review and a meta-synthesis, wherein 72 methods to design MBPFs and their respective instances are connected in the form of a functional model and structured classes of design problems. These entities together serve as a meta-method for organizing the research on MBPF design, from which it was possible to identify the common underlying structure among the methods developed over the past 20 years. The main contributions of this work include: (1) constructing a functional model that connects the design methods for MBPFs; (2) suggesting structured classes of design problems that complement the functional model by cataloging the techniques meant to execute each sub-function of the model; (3) proposing a construction heuristic to build and assess functional models and classes of design problems. © 2020, Springer Science+Business Media, LLC, part of Springer Nature.},
  address                    = {{VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS}},
  affiliation                = {Production and Systems Engineering Graduate Program, Universidade do Vale do Rio dos Sinos, 950, Avenida Unisinos, São Leopoldo, RS 93022-750, Brazil; Production Engineering Graduate Program, Universidade Federal de Santa Catarina, Florianópolis, Brazil},
  author-email               = {{lgauss@unisinos.br dlacerda@unisinos.br paulo.cauchick@ufsc.br}},
  author_keywords            = {design science, functional model, meta-synthesis, modularity, product family design, systematic literature review},
  doi                        = {10.1007/s10845-020-01572-3},
  groups                     = {includes, product design, systematic literature review, product line},
  journal-iso                = {{J. Intell. Manuf.}},
  keywords                   = {bridges, economic and social effects, heuristic methods, product design, design problems, functional model, meta-synthesis, product families, product family design, product variants, production efficiency, systematic literature review, structural design},
  number-of-cited-references = {{158}},
  publisher                  = {Springer},
  research-areas             = {{Computer Science; Engineering}},
  timestamp                  = {2021-01-05},
}

@Article{Pol’la2020a,
  author                     = {Pol’la, M. and Buccella, A. and Cechich, A.},
  journal                    = {Software and Systems Modeling},
  title                      = {Analysis of variability models: a systematic literature review},
  year                       = {2020},
  issn                       = {{1619-1366}},
  abstract                   = {Dealing with variability, during Software Product Line Engineering (SPLE), means trying to allow software engineers to develop a set of similar applications based on a manageable range of variable functionalities according to expert users’ needs. Particularly, variability management (VM) is an activity that allows flexibility and a high level of reuse during software development. In the last years, we have witnessed a proliferation of methods, techniques and supporting tools for VM in general, and for its analysis in particular. More precisely, a specific field has emerged, named (automated) variability analysis, focusing on verifying variability models across the SPLE’s phases. In this paper, we introduce a systematic literature review of existing proposals (as primary studies) focused on analyzing variability models. We define a classification framework, which is composed of 20 sub-characteristics addressing general aspects, such as scope and validation, as well as model-specific aspects, such as variability primitives, reasoner type. The framework allows to look at the analysis of variability models during its whole life cycle—from design to derivation—according to the activities involved during an SPL development. Also, the framework helps us answer three research questions defined for showing the state of the art and drawing challenges for the near future. Among the more interesting challenges, we can highlight the needs of more applications in industry, the existence of more mature tools, and the needs of providing more semantics in the way of variability primitives for identifying inconsistencies in the models. © 2020, Springer-Verlag GmbH Germany, part of Springer Nature.},
  address                    = {{TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY}},
  affiliation                = {GIISCO Research Group, Departamento de Ingeniería de Sistemas - Facultad de Informática, Universidad Nacional del Comahue, Buenos Aires 1400, Neuquén, 8300, Argentina},
  author-email               = {{agustina.buccella@fi.uncoma.edu.ar}},
  author_keywords            = {software product line, supporting tools, variability analysis, variability management},
  doi                        = {10.1007/s10270-020-00839-w},
  groups                     = {includes, variability modeling, systematic literature review, analysis, software product lines, variability management},
  journal-iso                = {{Softw. Syst. Model.}},
  keywords                   = {application programs, computer software reusability, life cycle, semantics, classification framework, research questions, software product line engineering(sple), systematic literature review, variability analysis, variability management, variability model, whole life cycles, software design},
  number-of-cited-references = {{83}},
  publisher                  = {Springer Science and Business Media Deutschland GmbH},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Edded2019a,
  author                     = {Edded, S. and Sassi, S.B. and Mazo, R. and Salinesi, C. and Ghezala, H.B.},
  journal                    = {Journal of Systems and Software},
  title                      = {Collaborative configuration approaches in software product lines engineering: A systematic mapping study},
  year                       = {2019},
  issn                       = {{0164-1212}},
  month                      = {{DEC}},
  volume                     = {158},
  abstract                   = {In the context of software product line engineering, collaborative configuration is a decision-making process where multiple stakeholders contribute in building a single product specification. Several approaches addressing collaboration during configuration have already been proposed, but we still have little hard evidence about their effectiveness and little understanding about how collaborative configuration process should be carried out. This paper presents a classification framework to help understand existing collaborative configuration approaches. To elaborate it, a systematic mapping study was conducted guided by three research questions and 41 primary studies was selected out of 238 identified ones. The proposed framework is composed of four dimensions capturing main aspects related to configuration approaches: purpose, collaboration, process and tool. Each dimension is itself multi-faceted and a set of attributes is associated to each facet. Using this framework, we position and classify existing approaches, structure the representation of each approach characteristics, highlight their strengths and weaknesses, compare them to each other, and identify open issues. This study gives a solid foundation for classifying existing and future approaches for product lines collaborative configuration. Researchers and practitioners can use our framework for identifying existing research/technical gaps to attack, better scoping their own contributions, or understanding existing ones. © 2019},
  address                    = {{STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA}},
  affiliation                = {Centre de recherche en Informatique (CRI), Université Panthéon Sorbonne, Paris, France; MIS Department - CBA, University of Taibah, P.O. Box 344, Al-Madinah, Saudi Arabia; RIADI Lab., National School of Computer Sciences, Manouba University, Tunisia; GIDITIC, Universidad Eafit, Medellin, Colombia; ULab-STICC, ENSTA Bretagne, Brest, France},
  art_number                 = {110422},
  article-number             = {{110422}},
  author-email               = {{sabrineedded@gmail.com raul.mazo@univ-parisl.fr camille.salinesi@univ-parisl.fr henda.benghezala@ensi.rnu.tn}},
  author_keywords            = {collaborative configuration, framework, product lines, systematic mapping study},
  doi                        = {10.1016/j.jss.2019.110422},
  groups                     = {includes, configuration, collaboration, software product lines, systematic mapping study},
  journal-iso                = {{J. Syst. Softw.}},
  keywords                   = {computer software, decision making, software design, classification framework, collaborative configuration, decision making process, framework, product-lines, software product line, software product line engineerings, systematic mapping studies, mapping, systematic mapping study},
  number-of-cited-references = {{54}},
  orcid-numbers              = {{Ben Ghezala, Henda Hajjami/0000-0002-6874-1388}},
  publisher                  = {Elsevier Inc.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Nogueirateixeira2019a,
  author                     = {Nogueira Teixeira, E. and Aleixo, F.A. and Amâncio, F.D.D.S. and Oliveira Jr, E. and Kulesza, U. and Werner, C.},
  journal                    = {Information and Software Technology},
  title                      = {Software process line as an approach to support software process reuse: A systematic literature review},
  year                       = {2019},
  issn                       = {{0950-5849}},
  month                      = {{DEC}},
  volume                     = {116},
  abstract                   = {Context: Software Process Line (SPrL) aims at providing a systematic reuse technique to support reuse experiences and knowledge in the definition of software processes for new projects thus contributing to reduce effort and costs and to achieve improvements in quality. Although the research body in SPrL is expanding, it is still an immature area with results offering an overall view scattered with no consensus. Objective: The goal of this work is to identify existing approaches for developing, using, managing and visualizing the evolution of SPrLs and to characterize their support, especially during the development of reusable process family artefacts, including an overview of existing SPrL supporting tools in their multiple stages; to analyse variability management and component-based aspects in SPrL; and, finally, to list practical examples and conducted evaluations. This research aims at reaching a broader and more consistent view of the research area and to provide perspectives and gaps for future research. Method: We performed a systematic literature review according to well-established guidelines set. We used tools to partially support the process, which relies on a six-member research team. Results: We report on 49 primary studies that deal mostly with conceptual or theoretical proposals and the domain engineering stage. Years 2014, 2015, and 2018 yielded the largest number of articles. This can indicate SPrL as a recent research theme and one that attracts ever-increasing interest. Conclusion: Although this research area is growing, there is still a lack of practical experiences and approaches for actual applications or project-specific process derivations and decision-making support. The concept of an integrated reuse infrastructure is less discussed and explored; and the development of integrated tools to support all reuse stages is not fully addressed. Other topics for future research are discussed throughout the paper with gaps pointed as opportunities for improvements in the area. © 2019},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Federal University of Rio de Janeiro, Rio de Janeiro, RJ, Brazil; Federal Institute of Rio Grande do Norte, Natal, RN, Brazil; University of Fortaleza, Fortaleza, CE, Brazil; State University of Maringá (UEM), Maringá, PR, Brazil; Federal University of Rio Grande do Norte, Natal, RN, Brazil},
  art_number                 = {106175},
  article-number             = {{106175}},
  author-email               = {{danny@cos.ufrj.br}},
  author_keywords            = {process reuse, process variability management, software process, software process line, systematic review},
  doi                        = {10.1016/j.infsof.2019.08.007},
  groups                     = {includes, software process lines, systematic literature review, reuse},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {decision making, decision making support, practical experience, process reuse, process variability, software process, systematic literature review, systematic review, variability management, computer software reusability},
  number-of-cited-references = {{37}},
  orcid-numbers              = {{OliveiraJr, Edson/0000-0002-4760-1626 Lima Werner, Claudia Maria/0000-0002-4231-9621}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Raatikainen2019a,
  author                     = {Raatikainen, M. and Tiihonen, J. and Männistö, T.},
  journal                    = {Journal of Systems and Software},
  title                      = {Software product lines and variability modeling: A tertiary study},
  year                       = {2019},
  issn                       = {{0164-1212}},
  month                      = {{MAR}},
  pages                      = {485-510},
  volume                     = {149},
  abstract                   = {Context: A software product line is a means to develop a set of products in which variability is a central phenomenon captured in variability models. The field of SPLs and variability have been topics of extensive research over the few past decades. Objective: This research characterizes systematic reviews (SRs) in the field, studies how SRs analyze and use evidence-based results, and identifies how variability is modeled. Method: We conducted a tertiary study as a form of systematic review. Results: 86 SRs were included. SRs have become a widely adopted methodology covering the field broadly otherwise except for variability realization. Numerous variability models exist that cover different development artifacts, but the evidence is insufficient in quantity and immature, and we argue for better evidence. SRs perform well in searching and selecting studies and presenting data. However, their analysis and use of the quality of and evidence in the primary studies often remains shallow, merely presenting of what kinds of evidence exist. Conclusions: There is a need for actionable, context-sensitive, and evaluated solutions rather than novel ones. Different kinds of SRs (SLRs and Maps) need to be better distinguished, and evidence and quality need to be better used in the resulting syntheses. © 2018},
  address                    = {{STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA}},
  affiliation                = {Department of Computer Science, Aalto University, Finland; Department of Computer Science, University of Helsinki, Finland},
  author-email               = {{mikko.raatikainen@aalto.fi juha.tiihonen@helsinki.fi tomi.mannisto@helsinki.fi}},
  author_keywords            = {mapping study, software product line, systematic literature review, tertiary study, variability, variability modeling},
  doi                        = {10.1016/j.jss.2018.12.027},
  groups                     = {includes, software product lines, variability modeling, tertiary literature study},
  journal-iso                = {{J. Syst. Softw.}},
  keywords                   = {computer software, software design, mapping studies, software product line, systematic literature review, tertiary study, variability, variability model, quality control},
  number-of-cited-references = {{50}},
  orcid-numbers              = {{Tiihonen, Juha/0000-0003-2558-691X Raatikainen, Mikko/0000-0002-2410-0722 Mannisto, Tomi/0000-0001-7470-5183}},
  publisher                  = {Elsevier Inc.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Elsharkawy2019c,
  author                     = {El-Sharkawy, S. and Yamagishi-Eichler, N. and Schmid, K.},
  journal                    = {Information and Software Technology},
  title                      = {Metrics for analyzing variability and its implementation in software product lines: A systematic literature review},
  year                       = {2019},
  issn                       = {{0950-5849}},
  month                      = {{FEB}},
  pages                      = {1-30},
  volume                     = {106},
  abstract                   = {Context: Software Product Line (SPL) development requires at least concepts for variability implementation and variability modeling for deriving products from a product line. These variability implementation concepts are not required for the development of single systems and, thus, are not considered in traditional software engineering. Metrics are well established in traditional software engineering, but existing metrics are typically not applicable to SPLs as they do not address variability management. Over time, various specialized product line metrics have been described in literature, but no systematic description of these metrics and their characteristics is currently available. Objective: This paper describes and analyzes variability-aware metrics, designed for the needs of software product lines. More precisely we restrict the scope of our study explicitly to metrics designed for variability models, code artifacts, and metrics taking both kinds of artifacts into account. Further, we categorize the purpose for which these metrics were developed. We also analyze to what extent these metrics were evaluated to provide a basis for researchers for selecting adequate metrics. Method: We conducted a systematic literature review to identify variability-aware implementation metrics. We discovered 42 relevant papers reporting metrics intended to measure aspects of variability models or code artifacts. Results: We identified 57 variability model metrics, 34 annotation-based code metrics, 46 code metrics specific to composition-based implementation techniques, and 10 metrics integrating information from variability model and code artifacts. For only 31 metrics, an evaluation was performed assessing their suitability to draw any qualitative conclusions. Conclusions: We observed several problematic issues regarding the definition and the use of the metrics. Researchers and practitioners benefit from the catalog of variability-aware metrics, which is the first of its kind. Also, the research community benefits from the identified observations in order to avoid those problems when defining new metrics. © 2018 Elsevier B.V.},
  address                    = {{PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS}},
  affiliation                = {University of Hildesheim, Institute of Computer Science, Software Systems Engineering, Universitätsplatz 1, Hildesheim, 31141, Germany},
  author-email               = {{elscha@sse.uni-hildesheim.de schmid@sse.uni-hildesheim.de}},
  author_keywords            = {implementation, metrics, software product lines, spl, systematic literature review},
  doi                        = {10.1016/j.infsof.2018.08.015},
  groups                     = {includes, metrics, implementation, analysis, systematic literature review, software product lines},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {codes (symbols), computer software, implementation, implementation techniques, integrating information, metrics, software product line, software product line (spl), systematic literature review, variability management, software design},
  number-of-cited-references = {{75}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Marques2019a,
  author                     = {Marques, M. and Simmonds, J. and Rossel, P.O. and Bastarrica, M.C.},
  journal                    = {Information and Software Technology},
  title                      = {Software product line evolution: A systematic literature review},
  year                       = {2019},
  issn                       = {{0950-5849}},
  month                      = {{JAN}},
  pages                      = {190-208},
  volume                     = {105},
  abstract                   = {Context: Software Product Lines (SPL) evolve when there are changes in the requirements, product structure or the technology being used. Different approaches have been proposed for managing SPL assets and some also address how evolution affects these assets. Existing mapping studies have focused on specific aspects of SPL evolution, but there is no cohesive body of work that gives an overview of the area as a whole. Objective: The goals of this work are to review the characteristics of the approaches reported as supporting SPL evolution, and to synthesize the evidence provided by primary studies about the nature of their processes, as well as how they are reported and validated. Method: We conducted a systematic literature review, considering six research questions formulated to evaluate evolution approaches for SPL. We considered journal, conference and workshop papers published up until March 2017 in leading digital libraries for computer science. Results: After a thorough analysis of the papers retrieved from the digital libraries, we ended up with a set of 60 primary studies. Feature models are widely used to represent SPLs, so feature evolution is frequently addressed. Other assets are less frequently addressed. The area has matured over time: papers presenting more rigorous work are becoming more common. The processes used to support SPL evolution are systematic, but with a low level of automation. Conclusions: Our research shows that there is no consensus about SPL formalization, what assets can evolve, nor how and when these evolve. Case studies are quite popular, but few industrial-sized case studies are publicly available. Also, few of the proposed techniques offer tool support. We believe that the SPL community needs to work together to improve the state of the art, creating methods and tools that support SPL evolution in a more comparable manner. © 2018 Elsevier B.V.},
  address                    = {{PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS}},
  affiliation                = {Departamento de Ciencias de la Computación, Universidad de Chile, Beauchef, Santiago 851, Chile; Departamento de Ingeniería Informática, Universidad Católica de la Santísima Concepción, Alonso de Ribera 2850, Concepción, Chile},
  author-email               = {{mmarques@dcc.uchile.cl jsimmond@dcc.uchile.cl prossel@ucsc.cl cecilia@dcc.uchile.cl}},
  author_keywords            = {evolution, software product line, software reuse, systematic literature review},
  doi                        = {10.1016/j.infsof.2018.08.014},
  groups                     = {includes, evolution, reuse, software product lines, systematic literature review},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {computer software reusability, software design, evolution, level of automations, product structure, research questions, software product line, software product line (spl), software product line evolutions, systematic literature review, digital libraries},
  number-of-cited-references = {{83}},
  orcid-numbers              = {{Rossel, Pedro O./0000-0001-5027-936X SAMARY, MAIRA MARQUES/0000-0001-5347-1664}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Ochoa2018a,
  author                     = {Ochoa, L. and González-Rojas, O. and Juliana, A.P. and Castro, H. and Saake, G.},
  journal                    = {Journal of Systems and Software},
  title                      = {A systematic literature review on the semi-automatic configuration of extended product lines},
  year                       = {2018},
  issn                       = {{0164-1212}},
  month                      = {{OCT}},
  pages                      = {511-532},
  volume                     = {144},
  abstract                   = {Product line engineering has become essential in mass customisation given its ability to reduce production costs and time to market, and to improve product quality and customer satisfaction. In product line literature, mass customisation is known as product configuration. Currently, there are multiple heterogeneous contributions in the product line configuration domain. However, a secondary study that shows an overview of the progress, trends, and gaps faced by researchers in this domain is still missing. In this context, we provide a comprehensive systematic literature review to discover which approaches exist to support the configuration process of extended product lines and how these approaches perform in practice. Extend product lines consider non-functional properties in the product line modelling. We compare and classify a total of 66 primary studies from 2000 to 2016. Mainly, we give an in-depth view of techniques used by each work, how these techniques are evaluated and their main shortcomings. As main results, our review identified (i) the need to improve the quality of the evaluation of existing approaches, (ii) a lack of hybrid solutions to support multiple configuration constraints, and (iii) a need to improve scalability and performance conditions. © 2018 Elsevier Inc.},
  address                    = {{STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA}},
  affiliation                = {Universidad de los Andes, Systems and Computing Engineering Department, School of Engineering, Bogotá, Colombia; University of Magdeburg, Department of Technical and Business Information Systems, School of Computer Science, Magdeburg, Germany; Centrum Wiskunde & Informatica, Software Analysis & Transformation Group, Amsterdam, Netherlands},
  author-email               = {{lm.ochoa750@uniandes.edu.co o-gonza1@uniandes.edu.co juliana.alves-pereira@ovgu.de hcastro@uniandes.edu.co gunter.saake@ovgu.de}},
  author_keywords            = {extended product line, product configuration, systematic literature review},
  doi                        = {10.1016/j.jss.2018.07.054},
  groups                     = {includes, configuration, systematic literature review, extended product lines},
  journal-iso                = {{J. Syst. Softw.}},
  keywords                   = {cost engineering, customer satisfaction, configuration process, extended product, multiple configurations, non functional properties, product configuration, product line engineering, scalability and performance, systematic literature review, quality control},
  number-of-cited-references = {{123}},
  orcid-numbers              = {{Castro, Harold/0000-0002-7586-9419 Gonzalez-Rojas, Oscar/0000-0002-8296-6620}},
  publisher                  = {Elsevier Inc.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Soares2018a,
  author                     = {Soares, L.R. and Schobbens, P.-Y. and do Carmo Machado, I. and de Almeida, E.S.},
  journal                    = {Information and Software Technology},
  title                      = {Feature interaction in software product line engineering: A systematic mapping study},
  year                       = {2018},
  issn                       = {{0950-5849}},
  month                      = {{JUN}},
  pages                      = {44-58},
  volume                     = {98},
  abstract                   = {Context: Software product lines (SPL) engineering defines a set of systems that share common features and artifacts to achieve high productivity, quality, market agility, low time to market, and cost. An SPL product is derived from a configuration of features which need to be compounded together without violating their particular specifications. While it is easy to identify the behavior of a feature in isolation, specifying and resolving interactions among features may not be a straightforward task. The feature interaction problem has been a challenging subject for decades. Objective: This study aims at surveying existing research on feature interaction in SPL engineering in order to identify common practices and research trends. Method: A systematic mapping study was conducted with a set of seven research questions, in which the 35 studies found are mainly classified regarding the feature interaction solution presented: detection, resolution and general analysis. Results: 43% of the papers deal with feature interaction at early phases of a software lifecycle. The remaining is shared among the other categories: source code detection, resolution and analysis. For each category, it was also identified the main strategies used to deal with interactions. Conclusions: The findings can help to understand the needs in feature interaction for SPL engineering, and highlight aspects that still demand an additional investigation. For example, often strategies are partial and only address specific points of a feature interaction investigation. © 2018 Elsevier B.V.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Computer Science Department, Federal University of Bahia, Salvador, BA, Brazil; RiSE - Reuse in Software Engineering, Salvador, BA, Brazil; University of Namur, Belgium},
  author-email               = {{larissars@dcc.com.br}},
  author_keywords            = {feature interaction, software product lines, systematic mapping},
  doi                        = {10.1016/j.infsof.2018.01.016},
  groups                     = {includes, feature interaction, systematic mapping study, software product lines},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {commerce, computer software, mapping, software design, feature interactions, research questions, software life cycles, software product line, software product line engineerings, software product lines, systematic mapping, systematic mapping studies, cost engineering},
  number-of-cited-references = {{62}},
  orcid-numbers              = {{Machado, Ivan/0000-0001-9027-2293 Schobbens, Pierre-Yves/0000-0001-8677-4485 Machado, Ivan/0000-0001-9027-2293}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Lopezherrejon2018b,
  author                     = {Lopez-Herrejon, R.E. and Illescas, S. and Egyed, A.},
  journal                    = {Journal of Software: Evolution and Process},
  title                      = {A systematic mapping study of information visualization for software product line engineering},
  year                       = {2018},
  issn                       = {{2047-7473}},
  month                      = {{FEB}},
  number                     = {2},
  volume                     = {30},
  abstract                   = {Software product lines (SPLs) are families of related systems whose members are distinguished by the set of features they provide. Over 2 decades of research and practice can attest to the substantial benefits of applying SPL practices such as better customization, improved software reuse, and faster time to market. Software product line engineering (SPLE) refers to the paradigm of developing SPLs. Typical SPLE efforts involve a large number of features that are combined to form also large numbers of products, implemented using multiple and different types of software artifacts. Because of the sheer amount of information and its complexity, visualization techniques have been used for different SPLE activities. In this paper, we present an extended systematic mapping study on this subject. Our research questions aim to gather information regarding the techniques that have been applied, at what SPLE activities, how they were implemented, the publication fora used, the methods of empirical evaluation, and the provenance of the evaluation examples. Our driving goal is to identify common trends, gaps, and opportunities for further research and application. Copyright © 2017 John Wiley & Sons, Ltd.},
  address                    = {{111 RIVER ST, HOBOKEN 07030-5774, NJ USA}},
  affiliation                = {École de technologie supérieure, Université du Québec, Montreal, Canada; Johannes Kepler University Linz, Linz, Austria},
  art_number                 = {e1912},
  article-number             = {{e1912}},
  author-email               = {{roberto.lopez@etsmtl.ca}},
  author_keywords            = {software product line engineering, software product lines, systematic mapping study, visualization},
  doi                        = {10.1002/smr.1912},
  groups                     = {includes, software product lines, systematic mapping study, visualization},
  journal-iso                = {{J. Softw.-Evol. Proc.}},
  keywords                   = {computer software, flow visualization, information systems, mapping, software design, visualization, information visualization, research and application, software product line, software product line (spls), software product line engineering(sple), software product line engineerings, systematic mapping studies, visualization technique, computer software reusability},
  number-of-cited-references = {{92}},
  orcid-numbers              = {{Egyed, Alexander/0000-0003-3128-5427}},
  publisher                  = {John Wiley and Sons Ltd},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Assuncao2017a,
  author                     = {Assunção, W.K.G. and Lopez-Herrejon, R.E. and Linsbauer, L. and Vergilio, S.R. and Egyed, A.},
  journal                    = {Empirical Software Engineering},
  title                      = {Reengineering legacy applications into software product lines: a systematic mapping},
  year                       = {2017},
  issn                       = {{1382-3256}},
  month                      = {{DEC}},
  number                     = {6},
  pages                      = {2972-3016},
  volume                     = {22},
  abstract                   = {Software Product Lines (SPLs) are families of systems that share common assets allowing a disciplined reuse. Rarely SPLs start from scratch, instead they usually start from a set of existing systems that undergo a reengineering process. Many approaches to conduct the reengineering process have been proposed and documented in research literature. This scenario is a clear testament to the interest in this research area. We conducted a systematic mapping study to provide an overview of the current research on reengineering of existing systems to SPLs, identify the community activity in regarding of venues and frequency of publications in this field, and point out trends and open issues that could serve as references for future research. This study identified 119 relevant publications. These primary sources were classified in six different dimensions related to reengineering phases, strategies applied, types of systems used in the evaluation, input artefacts, output artefacts, and tool support. The analysis of the results points out the existence of a consolidate community on this topic and a wide range of strategies to deal with different phases and tasks of the reengineering process, besides the availability of some tools. We identify some open issues and areas for future research such as the implementation of automation and tool support, the use of different sources of information, need for improvements in the feature management, the definition of ways to combine different strategies and methods, lack of sophisticated refactoring, need for new metrics and measures and more robust empirical evaluation. Reengineering of existing systems into SPLs is an active research topic with real benefits in practice. This mapping study motivates new research in this field as well as the adoption of systematic reuse in software companies. © 2017, Springer Science+Business Media New York.},
  address                    = {{VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS}},
  affiliation                = {DInf, Federal University of Paraná (UFPR), CP: 19081, CEP: 81.531-980, Curitiba, Brazil; COTSI, Federal University of Technology - Paraná (UTFPR), Cristo Rei Street, 19. CEP: 85.902-490, Toledo, Brazil; Department of Software Engineering and IT, École de Technologie Supérieure, (ÉTS), Notre-Dame Street Ouest. 1100, Montreal, H3C 1K3, Canada; ISSE, Johannes Kepler University Linz (JKU), Altenbergerstr. 69, Linz, 4040, Austria},
  author-email               = {{wesleyk@inf.ufpr.br roberto.lopez@etsmtl.ca lukas.linsbauer@jku.at silvia@inf.ufpr.br alexander.egyed@jku.at}},
  author_keywords            = {evolution, legacy systems, product family, reengineering, systematic reuse},
  doi                        = {10.1007/s10664-017-9499-z},
  groups                     = {includes, evolution, reuse, reengineering, legacy systems, systematic mapping study, software product lines},
  journal-iso                = {{Empir. Softw. Eng.}},
  keywords                   = {application programs, computer software, computer software reusability, mapping, reengineering, empirical evaluations, evolution, product families, software product line, software product line (spls), sources of informations, systematic mapping studies, systematic reuse, legacy systems},
  number-of-cited-references = {{156}},
  orcid-numbers              = {{Egyed, Alexander/0000-0003-3128-5427 Assuncao, Wesley Klewerton Guez/0000-0002-7557-9091}},
  publisher                  = {Springer New York LLC},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Conference{Hohl2017a,
  author                     = {Hohl, P. and Ghofrani, J. and Münch, J. and Stupperich, M. and Schneider, K.},
  booktitle                  = {{ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS}},
  title                      = {Searching for common ground: Existing literature on automotive agile software product lines},
  year                       = {2017},
  address                    = {{1515 BROADWAY, NEW YORK, NY 10036-9998 USA}},
  editor                     = {Bendraou R., Maggi F.M., Raffo D., LiGuo H.},
  organization               = {{Assoc Comp Machinery; Int Software Proc Assoc; Univ Pierre \& Marie Curie; ACM SIGSOFT; Syst X; Criteo; Fraunhofer Inst Experimental Software Engn; Univ Southern Calif, Ctr Syst \& Software Engn}},
  pages                      = {70-79},
  publisher                  = {Association for Computing Machinery},
  volume                     = {Part F128767},
  abstract                   = {The digital transformation of the automotive industry has a signifi-cant impact on how development processes need to be organized in futurefi Dynamic market and technological environments require capabilities to react on changes and to learn fastfi Agile methods are a promising approach to address these needs but they are not tailored to the specific characteristics of the automotive domain like product line developmentfi Although, there have been efiorts to apply agile methods in the automotive domain for many years, significant and widespread adoptions have not yet taken placefi fie goal of this literature review is to gain an overview and a befier understanding of agile methods for embedded sofiware development in the automotive domain, especially with respect to product line developmentfi A mapping study was conducted to analyze the relation between agile sofiware development, embedded sofiware development in the automotive domain and sofiware product line developmentfi firee research questions were defined and 68 papers were evaluatedfi fie study shows that agile and product line development approaches tailored for the automotive domain are not yet fully explored in the literaturefi Especially, literature on the combination of agile and product line development is rarefi Most of the examined combinations are customizations of generic approaches or approaches stemming from other domainsfi Although, only few approaches for combining agile and sofiware product line development in the automotive domain were found, these findings were valuable for identifying research gaps and provide insights into how existing approaches can be combined, extended and tailored to suit the characteristics of the automotive domain. © 2017 ACM.},
  affiliation                = {Daimler AG, Research and Development, Germany; Leibniz Universität Hannover, Germany; Reutlingen University, Germany; University of Helsinki, Finland},
  author-email               = {{philipp.hohl@daimler.com javad.ghofrani@inf.uni-hannover.de juergen.muench@reutlingen-university.de michael.stupperich@daimler.com kurt.schneider@inf.uni-hannover.de}},
  author_keywords            = {agile methods, automotive, literature review, software product line},
  doi                        = {10.1145/3084100.3084109},
  groups                     = {includes, automotive, manufacturing, agile, systematic mapping study, software product lines},
  isbn                       = {{978-1-4503-5270-3}},
  journal                    = {ACM International Conference Proceeding Series},
  keywords                   = {automotive industry, computer software, software design, agile methods, automotive, development process, digital transformation, literature reviews, product line development, software product line, technological environment, agile manufacturing systems},
  number-of-cited-references = {{73}},
  orcid-numbers              = {{Munch, Jurgen/0000-0003-0327-8094}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Larosa2017a,
  author                     = {La Rosa, M. and Van Der Aalst, W.M.P. and Dumas, M. and Milani, F.P.},
  journal                    = {ACM Computing Surveys},
  title                      = {Business process variability modeling: A survey},
  year                       = {2017},
  issn                       = {{0360-0300}},
  month                      = {{APR}},
  number                     = {1},
  volume                     = {50},
  abstract                   = {It is common for organizations to maintain multiple variants of a given business process, such as multiple sales processes for different products or multiple bookkeeping processes for different countries. Conventional business process modeling languages do not explicitly support the representation of such families of process variants. This gap triggered significant research efforts over the past decade, leading to an array of approaches to business process variability modeling. In general, each of these approaches extends a conventional process modeling language with constructs to capture customizable process models. A customizable process model represents a family of process variants in a way that a model of each variant can be derived by adding or deleting fragments according to customization options or according to a domain model. This survey draws up a systematic inventory of approaches to customizable process modeling and provides a comparative evaluation with the aim of identifying common and differentiating modeling features, providing criteria for selecting among multiple approaches, and identifying gaps in the state of the art. The survey puts into evidence an abundance of customizable process-modeling languages, which contrasts with a relative scarcity of available tool support and empirical comparative evaluations. © 2017 ACM},
  address                    = {{2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA}},
  affiliation                = {Queensland University of Technology, GPO Box 2434, Brisbane, QLD 4001, Australia; Eindhoven University of Technology, PO Box 513, Eindhoven, NL-5600 MB, Netherlands; University of Tartu, J. Liivi 2, Tartu, 50409, Estonia},
  art_number                 = {2},
  article-number             = {{2}},
  author-email               = {{m.larosa@qut.edu.au w.m.p.v.d.aalst@tue.nl marlon.dumas@ut.ee milani@ut.ee}},
  author_keywords            = {a.1 [introductory and survey], customizable process model, design, h.4.1 [office automation]: workflow management, management, process model, standardization, variability modeling},
  doi                        = {10.1145/3041957},
  groups                     = {includes, business processes, variability modeling, survey},
  journal-iso                = {{ACM Comput. Surv.}},
  keywords                   = {design, management, office automation, process engineering, standardization, surveys, systems engineering, work simplification, business process modeling languages, comparative evaluations, introductory and survey, modeling features, process modeling, process modeling language, variability model, workflow managements, modeling languages},
  number-of-cited-references = {{70}},
  orcid-numbers              = {{van der Aalst, Wil/0000-0002-0955-6940 Dumas, Marlon/0000-0002-9247-7476}},
  publisher                  = {Association for Computing Machinery},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Montalvillo2016a,
  author                     = {Montalvillo, L. and Díaz, O.},
  journal                    = {Journal of Systems and Software},
  title                      = {Requirement-driven evolution in software product lines: A systematic mapping study},
  year                       = {2016},
  issn                       = {{0164-1212}},
  month                      = {{DEC}},
  pages                      = {110-143},
  volume                     = {122},
  abstract                   = {CONTEXT. Software Product Lines (SPLs) aim to support the development of a whole family of software products through systematic reuse of shared assets. As SPLs exhibit a long life-span, evolution is an even greater concern than for single-systems. For the purpose of this work, evolution refers to the adaptation of the SPL as a result of changing requirements. Hence, evolution is triggered by requirement changes, and not by bug fixing or refactoring. OBJECTIVE. Research on SPL evolution has not been previously mapped. This work provides a mapping study along Petersen's and Kichenham's guidelines, to identify strong areas of knowledge, trends and gaps. RESULTS. We identified 107 relevant contributions. They were classified according to four facets: evolution activity (e.g., identify, analyze and plan, implement), product-derivation approach (e.g., annotation-based, composition-based), research type (e.g., solution, experience, evaluation), and asset type (i.e., variability model, SPL architecture, code assets and products). CONCLUSION. Analyses of the results indicate that “Solution proposals” are the most common type of contribution (31%). Regarding the evolution activity, “Implement change” (43%) and “Analyze and plan change” (37%) are the most covered ones. A finer-grained analysis uncovered some tasks as being underexposed. A detailed description of the 107 papers is also included. © 2016 Elsevier Inc.},
  address                    = {{STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA}},
  affiliation                = {University of the Basque Country (UPV/EHU), ONEKIN Research Group - Facultad de Informática - San Sebastián, Spain},
  author-email               = {{leticia.montalvillo@ehu.eus oscar.diaz@ehu.eus}},
  author_keywords            = {evolution, software product lines, systematic mapping study},
  doi                        = {10.1016/j.jss.2016.08.053},
  groups                     = {includes, evolution, requirements engineering, systematic mapping study},
  journal-iso                = {{J. Syst. Softw.}},
  keywords                   = {mapping, evolution, product derivation, requirement change, requirement-driven, software product line, software product line (spls), software products, systematic mapping studies, computer software reusability},
  number-of-cited-references = {{208}},
  orcid-numbers              = {{Montalvillo Mendizabal, Leticia/0000-0003-0380-9051}},
  publisher                  = {Elsevier Inc.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Mendezacuna2016a,
  author                     = {Méndez-Acuña, D. and Galindo, J.A. and Degueule, T. and Combemale, B. and Baudry, B.},
  journal                    = {Computer Languages, Systems and Structures},
  title                      = {Leveraging Software Product Lines Engineering in the development of external DSLs: A systematic literature review},
  year                       = {2016},
  issn                       = {{1477-8424}},
  month                      = {{NOV}},
  pages                      = {206-235},
  volume                     = {46},
  abstract                   = {The use of domain-specific languages (DSLs) has become a successful technique in the development of complex systems. Consequently, nowadays we can find a large variety of DSLs for diverse purposes. However, not all these DSLs are completely different; many of them share certain commonalities coming from similar modeling patterns – such as state machines or petri nets – used for several purposes. In this scenario, the challenge for language designers is to take advantage of the commonalities existing among similar DSLs by reusing, as much as possible, formerly defined language constructs. The objective is to leverage previous engineering efforts to minimize implementation from scratch. To this end, recent research in software language engineering proposes the use of product line engineering, thus introducing the notion of language product lines. Nowadays, there are several approaches that result useful in the construction of language product lines. In this article, we report on an effort for organizing the literature on language product line engineering. More precisely, we propose a definition for the life-cycle of language product lines, and we use it to analyze the capabilities of current approaches. In addition, we provide a mapping between each approach and the technological space it supports. © 2016 Elsevier Ltd},
  address                    = {{THE BOULEVARD, LANGFORD LANE, KIDLINGTON, OXFORD OX5 1GB, ENGLAND}},
  affiliation                = {INRIA/IRISA, France; University of Rennes 1, France},
  author-email               = {{david.mendez-acuna@inria.fr jagalindo@inria.fr thomas.degueule@inria.fr benoit.combemale@inria.fr benoit.baudry@inria.fr}},
  author_keywords            = {domain-specific languages, software language engineering, software product lines engineering, variability management},
  doi                        = {10.1016/j.cl.2016.09.004},
  groups                     = {includes, domain-specific languages, systematic literature review, software product lines, variability management},
  journal-iso                = {{Comput. Lang. Syst. Struct.}},
  keywords                   = {computer software, digital subscriber lines, petri nets, problem oriented languages, domain specific languages, language constructs, product line engineering, software languages, software product line, systematic literature review, technological spaces, variability management, life cycle},
  number-of-cited-references = {{109}},
  orcid-numbers              = {{Galindo, Jose A/0000-0001-9293-9784 Degueule, Thomas/0000-0002-5961-7940}},
  publisher                  = {Elsevier Ltd},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Afzal2016a,
  author                     = {Afzal, U. and Mahmood, T. and Shaikh, Z.},
  journal                    = {Computer Standards and Interfaces},
  title                      = {Intelligent software product line configurations: A literature review},
  year                       = {2016},
  issn                       = {{0920-5489}},
  month                      = {{NOV}},
  number                     = {{SI}},
  pages                      = {30-48},
  volume                     = {48},
  abstract                   = {A software product line (SPL) is a set of industrial software-intensive systems for configuring similar software products in which personalized feature sets are configured by different business teams. The integration of these feature sets can generate inconsistencies that are typically resolved through manual deliberation. This is a time-consuming process and leads to a potential loss of business resources. Artificial intelligence (AI) techniques can provide the best solution to address this issue autonomously through more efficient configurations, lesser inconsistencies and optimized resources. This paper presents the first literature review of both research and industrial AI applications to SPL configuration issues. Our results reveal only 19 relevant research works which employ traditional AI techniques on small feature sets with no real-life testing or application in industry. We categorize these works in a typology by identifying 8 perspectives of SPL. We also show that only 2 standard industrial SPL tools employ AI in a limited way to resolve inconsistencies. To inject more interest and application in this domain, we motivate and present future research directions. Particularly, using real-world SPL data, we demonstrate how predictive analytics (a state of the art AI technique) can separately model inconsistent and consistent patterns, and then predict inconsistencies in advance to help SPL designers during the configuration of a product. © 2016 Published by Elsevier B.V.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Federal Urdu University of Arts Science and Technology, National University of Computer and Emerging Sciences, Department of Computer Science, Karachi, Pakistan; Karachi Institute of Economics and Technology, College of Computing and Information Sciences, Karachi, Pakistan},
  author-email               = {{k123501@nu.edu.pk mahmood@pafkiet.edu.pk zubair.shaikh@nu.edu.pk}},
  author_keywords            = {artificial intelligence, automated feature selection, inconsistencies, industrial spl tools, literature review, predictive analytics, software product line},
  doi                        = {10.1016/j.csi.2016.03.003},
  groups                     = {includes, artificial intelligence, configuration, systematic literature review, software product lines},
  journal-iso                = {{Comput. Stand. Interfaces}},
  keywords                   = {artificial intelligence, computer software, predictive analytics, automated features, future research directions, inconsistencies, intelligent software, literature reviews, optimized resources, software product line, software product line (spl), industrial research},
  number-of-cited-references = {{84}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Sepulveda2016a,
  author                     = {Sepúlveda, S. and Cravero, A. and Cachero, C.},
  journal                    = {Information and Software Technology},
  title                      = {Requirements modeling languages for software product lines: A systematic literature review},
  year                       = {2016},
  issn                       = {{0950-5849}},
  month                      = {{JAN}},
  pages                      = {16-36},
  volume                     = {69},
  abstract                   = {Context: Software product lines (SPLs) have reached a considerable level of adoption in the software industry, having demonstrated their cost-effectiveness for developing higher quality products with lower costs. For this reason, in the last years the requirements engineering community has devoted much effort to the development of a myriad of requirements modelling languages for SPLs. Objective: In this paper, we review and synthesize the current state of research of requirements modelling languages used in SPLs with respect to their degree of empirical validation, origin and context of use, level of expressiveness, maturity, and industry adoption. Method: We have conducted a systematic literature review with six research questions that cover the main objective. It includes 54 studies, published from 2000 to 2013. Results: The mean level of maturity of the modelling languages is 2.59 over 5, with 46% of them falling within level 2 or below -no implemented abstract syntax reported-. They show a level of expressiveness of 0.7 over 1.0. Some constructs (feature, mandatory, optional, alternative, exclude and require) are present in all the languages, while others (cardinality, attribute, constraint and label) are less common. Only 6% of the languages have been empirically validated, 41% report some kind of industry adoption and 71% of the languages are independent from any development process. Last but not least, 57% of the languages have been proposed by the academia, while 43% have been the result of a joint effort between academia and industry. Conclusions: Research on requirements modeling languages for SPLs has generated a myriad of languages that differ in the set of constructs provided to express SPL requirements. Their general lack of empirical validation and adoption in industry, together with their differences in maturity, draws the picture of a discipline that still needs to evolve. © 2015 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Departamento de Ciencias de la Computación e Informática, Centro de Estudios en Ingeniería de Software, Universidad de la Frontera, Casilla 54-DTemuco, Chile; Departamento de Lenguajes y Sistemas Informáticos, Universidad de Alicante, Spain},
  author-email               = {{samuel.sepulveda@ceisufro.cl ania.cravero@ufrontera.cl ccachero@dlsi.ua.es}},
  author_keywords            = {modeling languages, requirements engineering, software product lines, systematic literature review},
  doi                        = {10.1016/j.infsof.2015.08.007},
  groups                     = {includes, domain-specific languages, requirements engineering, software product lines, systematic literature review},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {computational linguistics, computer software, cost effectiveness, requirements engineering, software engineering, visual languages, development process, empirical validation, requirements modelling, requirements models, research questions, software product line, software product line (spls), systematic literature review, modeling languages},
  number-of-cited-references = {{100}},
  orcid-numbers              = {{Cuevas, Samuel Sepulveda/0000-0002-0369-7750 Castro, Cristina Cachero/0000-0001-6281-8287}},
  publisher                  = {Elsevier},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Conference{Dasilva2016a,
  author                     = {Da Silva, L.M.P. and Bezerra, C.I.M. and Andrade, R.M.C. and Monteiro, J.M.S.},
  booktitle                  = {{PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1 (ICEIS)}},
  title                      = {Requirements engineering and variability management in DSPLs domain engineering: A systematic literature review},
  year                       = {2016},
  address                    = {{AV D MANUELL, 27A 2 ESQ, SETUBAL, 2910-595, PORTUGAL}},
  editor                     = {Hammoudi S., Maciaszek L., Maciaszek L., Missikoff M.M., Camp O., Cordeiro J., Cordeiro J.},
  pages                      = {544-551},
  publisher                  = {SciTePress},
  volume                     = {1},
  abstract                   = {Recently, Software Product Lines (SPLs) have been used successfully for building products families. However, the currently and complex software products demand more adaptive features. Today, many application domains demand capabilities for flexible adaptation and post-deployment reconfiguration. In this context, Dynamic Software Product Lines (DSPLs) represent a way to produce software products able to change their own behavior at runtime due to the changes in the product use environment. DSPLs present some interesting properties such dynamic variability and reconfiguration at runtime. The dynamic variability is represented by the definition of variants and context information. The reconfiguration at runtime is the process that enables the features activation and deactivation in a configuration product. Both properties are closely related to the requirements engineering and variability management, in the domain engineering life-cycle. In this research, we provide a systematic literature review that aims to identify the activities, assets, tools and approaches that are used in requirements engineering and variability management in DSPLs domain engineering. We performed a manual and automatic search, resulting in 581 papers of which 37 were selected. We also provide a discussion about the challenges and solutions of runtime variability mechanisms in the context of DSPLs. Copyright © 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  affiliation                = {Federal University of Ceará (UFC), Quixadá Campus, Quixadá, CE, 63902-580, Brazil; Federal University of Ceará (UFC), Pici Campus, Fortaleza, CE, 60455-760, Brazil; Group of Computer Networks, Software Engineering and Systems (GREat), Pici Campus, Bloco 942-A, Fortaleza, CE, 60455-760, Brazil},
  author_keywords            = {dynamic software product line, requirements engineering, variability management},
  doi                        = {10.5220/0005872405440551},
  groups                     = {includes, dynamic software product lines, requirements engineering, systematic literature review},
  isbn                       = {{978-989-758-187-8}},
  journal                    = {ICEIS 2016 - Proceedings of the 18th International Conference on Enterprise Information Systems},
  keywords                   = {computer software, information systems, information use, life cycle, software design, context information, domain engineering, dynamic software product lines, dynamic variability, runtime variabilities, software product line (spls), systematic literature review, variability management, requirements engineering},
  number-of-cited-references = {{13}},
  orcid-numbers              = {{Maria de Castro Andrade, Rossana/0000-0002-0186-2994}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Eichelberger2015a,
  author                     = {Eichelberger, H. and Schmid, K.},
  journal                    = {International Journal on Software Tools for Technology Transfer},
  title                      = {Mapping the design-space of textual variability modeling languages: a refined analysis},
  year                       = {2015},
  issn                       = {{1433-2779}},
  month                      = {{OCT}},
  number                     = {5},
  pages                      = {559-584},
  volume                     = {17},
  abstract                   = {Variability modeling is a major part of modern product line engineering. Graphical or table-based approaches to variability modeling are focused around abstract models and specialized tools to interact with these models. However, more recently textual variability modeling languages, comparable to some extent to programming languages, were introduced. We consider the recent trend in product line engineering towards textual variability modeling languages as a phenomenon, which deserves deeper analysis. In this article, we report on the results and approach of a literature survey combined with an expert study. In the literature survey, we identified 11 languages, which enable the textual specification of product line variability and which are sufficiently described for an in-depth analysis. We provide a classification scheme, useful to describe the range of capabilities of such languages. Initially, we identified the relevant capabilities of these languages from a literature survey. The result of this has been refined, validated and partially improved by the expert survey. A second recent phenomenon in product line variability modeling is the increasing scale of variability models. Some authors of textual variability modeling languages argue that these languages are more appropriate for large-scale models. As a consequence, we would expect specific capabilities addressing scalability in the languages. Thus, we compare the capabilities of textual variability modeling techniques, if compared to graphical variability modeling approaches and in particular to analyze their specialized capabilities for large-scale models. © 2014, Springer-Verlag Berlin Heidelberg.},
  address                    = {{TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY}},
  affiliation                = {Software Systems Engineering, University of Hildesheim, Marienburger Platz 22, Hildesheim, 31141, Germany},
  author-email               = {{eichelberger@sse.uni-hildesheim.de schmid@sse.uni-hildesheim.de}},
  author_keywords            = {domain-specific languages, scalability, survey, variability modeling},
  doi                        = {10.1007/s10009-014-0362-x},
  groups                     = {includes, domain-specific languages, survey, variability modeling, software product lines},
  journal-iso                = {{Int. J. Softw. Tools Technol. Transf.}},
  keywords                   = {abstracting, computer programming languages, problem oriented languages, scalability, surveying, classification scheme, domain specific languages, in-depth analysis, large-scale models, literature survey, product line engineering, specialized tools, variability model, surveys},
  number-of-cited-references = {{76}},
  publisher                  = {Springer Verlag},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Lopezherrejon2015b,
  author                     = {Lopez-Herrejon, R.E. and Linsbauer, L. and Egyed, A.},
  journal                    = {Information and Software Technology},
  title                      = {A systematic mapping study of search-based software engineering for software product lines},
  year                       = {2015},
  issn                       = {{0950-5849}},
  month                      = {{MAY}},
  pages                      = {33-51},
  volume                     = {61},
  abstract                   = {Context Search-Based Software Engineering (SBSE) is an emerging discipline that focuses on the application of search-based optimization techniques to software engineering problems. Software Product Lines (SPLs) are families of related software systems whose members are distinguished by the set of features each one provides. SPL development practices have proven benefits such as improved software reuse, better customization, and faster time to market. A typical SPL usually involves a large number of systems and features, a fact that makes them attractive for the application of SBSE techniques which are able to tackle problems that involve large search spaces. Objective The main objective of our work is to identify the quantity and the type of research on the application of SBSE techniques to SPL problems. More concretely, the SBSE techniques that have been used and at what stage of the SPL life cycle, the type of case studies employed and their empirical analysis, and the fora where the research has been published. Method A systematic mapping study was conducted with five research questions and assessed 77 publications from 2001, when the term SBSE was coined, until 2014. Results The most common application of SBSE techniques found was testing followed by product configuration, with genetic algorithms and multi-objective evolutionary algorithms being the two most commonly used techniques. Our study identified the need to improve the robustness of the empirical evaluation of existing research, a lack of extensive and robust tool support, and multiple avenues worthy of further investigation. Conclusions Our study attested the great synergy existing between both fields, corroborated the increasing and ongoing interest in research on the subject, and revealed challenging open research questions. © 2015 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Institute for Software Systems Engineering, Johannes Kepler University Linz, Altenbergerstr. 69, Linz, 4040, Austria},
  author-email               = {{roberto.lopez@jku.at lukas.linsbauer@jku.at alexander.egyed@jku.at}},
  author_keywords            = {evolutionary algorithm, metaheuristics, search based software engineering, software product line, systematic mapping study},
  doi                        = {10.1016/j.infsof.2015.01.008},
  groups                     = {includes, search-based software, systematic mapping study, software product lines},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {computer software, computer software reusability, engineering research, evolutionary algorithms, genetic algorithms, life cycle, mapping, software design, software engineering, development practices, meta heuristics, multi objective evolutionary algorithms, search based optimizations, search-based software engineering, software product line, software product line (spls), systematic mapping studies, application programs},
  number-of-cited-references = {{152}},
  orcid-numbers              = {{Egyed, Alexander/0000-0003-3128-5427}},
  publisher                  = {Elsevier},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Bakar2015a,
  author                     = {Bakar, N.H. and Kasirun, Z.M. and Salleh, N.},
  journal                    = {Journal of Systems and Software},
  title                      = {Feature extraction approaches from natural language requirements for reuse in software product lines: A systematic literature review},
  year                       = {2015},
  issn                       = {{0164-1212}},
  month                      = {{AUG}},
  pages                      = {132-149},
  volume                     = {106},
  abstract                   = {Abstract Requirements for implemented system can be extracted and reused for a production of a new similar system. Extraction of common and variable features from requirements leverages the benefits of the software product lines engineering (SPLE). Although various approaches have been proposed in feature extractions from natural language (NL) requirements, no related literature review has been published to date for this topic. This paper provides a systematic literature review (SLR) of the state-of-the-art approaches in feature extractions from NL requirements for reuse in SPLE. We have included 13 studies in our synthesis of evidence and the results showed that hybrid natural language processing approaches were found to be in common for overall feature extraction process. A mixture of automated and semi-automated feature clustering approaches from data mining and information retrieval were also used to group common features, with only some approaches coming with support tools. However, most of the support tools proposed in the selected studies were not made available publicly and thus making it hard for practitioners' adoption. As for the evaluation, this SLR reveals that not all studies employed software metrics as ways to validate experiments and case studies. Finally, the quality assessment conducted confirms that practitioners' guidelines were absent in the selected studies. © 2015 Elsevier Inc. All rights reserved.},
  address                    = {{STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA}},
  affiliation                = {Department of Software Engineering, Faculty of Computer Science and Information Technology, University of Malaya, Kuala Lumpur, 50603, Malaysia; Department of ICT, Centre for Foundation Studies, International Islamic University Malaysia, Petaling Jaya Selangor, 46350, Malaysia; Department of Computer Science, Kulliyyah of Information and Communication Technology, International Islamic University Malaysia, Jalan Gombak, Kuala Lumpur, 53100, Malaysia},
  art_number                 = {9509},
  author-email               = {{noor.hasrina@gmail.com zarinahmk@um.edu.my norsaremah@iium.edu.my}},
  author_keywords            = {feature extractions, natural language requirements, requirements reuse, software product lines, systematic literature review},
  doi                        = {10.1016/j.jss.2015.05.006},
  groups                     = {includes, feature identification, reuse, requirements engineering, systematic literature review, software product lines},
  journal-iso                = {{J. Syst. Softw.}},
  keywords                   = {automation, computational linguistics, computer software, computer software reusability, extraction, feature extraction, natural language processing systems, experiments and case studies, natural language processing, natural language requirements, requirements reuse, software product line, state-of-the-art approach, systematic literature review, systematic literature review (slr), data mining},
  number-of-cited-references = {{73}},
  orcid-numbers              = {{k, zarinah m/0000-0003-1104-7712 }},
  publisher                  = {Elsevier Inc.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Ayora2015a,
  author                     = {Ayora, C. and Torres, V. and Weber, B. and Reichert, M. and Pelechano, V.},
  journal                    = {Information and Software Technology},
  title                      = {VIVACE: A framework for the systematic evaluation of variability support in process-aware information systems},
  year                       = {2015},
  issn                       = {{0950-5849}},
  month                      = {{JAN}},
  number                     = {1},
  pages                      = {248-276},
  volume                     = {57},
  abstract                   = {Context: The increasing adoption of process-aware information systems (PAISs) such as workflow management systems, enterprise resource planning systems, or case management systems, together with the high variability in business processes (e.g., sales processes may vary depending on the respective products and countries), has resulted in large industrial process model repositories. To cope with this business process variability, the proper management of process variants along the entire process lifecycle becomes crucial. Objective: The goal of this paper is to develop a fundamental understanding of business process variability. In particular, the paper will provide a framework for assessing and comparing process variability approaches and the support they provide for the different phases of the business process lifecycle (i.e., process analysis and design, configuration, enactment, diagnosis, and evolution). Method: We conducted a systematic literature review (SLR) in order to discover how process variability is supported by existing approaches. Results: The SLR resulted in 63 primary studies which were deeply analyzed. Based on this analysis, we derived the VIVACE framework. VIVACE allows assessing the expressiveness of a process modeling language regarding the explicit specification of process variability. Furthermore, the support provided by a process-aware information system to properly deal with process model variants can be assessed with VIVACE as well. Conclusions: VIVACE provides an empirically-grounded framework for process engineers that enables them to evaluate existing process variability approaches as well as to select that variability approach meeting their requirements best. Finally, it helps process engineers in implementing PAISs supporting process variability along the entire process lifecycle. © 2014 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Centro de Investigación en Métodos de Producción de Software, Universitat Politècnica de València, Camino de Vera s/n, València, 46022, Spain; Department of Computer Science, University of Innsbruck, Technikerstraße 21a, Innsbruck, 6020, Austria; Institute of Databases and Information Systems, University of Ulm, James-Franck-Ring, Ulm, 89069, Germany},
  author-email               = {{cayora@pros.upv.es vtorres@pros.upv.es barbara.weber@uibk.ac.at manfred.reichert@uni-ulm.de pele@pros.upv.es}},
  author_keywords            = {business process, business process variability, process family, process-aware information systems, systematic literature review},
  doi                        = {10.1016/j.infsof.2014.05.009},
  groups                     = {includes, business processes, systematic literature review, software process lines},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {enterprise resource management, enterprise resource planning, information systems, life cycle, management information systems, modeling languages, work simplification, business process, enterprise resource planning systems, process modeling language, process-aware information systems, systematic evaluation, systematic literature review, systematic literature review (slr), workflow management systems, information management},
  number-of-cited-references = {{130}},
  orcid-numbers              = {{Pelechano, Vicente/0000-0003-1090-230X Torres, Victoria/0000-0002-2039-2174 Weber, Barbara/0000-0002-6004-4860}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Machado2014a,
  author                     = {Machado, I.D.C. and McGregor, J.D. and Cavalcanti, Y.C. and De Almeida, E.S.},
  journal                    = {Information and Software Technology},
  title                      = {On strategies for testing software product lines: A systematic literature review},
  year                       = {2014},
  issn                       = {{0950-5849}},
  month                      = {{OCT}},
  number                     = {10},
  pages                      = {1183-1199},
  volume                     = {56},
  abstract                   = {Context Testing plays an important role in the quality assurance process for software product line engineering. There are many opportunities for economies of scope and scale in the testing activities, but techniques that can take advantage of these opportunities are still needed. Objective The objective of this study is to identify testing strategies that have the potential to achieve these economies, and to provide a synthesis of available research on SPL testing strategies, to be applied towards reaching higher defect detection rates and reduced quality assurance effort. Method We performed a literature review of two hundred seventy-six studies published from the year 1998 up to the 1st semester of 2013. We used several filters to focus the review on the most relevant studies and we give detailed analyses of the core set of studies. Results The analysis of the reported strategies comprised two fundamental aspects for software product line testing: the selection of products for testing, and the actual test of products. Our findings indicate that the literature offers a large number of techniques to cope with such aspects. However, there is a lack of reports on realistic industrial experiences, which limits the inferences that can be drawn. Conclusion This study showed a number of leveraged strategies that can support both the selection of products, and the actual testing of products. Future research should also benefit from the problems and advantages identified in this study. © 2014 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Computer Science Department, Federal University of Bahia, UFBA, Salvador, Brazil; School of Computing, Clemson University, Clemson, SC, United States; Federal Data Processing Service, SERPRO, Florianópolis, Brazil},
  author-email               = {{ivanmachado@dcc.ufba.br johnmc@cs.clemson.edu ycc@cin.ufpe.br esa@dcc.ufba.br}},
  author_keywords            = {software product lines, software quality, software testing, systematic literature review},
  doi                        = {10.1016/j.infsof.2014.04.002},
  groups                     = {includes, software product lines, quality, testing, systematic literature review},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {computer software selection and evaluation, quality assurance, software testing, economies of scope, industrial experience, quality assurance process, software product line, software product line engineerings, software product line testing, software quality, systematic literature review, software design},
  number-of-cited-references = {{46}},
  orcid-numbers              = {{Machado, Ivan/0000-0001-9027-2293 Machado, Ivan/0000-0001-9027-2293}},
  publisher                  = {Elsevier},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Santosrocha2013a,
  author                     = {Santos Rocha, R.D. and Fantinato, M.},
  journal                    = {Information and Software Technology},
  title                      = {The use of software product lines for business process management: A systematic literature review},
  year                       = {2013},
  issn                       = {{0950-5849}},
  month                      = {{AUG}},
  number                     = {8},
  pages                      = {1355-1373},
  volume                     = {55},
  abstract                   = {Context: Business Process Management (BPM) is a potential domain in which Software Product Line (PL) can be successfully applied. Including the support of Service-oriented Architecture (SOA), BPM and PL may help companies achieve strategic alignment between business and IT. Objective Presenting the results of a study undertaken to seek and assess PL approaches for BPM through a Systematic Literature Review (SLR). Moreover, identifying the existence of dynamic PL approaches for BPM. Method A SLR was conducted with four research questions formulated to evaluate PL approaches for BPM. Results 63 papers were selected as primary studies according to the criteria established. From these primary studies, only 15 papers address the specific dynamic aspects in the context evaluated. Moreover, it was found that PLs only partially address the BPM lifecycle since the last business process phase is not a current concern on the found approaches. Conclusions The found PL approaches for BPM only cover partially the BPM lifecycle, not taking into account the last phase which restarts the lifecycle. Moreover, no wide dynamic PL proposal was found for BPM, but only the treatment of specific dynamic aspects. The results indicate that PL approaches for BPM are still at an early stage and gaining maturity. © 2013 Elsevier B.V. All rights reserved.},
  address                    = {{PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS}},
  affiliation                = {School of Arts, Sciences and Humanities, University of São Paulo, Rua Arlindo Béttio, 1000, 03828-000 São Paulo, SP, Brazil},
  author-email               = {{rsrocha@usp.br m.fantinato@usp.br}},
  author_keywords            = {bpm, business process management, pl, software product line},
  doi                        = {10.1016/j.infsof.2013.02.007},
  groups                     = {includes, business processes, systematic literature review, software process lines},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {bpm, business process management, pl, research questions, software product line, strategic alignment, systematic literature review, systematic literature review (slr), computer software, information services, life cycle, service oriented architecture (soa), software design, enterprise resource management},
  number-of-cited-references = {{112}},
  orcid-numbers              = {{Fantinato, Marcelo/0000-0001-6261-1497 Rocha, Roberto/0000-0003-2013-2134}},
  publisher                  = {{ELSEVIER SCIENCE BV}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Laguna2013a,
  author                     = {Laguna, M.A. and Crespo, Y.},
  journal                    = {Science of Computer Programming},
  title                      = {A systematic mapping study on software product line evolution: From legacy system reengineering to product line refactoring},
  year                       = {2013},
  issn                       = {{0167-6423}},
  month                      = {{AUG 1}},
  number                     = {8},
  pages                      = {1010-1034},
  volume                     = {78},
  abstract                   = {Software product lines (SPLs) are used in industry to develop families of similar software systems. Legacy systems, either highly configurable or with a story of versions and local variations, are potential candidates for reconfiguration as SPLs using reengineering techniques. Existing SPLs can also be restructured using specific refactorings to improve their internal quality. Although many contributions (including industrial experiences) can be found in the literature, we lack a global vision covering the whole life cycle of an evolving product line. This study aims to survey existing research on the reengineering of legacy systems into SPLs and the refactoring of existing SPLs in order to identify proven approaches and pending challenges for future research in both subfields. We launched a systematic mapping study to find as much literature as possible, covering the diverse terms involved in the search string (restructuring, refactoring, reengineering, etc. always connected with SPLs) and filtering the papers using relevance criteria. The 74 papers selected were classified with respect to several dimensions: main focus, research and contribution type, academic or industrial validation if included, etc. We classified the research approaches and analyzed their feasibility for use in industry. The results of the study indicate that the initial works focused on the adaptation of generic reengineering processes to SPL extraction. Starting from that foundation, several trends have been detected in recent research: the integrated or guided reengineering of (typically object-oriented) legacy code and requirements; specific aspect-oriented or feature-oriented refactoring into SPLs, and more recently, refactoring for the evolution of existing product lines. A majority of papers include academic or industrial case studies, though only a few are based on quantitative data. The degree of maturity of both subfields is different: Industry examples for the reengineering of the legacy system subfield are abundant, although more evaluation research is needed to provide better evidence for adoption in industry. Product line evolution through refactoring is an emerging topic with some pending challenges. Although it has recently received some attention, the theoretical foundation is rather limited in this subfield and should be addressed in the near future. To sum up, the main contributions of this work are the classification of research approaches as well as the analysis of remaining challenges, open issues, and research opportunities. © 2012 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {GIRO Research Group, University of Valladolid, Spain},
  author-email               = {{mlaguna@infor.uva.es yania@infor.uva.es}},
  author_keywords            = {evolution, legacy system, reengineering, refactoring, software product line},
  doi                        = {10.1016/j.scico.2012.05.003},
  groups                     = {includes, evolution, reengineering, refactoring, legacy systems, systematic mapping study, software product lines},
  journal-iso                = {{Sci. Comput. Program.}},
  keywords                   = {evolution, legacy system reengineering, product line evolutions, refactorings, software product line, software product line (spls), software product line evolutions, systematic mapping studies, computer software, industry, legacy systems, research, software design, reengineering},
  number-of-cited-references = {{40}},
  orcid-numbers              = {{Laguna, Miguel A./0000-0001-9107-749X Crespo, Yania/0000-0003-0639-0540 Crespo, Yania/0000-0003-0639-0540 Laguna, Miguel A/0000-0001-9107-749X}},
  publisher                  = {{ELSEVIER}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Mahdavihezavehi2013a,
  author                     = {Mahdavi-Hezavehi, S. and Galster, M. and Avgeriou, P.},
  journal                    = {Information and Software Technology},
  title                      = {Variability in quality attributes of service-based software systems: A systematic literature review},
  year                       = {2013},
  issn                       = {{0950-5849}},
  month                      = {{FEB}},
  number                     = {2},
  pages                      = {320-343},
  volume                     = {55},
  abstract                   = {Context: Variability is the ability of a software artifact (e.g., a system, component) to be adapted for a specific context, in a preplanned manner. Variability not only affects functionality, but also quality attributes (e.g., security, performance). Service-based software systems consider variability in functionality implicitly by dynamic service composition. However, variability in quality attributes of service-based systems seems insufficiently addressed in current design practices. Objective: We aim at (a) assessing methods for handling variability in quality attributes of service-based systems, (b) collecting evidence about current research that suggests implications for practice, and (c) identifying open problems and areas for improvement. Method: A systematic literature review with an automated search was conducted. The review included studies published between the year 2000 and 2011. We identified 46 relevant studies. Results: Current methods focus on a few quality attributes, in particular performance and availability. Also, most methods use formal techniques. Furthermore, current studies do not provide enough evidence for practitioners to adopt proposed approaches. So far, variability in quality attributes has mainly been studied in laboratory settings rather than in industrial environments. Conclusions: The product line domain as the domain that traditionally deals with variability has only little impact on handling variability in quality attributes. The lack of tool support, the lack of practical research and evidence for the applicability of approaches to handle variability are obstacles for practitioners to adopt methods. Therefore, we suggest studies in industry (e.g., surveys) to collect data on how practitioners handle variability of quality attributes in service-based systems. For example, results of our study help formulate hypotheses and questions for such surveys. Based on needs in practice, new approaches can be proposed. © 2012 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {University of Groningen, Department of Mathematics and Computing Science, P.O. Box 407, 9700 AK Groningen, Netherlands},
  author-email               = {{mgalster@ieee.org}},
  author_keywords            = {quality attributes, service-based systems, systematic literature review, variability},
  doi                        = {10.1016/j.infsof.2012.08.010},
  groups                     = {includes, quality, service-oriented architecture, systematic literature review},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {assessing method, automated searches, design practice, dynamic service composition, formal techniques, industrial environments, product-lines, quality attributes, service-based, service-based systems, software artifacts, software systems, systematic literature review, tool support, variability, surveys, computer software},
  number-of-cited-references = {{57}},
  orcid-numbers              = {{Avgeriou, Paris/0000-0002-7101-0754}},
  publisher                  = {{ELSEVIER}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Mohabbati2013a,
  author                     = {Mohabbati, B. and Asadi, M. and Gašević, D. and Hatala, M. and Müller, H.A.},
  journal                    = {Information and Software Technology},
  title                      = {Combining service-orientation and software product line engineering: A systematic mapping study},
  year                       = {2013},
  issn                       = {{0950-5849}},
  month                      = {{NOV}},
  number                     = {11},
  pages                      = {1845-1859},
  volume                     = {55},
  abstract                   = {Context Service-Orientation (SO) is a rapidly emerging paradigm for the design and development of adaptive and dynamic software systems. Software Product Line Engineering (SPLE) has also gained attention as a promising and successful software reuse development paradigm over the last decade and proven to provide effective solutions to deal with managing the growing complexity of software systems. Objective This study aims at characterizing and identifying the existing research on employing and leveraging SO and SPLE. Method We conducted a systematic mapping study to identify and analyze related literature. We identified 81 primary studies, dated from 2000-2011 and classified them with respect to research focus, types of research and contribution. Result The mapping synthesizes the available evidence about combining the synergy points and integration of SO and SPLE. The analysis shows that the majority of studies focus on service variability modeling and adaptive systems by employing SPLE principles and approaches. In particular, SPLE approaches, especially feature-oriented approaches for variability modeling, have been applied to the design and development of service-oriented systems. While SO is employed in software product line contexts for the realization of product lines to reconcile the flexibility, scalability and dynamism in product derivations thereby creating dynamic software product lines. Conclusion Our study summarizes and characterizes the SO and SPLE topics researchers have investigated over the past decade and identifies promising research directions as due to the synergy generated by integrating methods and techniques from these two areas. © 2013 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Simon Fraser University, 13450 102 Ave., Surrey, BC V3T 5X3, Canada; Athabasca University, 1 University Drive, Athabasca, AB T9S 3A3, Canada; University of Victoria, STN CSC, P.O. Box 3055, Victoria, BC V8W 3P6, Canada},
  author-email               = {{mohabbati@sfu.ca masadi@sfu.ca dgasevic@sfu.ca mhatala@sfu.ca hausi@cs.uvic.ca}},
  author_keywords            = {service-oriented architecture, software product lines, systematic mapping},
  doi                        = {10.1016/j.infsof.2013.05.006},
  groups                     = {includes, service-oriented architecture, software product lines, systematic mapping study},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {computer software reusability, information services, mapping, software design, dynamic software product lines, feature-oriented approaches, service oriented systems, software product line, software product line engineering(sple), software product line engineerings, systematic mapping, systematic mapping studies, service oriented architecture (soa)},
  number-of-cited-references = {{127}},
  orcid-numbers              = {{Gasevic, Dragan/0000-0001-9265-1908 Hatala, Marek/0000-0001-7418-9529 Muller, Hausi/0000-0002-1004-5830}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Montagud2012a,
  author                     = {Montagud, S. and Abrahão, S. and Insfran, E.},
  journal                    = {Software Quality Journal},
  title                      = {A systematic review of quality attributes and measures for software product lines},
  year                       = {2012},
  issn                       = {{0963-9314}},
  month                      = {{SEP}},
  number                     = {3-4},
  pages                      = {425-486},
  volume                     = {20},
  abstract                   = {It is widely accepted that software measures provide an appropriate mechanism for understanding, monitoring, controlling, and predicting the quality of software development projects. In software product lines (SPL), quality is even more important than in a single software product since, owing to systematic reuse, a fault or an inadequate design decision could be propagated to several products in the family. Over the last few years, a great number of quality attributes and measures for assessing the quality of SPL have been reported in literature. However, no studies summarizing the current knowledge about them exist. This paper presents a systematic literature review with the objective of identifying and interpreting all the available studies from 1996 to 2010 that present quality attributes and/or measures for SPL. These attributes and measures have been classified using a set of criteria that includes the life cycle phase in which the measures are applied; the corresponding quality characteristics; their support for specific SPL characteristics (e. g., variability, compositionality); the procedure used to validate the measures, etc. We found 165 measures related to 97 different quality attributes. The results of the review indicated that 92% of the measures evaluate attributes that are related to maintainability. In addition, 67% of the measures are used during the design phase of Domain Engineering, and 56% are applied to evaluate the product line architecture. However, only 25% of them have been empirically validated. In conclusion, the results provide a global vision of the state of the research within this area in order to help researchers in detecting weaknesses, directing research efforts, and identifying new research lines. In particular, there is a need for new measures with which to evaluate both the quality of the artifacts produced during the entire SPL life cycle and other quality characteristics. There is also a need for more validation (both theoretical and empirical) of existing measures. In addition, our results may be useful as a reference guide for practitioners to assist them in the selection or the adaptation of existing measures for evaluating their software product lines. © 2011 Springer Science+Business Media, LLC.},
  address                    = {{VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS}},
  affiliation                = {Department of Computer Science and Computation, Universitat Politècnica de València, Camino de Vera, s/n, 46022 Valencia, Spain},
  author-email               = {{smontagud@dsic.upv.es sabrahao@dsic.upv.es einsfran@dsic.upv.es}},
  author_keywords            = {measures, quality, quality attributes, software product lines, systematic literature review},
  doi                        = {10.1007/s11219-011-9146-7},
  groups                     = {includes, quality, software product lines, systematic literature review},
  journal-iso                = {{Softw. Qual. J.}},
  keywords                   = {computer software reusability, image quality, life cycle, research, software design, measures, product line architecture, quality attributes, quality characteristic, quality of softwares, software product line, software product lines, systematic literature review, quality control},
  number-of-cited-references = {{55}},
  orcid-numbers              = {{Abrahao, Silvia/0000-0003-3580-2014 Abrahao, Silvia/0000-0003-3580-2014}},
  publisher                  = {Kluwer Academic Publishers},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Holl2012a,
  author                     = {Holl, G. and Grünbacher, P. and Rabiser, R.},
  journal                    = {Information and Software Technology},
  title                      = {A systematic review and an expert survey on capabilities supporting multi product lines},
  year                       = {2012},
  issn                       = {{0950-5849}},
  month                      = {{AUG}},
  number                     = {8},
  pages                      = {828-852},
  volume                     = {54},
  abstract                   = {Context: Complex software-intensive systems comprise many subsystems that are often based on heterogeneous technological platforms and managed by different organizational units. Multi product lines (MPLs) are an emerging area of research addressing variability management for such large-scale or ultra-large-scale systems. Despite the increasing number of publications addressing MPLs the research area is still quite fragmented. Objective: The aims of this paper are thus to identify, describe, and classify existing approaches supporting MPLs and to increase the understanding of the underlying research issues. Furthermore, the paper aims at defining success-critical capabilities of infrastructures supporting MPLs. Method: Using a systematic literature review we identify and analyze existing approaches and research issues regarding MPLs. Approaches described in the literature support capabilities needed to define and operate MPLs. We derive capabilities supporting MPLs from the results of the systematic literature review. We validate and refine these capabilities based on a survey among experts from academia and industry. Results: The paper discusses key research issues in MPLs and presents basic and advanced capabilities supporting MPLs. We also show examples from research approaches that demonstrate how these capabilities can be realized. Conclusions: We conclude that approaches supporting MPLs need to consider both technical aspects like structuring large models and defining dependencies between product lines as well as organizational aspects such as distributed modeling and product derivation by multiple stakeholders. The identified capabilities can help to build, enhance, and evaluate MPL approaches. © 2012 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Christian Doppler Laboratory for Automated Software Engineering, Johannes Kepler University, Altenberger Str. 69, 4040 Linz, Austria; Institute for Systems Engineering and Automation, Johannes Kepler University, Altenberger Str. 69, 4040 Linz, Austria},
  author-email               = {{holl@ase.jku.at paul.gruenbacher@jku.at rabiser@ase.jku.at}},
  author_keywords            = {large-scale systems, multi product lines, product line engineering, systematic literature review},
  doi                        = {10.1016/j.infsof.2012.02.002},
  groups                     = {includes, systematic literature review, multi software product lines, survey},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {surveys, multi product lines, multiple stakeholders, organizational aspects, product line engineering, systematic literature review, technological platform, ultra large scale systems, variability management, large scale systems},
  number-of-cited-references = {{69}},
  orcid-numbers              = {{Rabiser, Rick/0000-0003-3862-1112 Grunbacher, Paul/0000-0002-1951-5288}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Dasilva2011a,
  author                     = {Da Silva, I.F. and Da Mota Silveira Neto, P.A. and O'Leary, P. and De Almeida, E.S. and De Lemos Meira, S.R.},
  journal                    = {Software - Practice and Experience},
  title                      = {Agile software product lines: A systematic mapping study},
  year                       = {2011},
  issn                       = {{0038-0644}},
  month                      = {{JUL}},
  number                     = {8},
  pages                      = {899-920},
  volume                     = {41},
  abstract                   = {Background: Software product lines and Agile methods have been an effective solution for dealing with the growing complexity of software and handling competitive needs of software organizations. They also share common goals, such as improving productivity, reducing time-to-market, decreasing development costs and increasing customer satisfaction. There has been growing interest in whether the integration of Agile and SPL could provide further benefits and solve many of the outstanding issues surrounding software development. Objective: This study investigates the state-of-the-art in Agile SPL approaches, while identifying gaps in current research and synthesizing available evidence. It also provides a basis for a deeper understanding of the issues involved in the integration of Agile and SPL. Method: A mapping study was undertaken to analyze the relation between Agile and SPL methods. A set of four research questions were defined in which the 32 primary studies were evaluated. Results: This study provides insights into the integration of Agile and SPL approaches, it identifies the current gaps in the research, synthesize the available evidence and propose specific Agile methods and practices for integration in SPL. Conclusions: In general, few studies describe the underlying Agile principles being adopted by proposed Agile SPL solutions. The most common Agile practices proposed by the studies came from the XP and Scrum methods, particularly in the pro-active SPL strategy. We identify certain Agile methods that are being overlooked by the Agile SPL community, and propose specific SPL practices areas suitable for adoption of Agile practices. Copyright © 2011 John Wiley & Sons, Ltd.},
  address                    = {{111 RIVER ST, HOBOKEN 07030-5774, NJ USA}},
  affiliation                = {Informatics Center, Federal University of Pernambuco, Recife, PE, Brazil; Computer Science Department, Federal University of Bahia, Salvador, BA, Brazil; RiSE (Reuse in Software Engineering), Recife, PE, Brazil},
  author-email               = {{ifsse3@gmail.com}},
  author_keywords            = {agile methods, agile principles, software product lines, systematic mapping study},
  doi                        = {10.1002/spe.1078},
  groups                     = {includes, agile, software product lines, systematic mapping study},
  journal-iso                = {{Softw.-Pract. Exp.}},
  keywords                   = {agile methods, agile practices, agile principles, agile softwares, current gap, development costs, effective solution, mapping studies, research questions, software organization, software product line, software product lines, systematic mapping, time-to-market, customer satisfaction, integration, mapping, production engineering, research, software design},
  number-of-cited-references = {{55}},
  publisher                  = {{WILEY}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Diaz2011a,
  author                     = {Díaz, J. and Pérez, J. and Alarcõn, P.P. and Garbajosa, J.},
  journal                    = {Software - Practice and Experience},
  title                      = {Agile product line engineering - A systematic literature review},
  year                       = {2011},
  issn                       = {{0038-0644}},
  month                      = {{JUL}},
  number                     = {8},
  pages                      = {921-941},
  volume                     = {41},
  abstract                   = {Software Product Line Engineering (SPLE) demands upfront long-term investment in (i) designing a common set of core-assets and (ii) managing variability across the products from the same family. When anticipated changes in these core-assets have been predicted with certain accuracy, SPLE has proved significant improvements. However, when large/complex software product line projects have to deal with changing market conditions, alternatives to supplement SPLE are required. Agile Software Development (ASD) may be an alternative, as agile processes harness change for the customer's competitive advantage. However, when the aim is to scale Agile projects up to effectively manage reusability and variability across the products from the same family, alternatives to supplement agility are also required. As a result, a new approach called Agile Product Line Engineering (APLE) advocates integrating SPLE and ASD with the aim of addressing these gaps. APLE is an emerging approach, which implies that organizations have to face several barriers to achieve its adoption. This paper presents a systematic literature review of experiences and practices on APLE, in which the key findings uncover important challenges about how to integrate the SPLE model with an agile iterative approach to fully put APLE into practice. Copyright © 2011 John Wiley & Sons, Ltd.},
  address                    = {{111 RIVER ST, HOBOKEN 07030-5774, NJ USA}},
  affiliation                = {Universidad Politécnica de Madrid, Technical University of Madrid (UPM), E.U. Informática, Ctra. Valencia Km. 7, E-28031 Madrid, Spain},
  author-email               = {{yesica.diaz@upm.es}},
  author_keywords            = {agile product line engineering (aple), agile software development, software product line engineering, systematic literature review},
  doi                        = {10.1002/spe.1087},
  groups                     = {includes, agile, systematic literature review, software product lines},
  journal-iso                = {{Softw.-Pract. Exp.}},
  keywords                   = {agile process, agile software development, competitive advantage, iterative approach, long-term investment, market condition, product line engineering, software product line, software product line engineering, software product line engineerings, systematic literature review, competition, engineering, production engineering, reusability, software design},
  number-of-cited-references = {{60}},
  orcid-numbers              = {{Garbajosa, Juan/0000-0003-0161-3485 Alarcon, Pedro Pablo/0000-0003-4285-5333 Perez, Jennifer/0000-0003-3192-7995 Diaz, Jessica/0000-0001-6738-9370}},
  publisher                  = {{WILEY}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Damotasilveiraneto2011a,
  author                     = {Da Mota Silveira Neto, P.A. and Carmo MacHado, I.D. and McGregor, J.D. and De Almeida, E.S. and De Lemos Meira, S.R.},
  journal                    = {Information and Software Technology},
  title                      = {A systematic mapping study of software product lines testing},
  year                       = {2011},
  issn                       = {{0950-5849}},
  month                      = {{MAY}},
  number                     = {5},
  pages                      = {407-423},
  volume                     = {53},
  abstract                   = {Context: In software development, Testing is an important mechanism both to identify defects and assure that completed products work as specified. This is a common practice in single-system development, and continues to hold in Software Product Lines (SPL). Even though extensive research has been done in the SPL Testing field, it is necessary to assess the current state of research and practice, in order to provide practitioners with evidence that enable fostering its further development. Objective: This paper focuses on Testing in SPL and has the following goals: investigate state-of-the-art testing practices, synthesize available evidence, and identify gaps between required techniques and existing approaches, available in the literature. Method: A systematic mapping study was conducted with a set of nine research questions, in which 120 studies, dated from 1993 to 2009, were evaluated. Results: Although several aspects regarding testing have been covered by single-system development approaches, many cannot be directly applied in the SPL context due to specific issues. In addition, particular aspects regarding SPL are not covered by the existing SPL approaches, and when the aspects are covered, the literature just gives brief overviews. This scenario indicates that additional investigation, empirical and practical, should be performed. Conclusion: The results can help to understand the needs in SPL Testing, by identifying points that still require additional investigation, since important aspects regarding particular points of software product lines have not been addressed yet. © 2010 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {RiSE - Reuse in Software Engineering, Recife PE, Brazil; Informatics Center, Federal University of Pernambuco, Recife, PE, Brazil; Computer Science Department, Federal University of Bahia, Salvador, BA, Brazil; Computer Science Department, Clemson University, Clemson, SC, United States},
  author-email               = {{pauloadmsn@gmail.com}},
  author_keywords            = {mapping study, software product lines, software testing},
  doi                        = {10.1016/j.infsof.2010.12.003},
  groups                     = {includes, systematic mapping study, software product lines, testing},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {further development, mapping studies, research questions, software development, software product line, software product lines, state of research, system development, systematic mapping, computer software selection and evaluation, mapping, research, software testing, software design},
  number-of-cited-references = {{84}},
  orcid-numbers              = {{Machado, Ivan/0000-0001-9027-2293 Machado, Ivan/0000-0001-9027-2293 }},
  publisher                  = {{ELSEVIER}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Engstroem2011a,
  author                     = {Engström, E. and Runeson, P.},
  journal                    = {Information and Software Technology},
  title                      = {Software product line testing - A systematic mapping study},
  year                       = {2011},
  issn                       = {{0950-5849}},
  month                      = {{JAN}},
  number                     = {1},
  pages                      = {2-13},
  volume                     = {53},
  abstract                   = {Context: Software product lines (SPL) are used in industry to achieve more efficient software development. However, the testing side of SPL is underdeveloped. Objective: This study aims at surveying existing research on SPL testing in order to identify useful approaches and needs for future research. Method: A systematic mapping study is launched to find as much literature as possible, and the 64 papers found are classified with respect to focus, research type and contribution type. Results: A majority of the papers are of proposal research types (64%). System testing is the largest group with respect to research focus (40%), followed by management (23%). Method contributions are in majority. Conclusions: More validation and evaluation research is needed to provide a better foundation for SPL testing. © 2010 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Department of Computer Science, Lund University, SE-221 00 Lund, Sweden},
  author-email               = {{emelie.engstrom@cs.lth.se per.runeson@cs.lth.se}},
  author_keywords            = {software product line testing, systematic literature review, systematic mapping, testing},
  doi                        = {10.1016/j.infsof.2010.05.011},
  groups                     = {includes, systematic mapping study, testing, software product lines},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {mapping, software design, testing, evaluation research, research focus, software product line (spl), software product line testing, system testing, systematic literature review, systematic mapping, systematic mapping studies, software testing},
  number-of-cited-references = {{79}},
  orcid-numbers              = {{Runeson, Per/0000-0003-2795-4851 Engstrom, Emelie/0000-0001-6736-9425}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Chen2011a,
  author                     = {Chen, L. and Ali Babar, M.},
  journal                    = {Information and Software Technology},
  title                      = {A systematic review of evaluation of variability management approaches in software product lines},
  year                       = {2011},
  issn                       = {{0950-5849}},
  month                      = {{APR}},
  number                     = {4},
  pages                      = {344-362},
  volume                     = {53},
  abstract                   = {Context: Variability management (VM) is one of the most important activities of software product-line engineering (SPLE), which intends to develop software-intensive systems using platforms and mass customization. VM encompasses the activities of eliciting and representing variability in software artefacts, establishing and managing dependencies among different variabilities, and supporting the exploitation of the variabilities for building and evolving a family of software systems. Software product line (SPL) community has allocated huge amount of effort to develop various approaches to dealing with variability related challenges during the last two decade. Several dozens of VM approaches have been reported. However, there has been no systematic effort to study how the reported VM approaches have been evaluated. Objective: The objectives of this research are to review the status of evaluation of reported VM approaches and to synthesize the available evidence about the effects of the reported approaches. Method: We carried out a systematic literature review of the VM approaches in SPLE reported from 1990s until December 2007. Results: We selected 97 papers according to our inclusion and exclusion criteria. The selected papers appeared in 56 publication venues. We found that only a small number of the reviewed approaches had been evaluated using rigorous scientific methods. A detailed investigation of the reviewed studies employing empirical research methods revealed significant quality deficiencies in various aspects of the used quality assessment criteria. The synthesis of the available evidence showed that all studies, except one, reported only positive effects. Conclusion: The findings from this systematic review show that a large majority of the reported VM approaches have not been sufficiently evaluated using scientifically rigorous methods. The available evidence is sparse and the quality of the presented evidence is quite low. The findings highlight the areas in need of improvement, i.e., rigorous evaluation of VM approaches. However, the reported evidence is quite consistent across different studies. That means the proposed approaches may be very beneficial when they are applied properly in appropriate situations. Hence, it can be concluded that further investigations need to pay more attention to the contexts under which different approaches can be more beneficial. © 2010 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Lero, University of Limerick, Castletroy, Limerick, Ireland; IT University of Copenhagen, Rued Langgaards Vej 7, 2300 Copenhagen, Denmark},
  author-email               = {{lianping.chen@lero.ie malibaba@itu.dk}},
  author_keywords            = {empirical studies, software product line, systematic literature reviews, variability management},
  doi                        = {10.1016/j.infsof.2010.12.006},
  groups                     = {includes, empirical, quality, systematic literature review, variability management},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {computer software, empirical research method, empirical studies, software intensive systems, software product line, software product line (spl), software product line engineering(sple), systematic literature review, variability management, software design},
  number-of-cited-references = {{61}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Alves2010a,
  author                     = {Alves, V. and Niu, N. and Alves, C. and Valença, G.},
  journal                    = {Information and Software Technology},
  title                      = {Requirements engineering for software product lines: A systematic literature review},
  year                       = {2010},
  issn                       = {{0950-5849}},
  month                      = {{AUG}},
  number                     = {8},
  pages                      = {806-820},
  volume                     = {52},
  abstract                   = {Context: Software product line engineering (SPLE) is a growing area showing promising results in research and practice. In order to foster its further development and acceptance in industry, it is necessary to assess the quality of the research so that proper evidence for adoption and validity are ensured. This holds in particular for requirements engineering (RE) within SPLE, where a growing number of approaches have been proposed. Objective: This paper focuses on RE within SPLE and has the following goals: assess research quality, synthesize evidence to suggest important implications for practice, and identify research trends, open problems, and areas for improvement. Method: A systematic literature review was conducted with three research questions and assessed 49 studies, dated from 1990 to 2009. Results: The evidence for adoption of the methods is not mature, given the primary focus on toy examples. The proposed approaches still have serious limitations in terms of rigor, credibility, and validity of their findings. Additionally, most approaches still lack tool support addressing the heterogeneity and mostly textual nature of requirements formats as well as address only the proactive SPLE adoption strategy. Conclusions: Further empirical studies should be performed with sufficient rigor to enhance the body of evidence in RE within SPLE. In this context, there is a clear need for conducting studies comparing alternative methods. In order to address scalability and popularization of the approaches, future research should be invested in tool support and in addressing combined SPLE adoption strategies. © 2010 Elsevier B.V. All rights reserved.},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Departamento de Ciência da Computação, Universidade de Brasília, Campus Darcy Ribeiro, 70910-900 Brasília, Brazil; Department of Computer Science and Engineering, Box 9637, Mississippi State University, 39762 MS, United States; Centro de Informática, Universidade Federal de Pernambuco, Cidade Universitária, 50740-540 Recife, Brazil},
  author-email               = {{valves@unb.br niu@cse.msstate.edu cfa@cin.ufpe.br gavs@cin.ufpe.br}},
  author_keywords            = {requirements engineering, software product lines, systematic literature review},
  doi                        = {10.1016/j.infsof.2010.03.014},
  groups                     = {includes, requirements engineering, software product lines, systematic literature review},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {computer software, requirements engineering, empirical studies, research quality, research questions, research trends, software product line, software product line engineering(sple), systematic literature review, tool support, software design},
  number-of-cited-references = {{27}},
  orcid-numbers              = {{Alves, Vander/0000-0003-1573-048X}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Khurum2009a,
  author                     = {Khurum, M. and Gorschek, T.},
  journal                    = {Journal of Systems and Software},
  title                      = {A systematic review of domain analysis solutions for product lines},
  year                       = {2009},
  issn                       = {{0164-1212}},
  month                      = {{DEC}},
  number                     = {12},
  pages                      = {1982-2003},
  volume                     = {82},
  abstract                   = {Domain analysis is crucial and central to software product line engineering (SPLE) as it is one of the main instruments to decide what to include in a product and how it should fit in to the overall software product line. For this reason many domain analysis solutions have been proposed both by researchers and industry practitioners. Domain analysis comprises various modeling and scoping activities. This paper presents a systematic review of all the domain analysis solutions presented until 2007. The goal of the review is to analyze the level of industrial application and/or empirical validation of the proposed solutions with the purpose of mapping maturity in terms of industrial application, as well as to what extent proposed solutions might have been evaluated in terms of usability and usefulness. The finding of this review indicates that, although many new domain analysis solutions for software product lines have been proposed over the years, the absence of qualitative and quantitative results from empirical application and/or validation makes it hard to evaluate the potential of proposed solutions with respect to their usability and/or usefulness for industry adoption. The detailed results of the systematic review can be used by individual researchers to see large gaps in research that give opportunities for future work, and from a general research perspective lessons can be learned from the absence of validation as well as from good examples presented. From an industry practitioner view, the results can be used to gauge as to what extent solutions have been applied and/or validated and in what manner, both valuable as input prior to industry adoption of a domain analysis solution. © 2009 Elsevier Inc. All rights reserved.},
  address                    = {{360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA}},
  affiliation                = {Blekinge Institute of Technology, Department of Systems and Software Engineering, S-372 25 Ronneby, Sweden},
  author-email               = {{mkm@bth.se tgo@bth.se}},
  author_keywords            = {domain analysis, domain modeling, domain scoping, empirical evidence, systematic review, usability, usefulness},
  doi                        = {10.1016/j.jss.2009.06.048},
  groups                     = {includes, domain analysis, systematic literature review, software product lines},
  journal-iso                = {{J. Syst. Softw.}},
  keywords                   = {domain analysis, domain modeling, empirical evidence, scoping, systematic review, computer software, industrial applications, industry, network architecture, production engineering, software design, usability engineering, research},
  number-of-cited-references = {{42}},
  publisher                  = {{ELSEVIER SCIENCE INC}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Costa2018a,
  author                     = {Costa, Diogo Matheus and Teixeira, Eldanae Nogueira and Lima Werner, Claudia Maria},
  booktitle                  = {{2018 XLIV LATIN AMERICAN COMPUTER CONFERENCE (CLEI 2018)}},
  title                      = {{Software Process Definition using Process Lines: A Systematic Literature Review}},
  year                       = {{2018}},
  address                    = {{345 E 47TH ST, NEW YORK, NY 10017 USA}},
  month                      = {Oct},
  organization               = {{Latin Amer Ctr Comp Studies}},
  pages                      = {{110-119}},
  publisher                  = {{IEEE}},
  abstract                   = {{Software processes have been the focus of discussion in literature, but
   defining a software process remains a challenge. The Software Process
   Line (SPrL) technique offers a systematic process reuse approach that
   identifies processes' similarities and variability. This study aims to
   characterize the state-of-the-art of the software process definition
   using SPrL. A Systematic Literature Review (SLR) was conducted and 26
   papers were identified to be studied in depth. The results indicate a
   concentration of approaches that use mapping/rules techniques to support
   variability resolution and the need for integrated supporting tools. In
   addition, three problems that affect the software process definition
   using SPrL were observed: (1) low understanding of SPrL models
   complexity and their impact, (2) lack of understanding about the impacts
   of the defined software process, and (3) experts' knowledge dependence
   issues in decision-making to solve variability.}},
  affiliation                = {{Costa, DM (Corresponding Author), Univ Fed Rio de Janeiro, COPPE, PESC, Syst Engn \& Comp Sci Dept, Rio de Janeiro, Brazil. Costa, Diogo Matheus; Teixeira, Eldanae Nogueira; Lima Werner, Claudia Maria, Univ Fed Rio de Janeiro, COPPE, PESC, Syst Engn \& Comp Sci Dept, Rio de Janeiro, Brazil.}},
  art_number                 = {8786330},
  author-email               = {{dmc@cos.ufrj.br danny@cos.ufrj.br werner@cos.ufrj.br}},
  author_keywords            = {literature review, process definition, software process line, technologies, tools},
  book-group-author          = {{IEEE}},
  doi                        = {10.1109/CLEI.2018.00022},
  groups                     = {includes, software process lines, systematic literature review, software processes},
  isbn                       = {{978-1-7281-0437-9}},
  journal                    = {Proceedings - 2018 44th Latin American Computing Conference, CLEI 2018},
  keywords                   = {software process line, process definition, tools, technologies, literature review},
  number-of-cited-references = {{59}},
  orcid-numbers              = {{Lima Werner, Claudia Maria/0000-0002-4231-9621 Costa, Diogo Matheus/0000-0003-2110-3925}},
  research-areas             = {{Computer Science; Engineering}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Hasbi2018a,
  author                     = {Hasbi, Muhamad and Budiardjo, Eko K. and Wibowo, Wahyu C.},
  booktitle                  = {{PROCEEDINGS OF 2018 THE 2ND INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND ARTIFICIAL INTELLIGENCE (CSAI 2018) / 2018 THE 10TH INTERNATIONAL CONFERENCE ON INFORMATION AND MULTIMEDIA TECHNOLOGY (ICIMT 2018)}},
  title                      = {{Reverse Engineering in Software Product Line - A Systematic Literature Review}},
  year                       = {{2018}},
  address                    = {{1515 BROADWAY, NEW YORK, NY 10036-9998 USA}},
  organization               = {{Shenzhen Univ, Coll Comp Sci \& Software Engn; Kalbis Inst}},
  pages                      = {{174-179}},
  publisher                  = {{ASSOC COMPUTING MACHINERY}},
  series                     = {CSAI '18},
  abstract                   = {{Reverse engineering is the information extraction process on system by
   identifying and analyzing the components that are part of that system.
   We analyze existing research that related with reverse engineering
   process on software product line. There are two product line processes
   according to Software product line engineering framework they are domain
   engineering process and application engineering process. We investigate
   reverse engineering in domain engineering process (domain requirements,
   domain design, and domain realization, domain quality assurance). We
   performed a systematic literature review. A manual search resulting 71
   papers considered for analysis. Results: The majority of reverse
   engineering studied in three domain activity in domain engineering
   process. That is requirement engineering, domain design and domain
   realization. There are inconsistent correlations between features in the
   reverse engineering process. These approaches extract features without
   constraints between its features. Conclusions: Reverse engineering
   methods are needed that are able to identify and maintain a consistent
   correlation between features in application engineering and domain
   engineering in the reverse engineering process. Finally, we provide gaps
   from existing research and show opportunities for future research.}},
  affiliation                = {{Hasbi, M (Corresponding Author), Univ Indonesia, Fac Comp Sci, UI Campus, Depok, Jawa Barat, Indonesia. Hasbi, Muhamad; Budiardjo, Eko K.; Wibowo, Wahyu C., Univ Indonesia, Fac Comp Sci, UI Campus, Depok, Jawa Barat, Indonesia.}},
  author-email               = {{muhamad.hasbi61@ui.ac.id eko@cs.ui.ac.id wibowo@cs.ui.ac.id}},
  author_keywords            = {domain engineering, reverse engineering, software product line, systematic review},
  book-group-author          = {{ACM}},
  doi                        = {10.1145/3297156.3297203},
  groups                     = {includes, domain engineering, reverse engineering, software product lines, systematic literature review},
  isbn                       = {{978-1-4503-6606-9}},
  journal                    = {ACM International Conference Proceeding Series},
  keywords                   = {reverse engineering, systematic review, software product line, domain engineering},
  location                   = {Shenzhen, China},
  number-of-cited-references = {{24}},
  numpages                   = {6},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
  url                        = {https://doi.org/10.1145/3297156.3297203},
}

@InProceedings{Li2017a,
  author                     = {Li, Yang and Schulze, Sandro and Saake, Gunter},
  booktitle                  = {{21ST INTERNATIONAL SYSTEMS \& SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1}},
  title                      = {{Reverse Engineering Variability from Natural Language Documents: A Systematic Literature Review}},
  year                       = {{2017}},
  address                    = {{1515 BROADWAY, NEW YORK, NY 10036-9998 USA}},
  editor                     = {{Cohen, M and Acher, M and Fuentes, L and Schall, D and Bosch, J and Capilla, R and Bagheri, E and Xiong, Y and Troya, J and RuizCortes, A and Benavides, D}},
  organization               = {{HITACHI; Pure Syst; BigLever Softwar Inc; Univ Sevilla, Vicerrectorado Relaciones Inst; ISA, Grupo Ingn Software Aplicada; Soc Ingn Software Tecnologias Desarrollo Software; Univ Sevilla, Vicerrectorado Investigac}},
  pages                      = {{133-142}},
  publisher                  = {{ASSOC COMPUTING MACHINERY}},
  series                     = {SPLC '17},
  volume                     = {1},
  abstract                   = {{Identifying features and their relations (i.e., variation points) is
   crucial in the process of migrating single software systems to software
   product lines (SPL). Various approaches have been proposed to perform
   feature extraction automatically from different artifacts, for instance,
   feature location in legacy code. Usually such approaches a) omit
   variability information and b) rely on artifacts that reside in advanced
   phases of the development process, thus, being only of limited
   usefulness in the context of SPLs. In contrast, feature and variability
   extraction from natural language (NL) documents is more favorable,
   because a mapping to several other artifacts is usually established from
   the very beginning. In this paper, we provide a multi-dimensional
   overview of approaches for feature and variability extraction from NL
   documents by means of a systematic literature review (SLR). We selected
   25 primary studies and carefully evaluated them regarding different
   aspects such as techniques used, tool support, or accuracy of the
   results. In a nutshell, our key insights are that i) standard NLP
   techniques are commonly used, ii) post-processing often includes
   clustering \& machine learning algorithms, iii) only in rare cases, the
   approaches support variability extraction, iv) tool support, apart from
   text pre-processing is often en not available, and v) many approaches
   lack a comprehensive evaluation. Based on these observations, we derive
   future challenges, arguing that more effort need to be invested for
   making such approaches applicable in practice.}},
  affiliation                = {{Li, Y (Corresponding Author), Otto von Guericke Univ, Magdeburg, Germany. Li, Yang; Schulze, Sandro; Saake, Gunter, Otto von Guericke Univ, Magdeburg, Germany.}},
  author-email               = {{yang.li@ovgu.de sandro.schulze@ovgu.de saake@ovgu.de}},
  author_keywords            = {feature identification, natural language documents, reverse engineering, software product lines, systematic literature review, variability extraction},
  doi                        = {10.1145/3106195.3106207},
  groups                     = {includes, feature identification, natural language processing, systematic literature review, reverse engineering},
  isbn                       = {{978-1-4503-5221-5}},
  journal                    = {ACM International Conference Proceeding Series},
  keywords                   = {feature identification, variability extraction, reverse engineering, software product lines, natural language documents, systematic literature review},
  location                   = {Sevilla, Spain},
  number-of-cited-references = {{40}},
  numpages                   = {10},
  orcid-numbers              = {{Schulze, Sandro/0000-0002-7198-7848}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
  url                        = {https://doi.org/10.1145/3106195.3106207},
}

@InProceedings{Marimuthu2017a,
  author                     = {Marimuthu, C. and Chandrasekaran, K.},
  booktitle                  = {{21ST INTERNATIONAL SYSTEMS \& SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1}},
  title                      = {{Systematic Studies in Software Product Lines: A Tertiary Study}},
  year                       = {{2017}},
  address                    = {{1515 BROADWAY, NEW YORK, NY 10036-9998 USA}},
  editor                     = {{Cohen, M and Acher, M and Fuentes, L and Schall, D and Bosch, J and Capilla, R and Bagheri, E and Xiong, Y and Troya, J and RuizCortes, A and Benavides, D}},
  organization               = {{HITACHI; Pure Syst; BigLever Softwar Inc; Univ Sevilla, Vicerrectorado Relaciones Inst; ISA, Grupo Ingn Software Aplicada; Soc Ingn Software Tecnologias Desarrollo Software; Univ Sevilla, Vicerrectorado Investigac}},
  pages                      = {{143-152}},
  publisher                  = {{ASSOC COMPUTING MACHINERY}},
  series                     = {SPLC '17},
  volume                     = {1},
  abstract                   = {{Software product lines are widely used in the software industries to
   increase the re-usability and to decrease maintenance cost. On the other
   hand, systematic reviews are widely used in the software engineering
   research community to provide the overview of the research field and
   practitioners guidelines. Researchers have conducted many systematic
   studies on the different aspects of SPLs. To the best of our knowledge,
   till now there is no tertiary study conducted on systematic studies of
   SPL related research topics. In this paper, we aim at conducting a
   systematic mapping study of existing systematic studies to report the
   overview of the findings for researchers and practitioners. We performed
   snowballing and automated search to find out the relevant systematic
   studies. As a result, we analyzed 60 relevant studies to answer 5
   research questions. The main focus of this tertiary study is to
   highlight the research topics, type of published reviews, active
   researchers and publication forums. Additionally, we highlight some of
   the limitations of the systematic studies. The important finding of this
   study is that the research field is well matured as the systematic
   studies covered a wide range of research topics. Another important
   finding is that many studies provided information for practitioners as
   well as researchers which is a notable improvement in the systematic
   reviews. However, many studies failed to assess the quality of the
   primary studies which is the major limitation of the existing systematic
   studies.}},
  affiliation                = {{Marimuthu, C (Corresponding Author), Natl Inst Technol Karnataka, Dept Comp Sci \& Engn, Mangalore 575025, Karnataka, India. Marimuthu, C.; Chandrasekaran, K., Natl Inst Technol Karnataka, Dept Comp Sci \& Engn, Mangalore 575025, Karnataka, India.}},
  author-email               = {{cs15fv08.muthu@nitk.edu.in kchnitk@ieee.org}},
  author_keywords            = {software product line, systematic review, tertiary study},
  doi                        = {10.1145/3106195.3106212},
  groups                     = {includes, software product lines, systematic literature review, tertiary literature study},
  isbn                       = {{978-1-4503-5221-5}},
  journal                    = {ACM International Conference Proceeding Series},
  keywords                   = {software product line, tertiary study, systematic review},
  location                   = {Sevilla, Spain},
  number-of-cited-references = {{28}},
  numpages                   = {10},
  orcid-numbers              = {{K, Chandrasekaran/0000-0002-8855-3472 Kesavan, Chandrasekaran/0000-0003-4728-2319 C, Marimuthu/0000-0002-4905-0530}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
  url                        = {https://doi.org/10.1145/3106195.3106212},
}

@InProceedings{Lopezherrejon2016a,
  author                     = {Lopez-Herrejon, Roberto E. and Illescas, Sheny and Egyed, Alexander},
  booktitle                  = {{2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION}},
  title                      = {{Visualization for Software Product Lines: A Systematic Mapping Study}},
  year                       = {{2016}},
  address                    = {{345 E 47TH ST, NEW YORK, NY 10017 USA}},
  editor                     = {{Sharif, B and Parnin, C and Fabry, J}},
  month                      = {Oct},
  organization               = {{IEEE; IEEE Tech Council Software Engn; IEEE Comp Soc}},
  pages                      = {{26-35}},
  publisher                  = {{IEEE}},
  abstract                   = {{Software Product Lines (SPLs) are families of related systems whose
   members are distinguished by the set of features they provide. Over two
   decades of research and practice can attest to the substantial benefits
   of applying SPL practices such as better customization, improved
   software reuse, and faster time to market. Typical SPLs involve large
   number of features which are combined to form also large numbers of
   products, implemented using multiple and different types of software
   artifacts. Because of the sheer amount of information and its complexity
   visualization techniques have been used at different stages of the life
   cycle of SPLs. In this paper we present a systematic mapping study on
   this subject. Our research questions aim to gather information regarding
   the techniques that have been applied, at what stages, how they were
   implemented, and the publication fora employed. Our goal is to identify
   common trends, gaps, and opportunities for further research and
   application.}},
  affiliation                = {{Lopez-Herrejon, RE (Corresponding Author), Ecole Technol Super, Dept Software Engn \& IT, Montreal, PQ, Canada. Lopez-Herrejon, Roberto E., Ecole Technol Super, Dept Software Engn \& IT, Montreal, PQ, Canada. Illescas, Sheny; Egyed, Alexander, Johannes Kepler Univ Linz, Software Syst Engn, Linz, Austria.}},
  art_number                 = {7780154},
  author-email               = {{roberto.lopez@etsmtl.ca k1257276@students.jku.at alexander.egyed@jku.at}},
  author_keywords            = {application engineering, domain engineering, information visualization, software product lines, software visualization},
  doi                        = {10.1109/VISSOFT.2016.11},
  groups                     = {includes, visualization, systematic mapping study, software product lines},
  isbn                       = {{978-1-5090-3850-3}},
  journal                    = {Proceedings - 2016 IEEE Working Conference on Software Visualization, VISSOFT 2016},
  keywords                   = {data visualisation,program visualisation,software product lines,software reusability,software reuse,time to market,complexity visualization techniques,information complexity,spl life cycle,systematic mapping,software product line visualization,visualization,systematics,software product lines,computer architecture,conferences,software systems,software product lines,information visualization,software visualization,domain engineering,application engineering},
  number-of-cited-references = {{72}},
  orcid-numbers              = {{Egyed, Alexander/0000-0003-3128-5427}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Baumgart2016a,
  author                     = {Baumgart, Stephan and Froberg, Joakim},
  booktitle                  = {{2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA)}},
  title                      = {{Functional Safety in Product Lines - A Systematic Mapping Study}},
  year                       = {{2016}},
  address                    = {{10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA}},
  month                      = {Aug},
  organization               = {{Univ Cyprus; Technolog Educ Inst Western Greece}},
  pages                      = {{313-322}},
  publisher                  = {{IEEE COMPUTER SOC}},
  abstract                   = {{Software product line engineering is a widely used approach to plan and
   manage reuse of software. When safety critical products are developed,
   achieving functional safety standard compliance must be shown. The
   requirements stated in the functional safety standards also apply when
   safety critical products are developed in product lines. Managing
   functional safety in industrial product lines is challenging and work
   around solutions are applied in practice. The objective of this research
   is to collect and review reported research publications focusing on
   achieving safety in product lines and to identify gaps in todays
   research. We conduct a systematic mapping study of research publications
   reported until January 2016. We identify 39 research articles to be
   included in a list of primary studies and analyze how product lines are
   documented, which safety-related topics are covered and which evaluation
   method the studies apply. Generally, we find that the area of how to
   achieve functional safety in product lines needs more attention. Our
   study provides an overview on which topics have been discussed until now
   and which safety-related topics need more attention.}},
  affiliation                = {{Baumgart, S (Corresponding Author), Volvo Construct Equipment, E\&E Syst Architecture Dept, Eskilstuna, Sweden. Baumgart, Stephan, Volvo Construct Equipment, E\&E Syst Architecture Dept, Eskilstuna, Sweden. Froberg, Joakim, Malardalen Univ, Sch Innovat Design \& Engn, Vasteras, Sweden.}},
  art_number                 = {7592812},
  author-email               = {{stephan.baumgart@volvo.com joakim.froberg@mdh.se}},
  author_keywords            = {functional safety, product line engineering, systematic mapping study},
  book-group-author          = {{IEEE Comp Soc}},
  doi                        = {10.1109/SEAA.2016.58},
  groups                     = {includes, functional safety, systematic mapping study, software product lines},
  isbn                       = {{978-1-5090-2819-1}},
  issn                       = {2376-9505},
  journal                    = {Proceedings - 42nd Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2016},
  keywords                   = {functional safety, product line engineering, systematic mapping study},
  number-of-cited-references = {{57}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Alvessandimeleuterio2016a,
  author                     = {Alves Sandim Eleuterio, Jane Dirce and Gaia, Felipe Nunes and Bondavalli, Andrea and Lollini, Paolo and Rodrigues, Genaina Nunes and Fischer Rubira, Cecilia Mary},
  booktitle                  = {{2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA)}},
  title                      = {{On the Dependability for Dynamic Software Product Lines A Comparative Systematic Mapping Study}},
  year                       = {{2016}},
  address                    = {{10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA}},
  month                      = {Aug},
  organization               = {{Univ Cyprus; Technolog Educ Inst Western Greece}},
  pages                      = {{323-330}},
  publisher                  = {{IEEE COMPUTER SOC}},
  abstract                   = {{Software Product Lines (SPLs) are techniques where several artefacts are
   reused (domain), and some are customised (variation points). An SPL can
   bind variation points statically (compilation time) or dynamically
   (runtime). Dynamic Software Product Lines (DSPLs) use dynamic binding to
   adapt to the environment or requirements changes. DSPLs are commonly
   used to build dependable systems, defined as systems with the ability to
   avoid more frequent or severe service failures than the acceptable. The
   main dependability attributes are availability, confidentiality,
   integrity, reliability, maintainability, and safety. To better
   understand this context, a Systematic Mapping Study (SMS) was applied
   searching proposals that include dependability attributes in DSPLs. Our
   results suggest that few solutions handle dependability in DSPL context.
   We selected nine primary studies in this regard. We performed a
   comparative study of the results, analysing other dimensions, and
   facets, aiming for a better understanding of this research area.}},
  affiliation                = {{Eleuterio, JDAS (Corresponding Author), Univ Fed Mato Grosso do Sul, Campo Grande, Brazil. Alves Sandim Eleuterio, Jane Dirce, Univ Fed Mato Grosso do Sul, Campo Grande, Brazil. Gaia, Felipe Nunes, IFSP, Boituva, Brazil. Bondavalli, Andrea; Lollini, Paolo, UNIFI, Florence, Italy. Rodrigues, Genaina Nunes, Univ Brasilia, Brasilia, DF, Brazil. Fischer Rubira, Cecilia Mary, Univ Estadual Campinas, Campinas, SP, Brazil.}},
  art_number                 = {7592813},
  author-email               = {{jane@facom.ufms.br felipegaia@ifsp.edu.br andrea.bondavalli@unifi.it paolo.lollini@unifi.it genaina@cic.unb.br cmrubira@ic.unicamp.br}},
  author_keywords            = {dependability, dynamic software product line, dynamically adaptive systems, systematic mapping study},
  book-group-author          = {{IEEE Comp Soc}},
  doi                        = {10.1109/SEAA.2016.40},
  groups                     = {includes, dependability, dynamic software product lines, systematic mapping study},
  isbn                       = {{978-1-5090-2819-1}},
  issn                       = {2376-9505},
  journal                    = {Proceedings - 42nd Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2016},
  keywords                   = {dynamic software product line, dynamically adaptive systems, dependability, systematic mapping study},
  number-of-cited-references = {{28}},
  orcid-numbers              = {{Gaia, Felipe Nunes/0000-0003-3433-428X Rodrigues, Genaina Nunes/0000-0003-1661-8131 Lollini, Paolo/0000-0002-2364-2538 Rubira, Cecilia Mary Fischer Rubira/0000-0003-4549-7105}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Lima2016a,
  author                     = {Lima, Crescencio and Chavez, Christina},
  booktitle                  = {{THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016)}},
  title                      = {{A Systematic Review on Metamodels to Support Product Line Architecture Design}},
  year                       = {{2016}},
  address                    = {{1515 BROADWAY, NEW YORK, NY 10036-9998 USA}},
  editor                     = {{DeAlmeida, ES}},
  organization               = {{Unicesumar; COLIVRE; ESPWEB; TASA Eventos}},
  pages                      = {{13-22}},
  publisher                  = {{ASSOC COMPUTING MACHINERY}},
  series                     = {SBES '16},
  abstract                   = {{Product Line Architecture (PLA) design is a key activity for developing
   successful Software Product Line (SPL) projects. PLA design is a
   difficult task, mostly due to the complexity of the software systems
   that SPLs deal with, and their variabilities. Metamodels have been used
   to support the representation of assets that compose a PLA, SPL
   variability and the relationships among them. The goal of this study is
   to characterize the use of metamodeling on PLA design, aiming to
   identify the main characteristics of metamodels, the elements used for
   PLA and variability representation and trace the evolution of
   metamodels. We conducted a systematic literature review to identify the
   primary studies on the use of metamodels in PLA Design. Thirty-five
   studies that proposed metamodels to support PLA design were selected.
   The review main findings are: (i) it is difficult to identify the
   existence of research trends because the number of publication varies
   and metamodels lack standardization; (ii) several metamodels support
   feature representation; (iii) the majority of studies addressed
   variability representation with variation points in UML diagrams; and,
   (iv) five evolution lines that describe how metamodels evolved over the
   years were identified.}},
  affiliation                = {{Lima, C (Corresponding Author), Univ Fed Bahia, Fed Inst Bahia, Vitoria Da Conquista, Brazil. Lima, Crescencio, Univ Fed Bahia, Fed Inst Bahia, Vitoria Da Conquista, Brazil. Chavez, Christina, Univ Fed Bahia, Salvador, BA, Brazil.}},
  author-email               = {{crescencio@dcc.ufba.br flach@ufba.br}},
  author_keywords            = {metamodels, product line architecture, software product lines, systematic literature review, variability},
  doi                        = {10.1145/2973839.2973842},
  groups                     = {includes, metamodels, product line architecture, software product lines, systematic literature review},
  isbn                       = {{978-1-4503-4201-8}},
  journal                    = {ACM International Conference Proceeding Series},
  keywords                   = {software product lines, product line architecture, variability, metamodels, systematic literature review},
  location                   = {Maring\'{a}, Brazil},
  number-of-cited-references = {{52}},
  numpages                   = {10},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
  url                        = {https://doi.org/10.1145/2973839.2973842},
}

@InProceedings{Guedes2015a,
  author                     = {Guedes, Gabriela and Silva, Carla and Soares, Monique and Castro, Jaelson},
  booktitle                  = {{PROCEEDINGS 2015 NINTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE - SBCARS 2015}},
  title                      = {{Variability Management in Dynamic Software Product Lines: A systematic mapping}},
  year                       = {{2015}},
  address                    = {{345 E 47TH ST, NEW YORK, NY 10017 USA}},
  month                      = {Sep.},
  organization               = {{ThoughtWorks; AvenueCode; Google; take.net; RARO Labs; Avanti; IBM; CNPq; CAPES; FAPEMIG; UFmG; PUC Minas; CEFET MG}},
  pages                      = {{90-99}},
  publisher                  = {{IEEE}},
  series                     = {{Proceedings Brazilian Symposium on Software Components Architectures and Reuse}},
  abstract                   = {{Dynamic Software Product Lines (DSPLs) are SPLs in which the product
   configuration may occur at runtime. Over the last decade, DSPL has
   gained the interest of researchers as a way of modelling and developing
   dynamically adaptive systems. We have conducted a systematic mapping to
   discover how variability is modelled in DSPL approaches and which
   information is used to guide variability binding at runtime. This paper
   presents the results of our systematic mapping, which can be used to
   identify research trends and gaps for variability management in DSPLs.}},
  affiliation                = {{Guedes, G (Corresponding Author), Univ Fed Pernambuco, Informat Ctr CIn, Recife, PE, Brazil. Guedes, Gabriela; Silva, Carla; Soares, Monique; Castro, Jaelson, Univ Fed Pernambuco, Informat Ctr CIn, Recife, PE, Brazil. Guedes, Gabriela, IFPB, Cajazeiras, PB, Brazil.}},
  art_number                 = {7306131},
  author-email               = {{ggs@cin.ufpe.br ctlls@cin.ufpe.br msc4@cin.ufpe.br jbc@cin.ufpe.br}},
  author_keywords            = {dynamic software product lines, dynamically adaptive systems, systematic mapping, variability management},
  book-group-author          = {{IEEE}},
  doi                        = {10.1109/SBCARS.2015.20},
  groups                     = {includes, dynamic software product lines, variability management, systematic mapping study},
  isbn                       = {{978-1-4673-9630-1}},
  issn                       = {{2163-5625}},
  journal                    = {Proceedings - 2015 9th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARS 2015},
  keywords                   = {variability management, dynamic software product lines, dynamically adaptive systems, systematic mapping},
  number-of-cited-references = {{61}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Lopezherrejon2015a,
  author                     = {Lopez-Herrejon, Roberto E. and Fischer, Stefan and Ramler, Rudolf and Egyed, Alexander},
  booktitle                  = {{2015 IEEE EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION WORKSHOPS (ICSTW)}},
  title                      = {{A First Systematic Mapping Study on Combinatorial Interaction Testing for Software Product Lines}},
  year                       = {{2015}},
  address                    = {{345 E 47TH ST, NEW YORK, NY 10017 USA}},
  month                      = {April},
  organization               = {{IEEE; IEEE Comp Soc; Graz Univ Technol}},
  pages                      = {1-10},
  publisher                  = {{IEEE}},
  series                     = {{IEEE International Conference on Software Testing Verification and Validation Workshops}},
  abstract                   = {{Software Product Lines (SPLs) are families of related software systems
   distinguished by the set of features each one provides. Over the past
   decades SPLs have been the subject of extensive research and application
   both in academia and industry. SPLs practices have proven benefits such
   as better product customization and reduced time to market. Testing SPLs
   pose additional challenges stemming from the typically large number of
   product variants which make it infeasible to test every single one of
   them. In recent years, there has been an extensive research on applying
   Combinatorial Interaction Testing (CIT) for SPL testing. In this paper
   we present the first systematic mapping study on this subject. Our
   research questions aim to gather information regarding the techniques
   that have been applied, the nature of the case studies used for their
   evaluation, and what phases of CIT have been addressed. Our goal is to
   identify common trends, gaps, and opportunities for further research and
   application.}},
  affiliation                = {{Lopez-Herrejon, RE (Corresponding Author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria. Lopez-Herrejon, Roberto E.; Fischer, Stefan; Egyed, Alexander, Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria. Ramler, Rudolf, Software Competence Ctr Hagenberg, Hagenberg, Austria.}},
  art_number                 = {7107435},
  author-email               = {{roberto.lopez@jku.at stefan.fischer@jku.at rudolf.ramler@scch.at alexander.egyed@jku.at}},
  book-group-author          = {{IEEE}},
  doi                        = {10.1109/ICSTW.2015.7107435},
  groups                     = {includes, software product lines, systematic mapping study, testing},
  isbn                       = {{978-1-4799-1885-0}},
  issn                       = {{2159-4848}},
  journal                    = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2015 - Proceedings},
  keywords                   = {program testing,software product lines,systematic mapping,combinatorial interaction testing,software product lines,software testing,spl testing,cit,systematics,benchmark testing,arrays,software systems,conferences},
  number-of-cited-references = {{74}},
  orcid-numbers              = {{Egyed, Alexander/0000-0003-3128-5427}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Galster2014a,
  author                     = {Galster, Matthias and Weyns, Danny and Tofan, Dan and Michalik, Bartosz and Avgeriou, Paris},
  journal                    = {{IEEE TRANSACTIONS ON SOFTWARE ENGINEERING}},
  title                      = {{Variability in Software Systems-A Systematic Literature Review}},
  year                       = {{2014}},
  issn                       = {{0098-5589}},
  month                      = {{MAR}},
  number                     = {{3}},
  pages                      = {{282-306}},
  volume                     = {{40}},
  abstract                   = {{Context: Variability (i.e., the ability of software systems or artifacts
   to be adjusted for different contexts) became a key property of many
   systems. Objective: We analyze existing research on variability in
   software systems. We investigate variability handling in major software
   engineering phases (e.g., requirements engineering, architecting).
   Method: We performed a systematic literature review. A manual search
   covered 13 premium software engineering journals and 18 premium
   conferences, resulting in 15,430 papers searched and 196 papers
   considered for analysis. To improve reliability and to increase
   reproducibility, we complemented the manual search with a targeted
   automated search. Results: Software quality attributes have not received
   much attention in the context of variability. Variability is studied in
   all software engineering phases, but testing is underrepresented. Data
   to motivate the applicability of current approaches are often
   insufficient; research designs are vaguely described. Conclusions: Based
   on our findings we propose dimensions of variability in software
   engineering. This empirically grounded classification provides a step
   towards a unifying, integrated perspective of variability in software
   systems, spanning across disparate or loosely coupled research themes in
   the software engineering community. Finally, we provide recommendations
   to bridge the gap between research and practice and point to
   opportunities for future research.}},
  address                    = {{10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA}},
  affiliation                = {{Galster, M (Corresponding Author), Univ Canterbury, Dept Comp Sci \& Software Engn, Private Bag 4800, Christchurch 8140, New Zealand. Galster, Matthias, Univ Canterbury, Dept Comp Sci \& Software Engn, Christchurch 8140, New Zealand. Weyns, Danny, Linnaeus Univ, Dept Comp Sci, SE-35195 Vaxjo, Sweden. Tofan, Dan; Avgeriou, Paris, Univ Groningen, Dept Math \& Comp Sci, NL-9700 AK Groningen, Netherlands.}},
  art_number                 = {6682901},
  author-email               = {{mgalster@ieee.org danny.weyns@lnu.se d.c.tofan@rug.nl bartosz.michalik@gmail.com paris@cs.rug.nl}},
  author_keywords            = {software engineering, systematic review, variability, software systems},
  doi                        = {10.1109/TSE.2013.56},
  groups                     = {includes, systematic literature review, software engineering, variability management},
  journal-iso                = {{IEEE Trans. Softw. Eng.}},
  keywords                   = {variability, systematic review, software engineering},
  number-of-cited-references = {{60}},
  orcid-numbers              = {{Tofan, Dan/0000-0001-9376-4576 Avgeriou, Paris/0000-0002-7101-0754 Weyns, Danny/0000-0002-1162-0817}},
  publisher                  = {{IEEE COMPUTER SOC}},
  research-areas             = {{Computer Science; Engineering}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Soares2014a,
  author                     = {Soares, Larissa Rocha and Potena, Pasqualina and Machado, Ivan do Carmo and Crnkovic, Ivica and de Almeida, Eduardo Santana},
  booktitle                  = {{2014 40TH EUROMICRO CONFERENCE SERIES ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2014)}},
  title                      = {{Analysis of Non-Functional Properties in Software Product Lines: a Systematic Review}},
  year                       = {{2014}},
  address                    = {{345 E 47TH ST, NEW YORK, NY 10017 USA}},
  editor                     = {{Rabiser, R and Torkar, R}},
  month                      = {Aug},
  organization               = {{Elsevier Informat \& Software Technol Journal; EDALab s r l; Euromicro}},
  pages                      = {{328-335}},
  publisher                  = {{IEEE}},
  series                     = {{EUROMICRO Conference Proceedings}},
  abstract                   = {{Software Product Lines (SPL) approach has been widely developed in
   academia and successfully applied in industry. Based on the selection of
   features, stakeholders can efficiently derive tailor-made programs
   satisfying different requirements. While SPL was very successful at
   building products based on identified features, achievements and
   preservation of many nonfunctional properties (NFPs) remain challenging.
   A knowledge how to deal with NFPs is still not fully obtained. In this
   paper, we present a systematic literature review of NFPs analysis for
   SPL products, focusing on runtime NFPs. The goal of the paper is
   twofold: (i) to present an holistic overview of SPL approaches that have
   been reported regarding the analysis of runtime NFPs, and (ii) to
   categorize NFPs treated in the scientific literature regarding
   development of SPLs. We analyzed 36 research papers, and identified that
   system performance attributes are typically the most considered. The
   results also aid future research studies in NFPs analysis by providing
   an unbiased view of the body of empirical evidence and by guiding future
   research directions.}},
  affiliation                = {{Soares, LR (Corresponding Author), Univ Fed Bahia, Salvador, BA, Brazil. Soares, Larissa Rocha; Machado, Ivan do Carmo; de Almeida, Eduardo Santana, Univ Fed Bahia, Salvador, BA, Brazil. Potena, Pasqualina, Univ Alcala De Henares, Madrid, Spain. Crnkovic, Ivica, Malardalen Univ, Vasteras, Sweden. de Almeida, Eduardo Santana, Fraunhofer Project Ctr Software \& Syst Engn, Salvador, BA, Brazil.}},
  art_number                 = {6928831},
  author-email               = {{larissars@dcc.ufba.br p.potena@uah.es ivanmachado@dcc.ufba.br ivica.crnkovic@mdh.se esa@dcc.ufba.br}},
  author_keywords            = {non-functional properties, product derivation, software product lines, systematic literature review},
  doi                        = {10.1109/SEAA.2014.48},
  groups                     = {includes, non-functional properties, quality, software product lines, systematic literature review},
  isbn                       = {{978-1-4799-5795-8}},
  issn                       = {{1089-6503}},
  journal                    = {Proceedings - 40th Euromicro Conference Series on Software Engineering and Advanced Applications, SEAA 2014},
  keywords                   = {systematic literature review, software product lines, product derivation, non-functional properties},
  number-of-cited-references = {{22}},
  orcid-numbers              = {{Machado, Ivan/0000-0001-9027-2293 Machado, Ivan/0000-0001-9027-2293}},
  research-areas             = {{Computer Science; Engineering}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Santos2014a,
  author                     = {Santos, Ismayle S. and Andrade, Rossana M. C. and Neto, Pedro A. Santos},
  booktitle                  = {{2014 EIGHTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE (SBCARS)}},
  title                      = {{How to Describe SPL Variabilities in Textual Use Cases: A Systematic Mapping Study}},
  year                       = {{2014}},
  address                    = {{345 E 47TH ST, NEW YORK, NY 10017 USA}},
  month                      = {Sep.},
  pages                      = {{64-73}},
  publisher                  = {{IEEE}},
  abstract                   = {{In the Software Product Line (SPL) paradigm, the variability description
   is an important issue for the requirements engineering process. In this
   scenario, there are several approaches in the literature focusing on how
   to describe variability in use cases. However, to the best of our
   knowledge, no efforts have been made to collect and summarize the
   existing templates for textual use case description in the SPL paradigm.
   This paper addresses this gap, presenting a systematic mapping study
   about SPL variability description in textual use cases. We found with
   this mapping, nine use case templates and four different ways to
   describe SPL variabilities in a use case description. From these
   templates, only one deal with the five variability types identified and
   we did not find any experimental study comparing these templates in
   terms of ease of use or comprehensibility.}},
  affiliation                = {{Santos, IS (Corresponding Author), Univ Fed Ceara, Dept Comp Sci, Fortaleza, Ceara, Brazil. Santos, Ismayle S.; Andrade, Rossana M. C., Univ Fed Ceara, Dept Comp Sci, Fortaleza, Ceara, Brazil. Neto, Pedro A. Santos, Univ Fed Piaui, Dept Comp Sci, Teresina, Piaui, Brazil.}},
  art_number                 = {7012983},
  author-email               = {{ismaylesantos@great.ufc.br rossana@great.ufc.br pasn@ufpi.edu.br}},
  author_keywords            = {software product line, systematic mapping study, use case},
  book-group-author          = {{IEEE}},
  doi                        = {10.1109/SBCARS.2014.16},
  groups                     = {includes, software product lines, systematic mapping study, use case variability},
  isbn                       = {{978-1-4799-7860-1}},
  journal                    = {Proceedings - 2014 8th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARS 2014},
  keywords                   = {use case, systematic mapping study, software product line},
  number-of-cited-references = {{36}},
  orcid-numbers              = {{Maria de Castro Andrade, Rossana/0000-0002-0186-2994}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Gadelhaqueiroz2014a,
  author                     = {Gadelha Queiroz, Paulo Gabriel and Vaccare Braga, Rosana Teresinha},
  booktitle                  = {{2014 EIGHTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE (SBCARS)}},
  title                      = {{Development of Critical Embedded Systems Using Model-driven and Product Lines Techniques: A Systematic Review}},
  year                       = {{2014}},
  address                    = {{345 E 47TH ST, NEW YORK, NY 10017 USA}},
  month                      = {Sep.},
  pages                      = {{74-83}},
  publisher                  = {{IEEE}},
  abstract                   = {{Several methodologies have been proposed in the last decades to improve
   the quality of Safety-Critical Embedded Systems (SCES) and, at the same
   time, keep costs and schedule compatible with project plans. In
   particular, approaches such as Product Line Engineering (PLE) and
   Model-Driven Engineering (MDE) offer an interesting solution to reduce
   development complexity and time to market due to their synergy and
   common goals. However, the current state of how MDE and PLE can be
   combined to enhance productivity in the domain of SCES is not clear yet.
   This paper presents a systematic literature review, with the purpose of
   obtaining the state of the art of the approaches, methods and
   methodologies whose goal is the combination of PLE and MDE for the
   development of SCES, and to verify the existence of empirical studies
   that demonstrate the application of these techniques in this type of
   development. We drew the following conclusions from the review results:
   (1) The number of studies using PLE with MDE to build SCES is relatively
   small, but has increased gradually in recent years. (2) The approaches
   diverge about what is needed to build Model-driven Product Lines. (3)
   Most of the approaches do not consider to differentiate between hardware
   and software variabilities. (4) Most of the studies propose the use of
   UML and feature diagrams. (5) The studies present case studies
   implemented in different tools and most of them are free. (6) The
   approaches do not cover the entire development lifecycle.}},
  affiliation                = {{Queiroz, PGG (Corresponding Author), Univ Sao Paulo, ICMC, BR-13566590 Sao Carlos, SP, Brazil. Gadelha Queiroz, Paulo Gabriel; Vaccare Braga, Rosana Teresinha, Univ Sao Paulo, ICMC, BR-13566590 Sao Carlos, SP, Brazil. Gadelha Queiroz, Paulo Gabriel, Univ Fed Rural Semi Arido, DCEN, BR-59625900 Mossoro, RN, Brazil.}},
  art_number                 = {7012984},
  author-email               = {{pgabriel@icmc.usp.br rtvb@icmc.usp.br}},
  author_keywords            = {model-driven engineering, product lines engineering, safety-critical embedded systems, systematic review},
  book-group-author          = {{IEEE}},
  doi                        = {10.1109/SBCARS.2014.19},
  groups                     = {includes, model-driven engineering, software product lines, safety, embedded systems, systematic literature review},
  isbn                       = {{978-1-4799-7860-1}},
  journal                    = {Proceedings - 2014 8th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARS 2014},
  keywords                   = {embedded systems,safety-critical software,software product lines,software quality,model-driven engineering techniques,safety-critical embedded systems,sces,product line engineering technique,mde,ple,development complexity reduction,time to market,software variability,hardware variability,uml,feature diagrams,development lifecycle,systematic literature review,embedded systems,real-time systems,systematics,libraries,embedded software,computer architecture,computational modeling,systematic review,safety-critical embedded systems,model-driven engineering,product lines engineering},
  number-of-cited-references = {{39}},
  orcid-numbers              = {{Braga, Rosana/0000-0003-4259-0785}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Benlachgar2013a,
  author                     = {Benlachgar, Anir and Belouadha, Fatima-Zahra},
  booktitle                  = {{2013 ACS INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS (AICCSA)}},
  title                      = {{Review of Software Product Line Models Used to Model Cloud applications}},
  year                       = {{2013}},
  address                    = {{345 E 47TH ST, NEW YORK, NY 10017 USA}},
  month                      = {May},
  organization               = {{IEEE; Arab Comp Soc}},
  pages                      = {1-4},
  publisher                  = {{IEEE}},
  abstract                   = {{The Cloud computing presents advantages of reutilization, multi usage
   and resources sharing, and especially cost minimization. In particular,
   the software distribution model SaaS (Software as a Service) enables to
   produce multiuser services. This raises the concern of the adaptation of
   this type of applications to answer in a personalized way the different
   needs of users.. To achieve this goal, the proposed researches in this
   topic recommend or use techniques adopted from the Software Product Line
   engineering domain to model the variability (variable and customizable
   aspects) of the SaaS applications. This paper presents a review of the
   main models used in this context. The objective of this work is to
   assess the relevance of the studied models and their capacity to cover
   different aspects linked to the variability of the SaaS applications.}},
  affiliation                = {{Benlachgar, A (Corresponding Author), Univ Mohammed V Agdal, Ecole Mohammadia Ingn, Dept Comp Sci, Rabat, Morocco. Benlachgar, Anir; Belouadha, Fatima-Zahra, Univ Mohammed V Agdal, Ecole Mohammadia Ingn, Dept Comp Sci, Rabat, Morocco.}},
  art_number                 = {6616430},
  author-email               = {{Anir.benlachgar@gmail.com belouadha@emi.ac.ma}},
  author_keywords            = {cloud computing, saas, service variability, software product line, variability models},
  book-group-author          = {{IEEE}},
  doi                        = {10.1109/AICCSA.2013.6616430},
  groups                     = {includes, cloud computing, model-driven engineering, software product lines, systematic literature review},
  isbn                       = {{978-1-4799-0792-2}},
  issn                       = {2161-5330},
  journal                    = {Proceedings of IEEE/ACS International Conference on Computer Systems and Applications, AICCSA},
  keywords                   = {cloud computing, saas, service variability, variability models, software product line},
  number-of-cited-references = {{11}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Sebbaq2018a,
  author                     = {Sebbaq, Hanane and Retbi, Asmaa and Idrissi, Mohammed Khalidi and Bennani, Samir},
  booktitle                  = {Proceedings of the 12th International Conference on Intelligent Systems: Theories and Applications},
  title                      = {Software Product Line to Overcome the Variability Issue in E-Learning: Systematic Literature Review},
  year                       = {2018},
  address                    = {New York, NY, USA},
  publisher                  = {Association for Computing Machinery},
  series                     = {SITA'18},
  abstract                   = {The disparity of educational technologies, pedagogies and learning styles implies a problem of variability when modeling E-learning systems. Furthermore, the current learning context, which has become very open and heterogeneous, raises the problem of automating the modeling, development and maintenance of personalized E-learning systems based on various pedagogies. For its part, the "Software Product Line" is a paradigm that aims to produce product families based on the principles of reuse, configuration and derivation. The main purpose of this literature review is to explore the different potential applications of "SPL" in the E-learning domain to figure out the problem of variability. We will adopt a protocol for a systematic review of literature, after which we will draw up an analysis report.},
  affiliation                = {{Sebbaq, H (Corresponding Author), Mohammed Vth Univ Rabat, RIME Team, Mohammadia Sch Engineers, Engn 3S Res Ctr,Comp Sci Dept,MASI Lab, POB 765, Rabat, Morocco. Sebbaq, Hanane; Retbi, Asmaa; Idrissi, Mohammed Khalidi; Bennani, Samir, Mohammed Vth Univ Rabat, RIME Team, Mohammadia Sch Engineers, Engn 3S Res Ctr,Comp Sci Dept,MASI Lab, POB 765, Rabat, Morocco. Sebbaq, Hanane; Retbi, Asmaa; Idrissi, Mohammed Khalidi; Bennani, Samir, Ibn Sina Ave, Rabat, Morocco.}},
  art_number                 = {a4},
  articleno                  = {4},
  author-email               = {{hananesebbaq@research.emi.ac.ma retbi@emi.ac.ma khalidi@emi.ac.ma sbennani@emi.ac.ma}},
  author_keywords            = {e-learning, heterogeneity, scale, software product line, systematic literature review, variability, variety},
  book-group-author          = {{Assoc Comp Machinery}},
  doi                        = {10.1145/3289402.3289504},
  groups                     = {includes, e-learning, systematic literature review, software product lines},
  isbn                       = {9781450364621},
  issn                       = {{2378-2528}},
  journal                    = {ACM International Conference Proceeding Series},
  keywords                   = {heterogeneity, variety, scale, variability, e-learning, systematic literature review, software product line},
  location                   = {Rabat, Morocco},
  number-of-cited-references = {{7}},
  numpages                   = {8},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
  url                        = {https://doi.org/10.1145/3289402.3289504},
}

@Article{Brink2016a,
  author                     = {Brink, C. and Heisig, P. and Wackermann, F.},
  journal                    = {Communications in Computer and Information Science},
  title                      = {Change impact in product lines: A systematic mapping study},
  year                       = {2016},
  issn                       = {{1865-0929}},
  pages                      = {677-694},
  volume                     = {639},
  abstract                   = {A product line (PL) supports and simplifies the development process of (software) systems by reusing assets. As systems are subjected to frequent alterations, the implementation of this changes can be a complex and error-prone task. For this reason a change impact analysis (CIA) systematically identifies locations that are affected by a change. While both approaches (PL and CIA) per se are often discussed in literature, the combination of them is still a challenge. This paper gives a comprehensive overview of literature, which addresses the integration of PL and CIA concepts. Furthermore, we classify our results to outline both, the current research stage as well as gaps. Therefore, we conducted a systematic mapping study incorporating 165 papers. While most of the papers have their background within Software Product Lines (SPLs) (44.2%) or PLs (5.5%), CIA in the combination with Multi Product Lines (2.4%) or Product Families (PFs) (1.8%) is sparsely addressed in literature. The results show that CIA for SPLs has been partially addressed yet, whereas the consideration of different disciplines (PFs) is insufficiently covered. © Springer International Publishing Switzerland 2016.},
  address                    = {{HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY}},
  affiliation                = {Software Engineering Group, Heinz Nixdorf Institute, Paderborn University, Paderborn, Germany; University of Applied Sciences and Arts Dortmund, Dortmund, Germany},
  author-email               = {{christopher.brink@uni-paderborn.de philipp.heisig@fh-dortmund.de}},
  author_keywords            = {change impact analysis, embedded systems, hardware/software, product family, product line, systematic mapping study},
  booktitle                  = {{INFORMATION AND SOFTWARE TECHNOLOGIES, ICIST 2016}},
  doi                        = {10.1007/978-3-319-46254-7_55},
  editor                     = {Dregvaite G., Damasevicius R.},
  groups                     = {includes, change impact analysis, systematic mapping study, software product lines},
  isbn                       = {{978-3-319-46254-7; 978-3-319-46253-0}},
  keywords                   = {mapping, change impact analysis, hardware/software, product families, product-lines, systematic mapping studies, embedded systems},
  number-of-cited-references = {{108}},
  organization               = {{Kaunas Univ Technol}},
  publisher                  = {Springer Verlag},
  research-areas             = {{Computer Science; Robotics}},
  series                     = {{Communications in Computer and Information Science}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Hmami2019a,
  author                     = {A. {Hmami} and H. {Sbai} and M. {Fredj}},
  booktitle                  = {2019 4th World Conference on Complex Systems (WCCS)},
  title                      = {Change Mining in Business Process Variability: A Comparative Study},
  year                       = {2019},
  address                    = {{345 E 47TH ST, NEW YORK, NY 10017 USA}},
  editor                     = {Essaaidi M., Nemiche M.},
  month                      = {April},
  organization               = {{IEEE}},
  pages                      = {1-5},
  publisher                  = {Institute of Electrical and Electronics Engineers Inc.},
  abstract                   = {Process mining is a new approach that links data analysis techniques and business process management. It aims to allow for an automatic discovery of process, a verification of conformance and enhancement, to create a strong and useful process. This field is enriched by change mining techniques that seek to align processes with business needs. However, most of existing approaches in this context are interested in managing the changes of a single process. Meanwhile, company activities are related to a combination of multiple variants of a process, which is known as a configurable process. In this paper, we conduct a comparative study of existing change mining approaches in business process management field. The purpose of our study is to analyze how the concept of change mining can be related to business process variability.},
  affiliation                = {AlQualsadi Research Team, ENSIAS, University Mohammed v of Rabat, Morocco; Faculty of Sciences and Technology, University Hassan II of Casablanca, Mohammedia, Morocco},
  art_number                 = {8930792},
  author-email               = {{hmami.asmae@gmail.com hanae.sbai@univh2c.ma mounia.fredj@um5.ac.ma}},
  author_keywords            = {change mining, configurable process, process mining, variability},
  doi                        = {10.1109/ICoCS.2019.8930792},
  groups                     = {includes, business processes, change identification, software process lines, comparative study},
  isbn                       = {{978-1-7281-1232-9}},
  journal                    = {Proceedings of 2019 IEEE World Conference on Complex Systems, WCCS 2019},
  keywords                   = {business data processing,data analysis,data mining,business process variability,process mining,links data analysis techniques,strong process,useful process,change mining techniques,align processes,configurable process,change mining approaches,business process management field,data mining,task analysis,manuals,companies,process mining,change mining,configurable process,variability},
  number-of-cited-references = {{29}},
  research-areas             = {{Computer Science; Engineering}},
  timestamp                  = {2021-01-05},
}

@InProceedings{Vale2014a,
  author                     = {Vale, Gustavo and Figueiredo, Eduardo and Abilio, Ramon and Costa, Heitor},
  booktitle                  = {{2014 EIGHTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE (SBCARS)}},
  title                      = {{Bad Smells in Software Product Lines: A Systematic Review}},
  year                       = {{2014}},
  address                    = {{345 E 47TH ST, NEW YORK, NY 10017 USA}},
  month                      = {Sep.},
  pages                      = {{84-94}},
  publisher                  = {{IEEE}},
  abstract                   = {{Software product line (SPL) is a set of software systems that share a
   common, managed set of features satisfying the specific needs of a
   particular market segment. Bad smells are symptoms that something may be
   wrong in system design. Bad smells in SPL are a relative new topic and
   need to be explored. This paper performed a Systematic Literature Review
   (SLR) to find and classify published work about bad smells in SPLs and
   their respective refactoring methods. Based on 18 relevant papers found
   in the SLR, we identified 70 bad smells and 95 refactoring methods
   related to them. The main contribution of this paper is a catalogue of
   bad smells and refactoring methods related to SPL.}},
  affiliation                = {{Vale, G (Corresponding Author), Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil. Vale, Gustavo; Figueiredo, Eduardo, Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil. Abilio, Ramon; Costa, Heitor, Univ Fed Lavras, Dept Comp Sci, Lavras, Brazil.}},
  art_number                 = {7012985},
  author-email               = {{gustavovale@dcc.ufmg.br figueiredo@dcc.ufmg.br ramon.abilio@dgti.ufla.br heitor@dcc.ufla.br}},
  author_keywords            = {bad smells, refactoring, software product lines},
  book-group-author          = {{IEEE}},
  doi                        = {10.1109/SBCARS.2014.21},
  groups                     = {includes, systematic literature review, refactoring, software product lines},
  isbn                       = {{978-1-4799-7860-1}},
  journal                    = {Proceedings - 2014 8th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARS 2014},
  keywords                   = {bad smells, software product lines, refactoring},
  number-of-cited-references = {{50}},
  orcid-numbers              = {{Abilio, Ramon S/0000-0002-7197-5951 Figueiredo, Eduardo/0000-0002-6004-2718}},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@Article{Vale2017a,
  author                     = {Vale, T. and de Almeida, E.S. and Alves, V. and Kulesza, U. and Niu, N. and de Lima, R.},
  journal                    = {Information and Software Technology},
  title                      = {Software product lines traceability: A systematic mapping study},
  year                       = {2017},
  issn                       = {{0950-5849}},
  month                      = {{APR}},
  pages                      = {1-18},
  volume                     = {84},
  abstract                   = {Context: Traceability in Software Product Lines (SPL) is the ability to interrelate software engineering artifacts through required links to answer specific questions related to the families of products and underlying development processes. Despite the existence of studies to map out available evidence on traceability for single systems development, there is a lack of understanding on common strategies, activities, artifacts, and research gaps for SPL traceability. Objective: This paper analyzes 62 studies dating from 2001 to 2015 and discusses seven aspects of SPL traceability: main goals, strategies, application domains, research intensity, research challenges, rigor, and industrial relevance. In addition to the analysis, this paper also synthesizes the available evidence, identifies open issues and points out areas calling for further research. Method: To gather evidence, we defined a mapping study process adapted from existing guidelines. Driven by a set of research questions, this process comprises three major phases: planning, conducting, and documenting the review. Results: This work provides a structured understanding of SPL traceability, indicating areas for further research. The lack of evidence regarding the application of research methods indicates the need for more rigorous SPL traceability studies with better description of context, study design, and limitations. For practitioners, although most identified studies have low industrial relevance, a few of them have high relevance and thus could provide some decision making support for application of SPL traceability in practice. Conclusions: This work concludes that SPL traceability is maturing and pinpoints areas where further investigation should be performed. As future work, we intend to improve the comparison between traceability proposals for SPL and single-system development. © 2016},
  address                    = {{RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS}},
  affiliation                = {Center of Exact Sciences and Technology, Federal University of Recôncavo da Bahia, Cruz das Almas, BA, Brazil; Computer Science Department, Federal University of Bahia, Salvador, BA, Brazil; RiSE - Reuse in Software Engineering, Salvador, BA, Brazil; Computer Science Department, University of Brasilia, Brasilia, DF, Brazil; Computer Science Department, Federal University of Rio Grande do Norte, Natal, RN, Brazil; Department of EECS, University of Cincinnati, Cincinnati, OH, United States},
  author-email               = {{tassio.vale@ufrb.edu.br}},
  author_keywords            = {software and systems traceability, software product lines, software reuse, systematic mapping study},
  doi                        = {10.1016/j.infsof.2016.12.004},
  groups                     = {includes, software product lines, reuse, systematic mapping study},
  journal-iso                = {{Inf. Softw. Technol.}},
  keywords                   = {computer software, computer software reusability, decision making, industrial research, mapping, software engineering, decision making support, development process, research challenges, software product line, software product lines, system development, systematic mapping studies, systems development, engineering research},
  number-of-cited-references = {{84}},
  orcid-numbers              = {{Vale, Tassio/0000-0002-7223-3263 Kulesza, Uira/0000-0002-5467-6458 Alves, Vander/0000-0003-1573-048X}},
  publisher                  = {Elsevier B.V.},
  research-areas             = {{Computer Science}},
  timestamp                  = {2021-01-05},
}

@InProceedings{ChaconLuna2021,
  author    = {Chac\'{o}n-Luna, Ana Eva and Fern\'{a}ndez, Antonio Manuel Guti\'{e}rrez and Galindo, Jos\'{e} A. and Benavides, David},
  booktitle = {Proceedings of the 25th ACM International Systems and Software Product Line Conference - Volume A},
  title     = {Empirical Software Product Line Engineering: A Systematic Literature Review. an IST Journal Publication},
  year      = {2021},
  address   = {New York, NY, USA},
  pages     = {113},
  publisher = {Association for Computing Machinery},
  series    = {SPLC '21},
  abstract  = {The adoption of Software Product Line Engineering (SPLE) is usually only based on its theoretical benefits instead of empirical evidences. In fact, there is no work that synthesizes the empirical studies on SPLE. This makes it difficult for researchers to base their contributions on previous works validated with an empirical strategy. The objective of this work is to discover and summarize the studies that have used empirical evidences in SPLE limited to those ones with the intervention of humans. This will allow evaluating the quality and knowing the scope of these studies over time. Doing so, research opportunities can arise. Analyzing the authors and institutions that investigate SPLE supported by empirical studies will also help to know which institutions have knowledge of the subject, leading to detect and encourage collaboration among researches. A systematic literature review was conducted with the focus on those studies in which there is human intervention and were published between 2000 and 2018 (the systematic literature review was developed in 2019). We considered peer-reviewed papers from journals and top software engineering conferences. Out of a total of 1880 studies in the initial set, a total of 62 primary studies were selected after applying a series of inclusion and exclusion criteria. We found that, approximately 56% of the studies used the empirical case study strategy while the rest used experimental strategies. Around 86% of the case studies were performed in an industrial environment showing the penetration of SPLE in industry while 81% of the experiments were conducted in an academic environment. Around 95.16% of the studies address aspects related to domain engineering while application engineering received less attention. Most of the experiments and case study evaluated showed an acceptable level of quality. The first study found dates from 2005 and since 2008, the interest in the empirical SPLE has increased.},
  doi       = {10.1145/3461001.3473062},
  groups    = {New Entries},
  isbn      = {9781450384698},
  keywords  = {systematic literature review, software product lines, experiment, case study, empirical strategies},
  location  = {Leicester, United Kingdom},
  numpages  = {1},
  owner     = {Kevin Feichtinger},
  timestamp = {2021-12-16},
  url       = {https://doi.org/10.1145/3461001.3473062},
}

@Article{Jaffari2021,
  author          = {Jaffari, A. and Lee, J. and Kim, E.},
  journal         = {Studies in Computational Intelligence},
  title           = {Variability Modeling in Software Product Line: A Systematic Literature Review},
  year            = {2021},
  note            = {cited By 0},
  pages           = {1-15},
  volume          = {930},
  abstract        = {Variability is the core concept characterizing software product line engineering. Over the past decades, variability modeling has been an emerging topic of extensive research that resulted in different units of variability (e.g., feature, decision, orthogonal, UML) with various variability modeling techniques. Hence, there is a need for a comprehensive study to shed light on the current status, diversity, and direction of the existing variability modeling techniques. The main objective of this research is to characterize the diversity of modeling variability and provide an overview of the status of existing literature. We conducted a systematic review with six formulated research questions and evaluated 74 studies published between the years 2004–2007. The results indicated that the majority of the studies proposed techniques for modeling variability in a separate model rather than modeling variability as an integral part of the development artifact, and the feature model was found as the most common unit of variability. Our study also identified more ambiguity in handling complexity issues as well as the need for a commonly accepted way of addressing variability model evolution. The strength of the evidence in support of the proposed approaches with illustrative examples and lack of robust tooling support that have confined the generalizability of the existing studies need further improvement with more robust empirical studies. © 2021, The Author(s), under exclusive license to Springer Nature Switzerland AG.},
  affiliation     = {Department of Software Engineering, Jeonbuk National University, Jeonju, South Korea; Department of Computer & Game Convergence, Howon University, Gunsan, South Korea},
  author_keywords = {Decision model; Feature model; Orthogonal variability model; SPLE; Variability modeling},
  document_type   = {Book Chapter},
  doi             = {10.1007/978-3-030-64773-5_1},
  editor          = {Kim H., Lee R.},
  groups          = {New Works},
  owner           = {Kevin Feichtinger},
  publisher       = {Springer Science and Business Media Deutschland GmbH},
  source          = {Scopus},
  timestamp       = {2021-12-16},
  url             = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85101569958&doi=10.1007%2f978-3-030-64773-5_1&partnerID=40&md5=0bd508b3e22b47eaca8103cc1142d176},
}

@Article{Echeverria2021,
  author                     = {Echeverria, Jorge and Perez, Francisca and Ignacio Panach, Jose and Cetina, Carlos},
  journal                    = {INFORMATION AND SOFTWARE TECHNOLOGY},
  title                      = {An empirical study of performance using Clone \& Own and Software Product Lines in an industrial context},
  year                       = {2021},
  issn                       = {0950-5849},
  month                      = feb,
  volume                     = {130},
  abstract                   = {{Context: Clone and Own (CaO) is a widespread approach to generate new
   software products from existing software products by adding small
   changes. The Software Product Line (SPL) approach addresses the
   development of families of products with similar features, moving away
   from the production of isolated products. Despite the popularity of both
   approaches, no experiment has yet compared them directly.
   Objective: The goal of this paper is to know the different performances
   of software engineers in the software products development process using
   two different approaches (SPL and CaO).
   Method: We conducted an experiment in the induction hobs software
   environment with software engineers. This experiment is a single factor
   experiment where the factor is the approach that is used to develop
   software products, with two treatments: (SPL or CaO). We compared the
   results obtained by the software engineers when they develop software
   products related to effectiveness, efficiency, and satisfaction.
   Results: The findings show that: (1) the SPL approach is more efficient
   even though the number of checking actions required by this approach is
   greater than the number required by the CaO approach; (2) the SPL
   approach offers more possibilities than software engineers need to
   perform their daily tasks; and (3) software engineers require better
   search capabilities in the CaO approach. The possible explanations for
   these results are presented in the paper.
   Conclusions: The results show that there are significant differences in
   effectiveness, efficiency, and satisfaction, with the SPL approach
   yielding the best results.}},
  address                    = {RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS},
  affiliation                = {Echeverria, J (Corresponding Author), Univ San Jorge, SVIT Res Grp, Zaragoza, Spain. Echeverria, Jorge; Perez, Francisca; Cetina, Carlos, Univ San Jorge, SVIT Res Grp, Zaragoza, Spain. Ignacio Panach, Jose, Univ Valencia, Ave Univ S-N, Valencia 46100, Spain.},
  article-number             = {106444},
  author-email               = {jecheverria@usj.es mfperez@usj.es joigpana@uv.es ccetina@usj.es},
  da                         = {2021-12-06},
  doc-delivery-number        = {PI2JM},
  doi                        = {10.1016/j.infsof.2020.106444},
  eissn                      = {1873-6025},
  funding-acknowledgement    = {Ministry of Economy and Competitiveness (MINECO) through the Spanish National R+D+i Plan; ERDF funds under the Project ALPS {[}RTI2018-096411-B-I00]},
  funding-text               = {This work has been partially supported by the Ministry of Economy and Competitiveness (MINECO) through the Spanish National R+D+i Plan and ERDF funds under the Project ALPS (RTI2018-096411-B-I00).},
  groups                     = {New Entries},
  journal-iso                = {Inf. Softw. Technol.},
  keywords                   = {Clone and Own; Software Product Line; Experiment; Empirical evaluation},
  keywords-plus              = {FAMILY},
  language                   = {English},
  number-of-cited-references = {45},
  orcid-numbers              = {Panach, Jose Ignacio/0000-0002-7043-6227 Cetina, Carlos/0000-0001-8542-5515 Echeverria, Jorge/0000-0001-7272-7047 Perez, Francisca/0000-0001-6371-915X},
  owner                      = {Kevin Feichtinger},
  publisher                  = {ELSEVIER},
  research-areas             = {Computer Science},
  researcherid-numbers       = {Panach, Jose Ignacio/ABF-2099-2020 Cetina, Carlos/P-8682-2017},
  times-cited                = {1},
  timestamp                  = {2021-12-16},
  type                       = {Article},
  unique-id                  = {WOS:000600922900015},
  usage-count-last-180-days  = {0},
  usage-count-since-2013     = {0},
  web-of-science-categories  = {Computer Science, Information Systems; Computer Science, Software Engineering},
}

@Conference{Feichtinger2021,
  author          = {Feichtinger, K. and Meixner, K. and Rabiser, R. and Biffl, S.},
  booktitle       = {2021 47th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)},
  title           = {A Systematic Study as Foundation for a Variability Modeling Body of Knowledge},
  year            = {2021},
  editor          = {Baldassarre M.T., Scanniello G., Skavhaug A.},
  month           = {Sep.},
  note            = {cited By 1},
  pages           = {25-28},
  publisher       = {Institute of Electrical and Electronics Engineers Inc.},
  abstract        = {In software product line engineering, engineers and researchers use variability models to explicitly represent the commonalities and variability of software systems to foster systematic reuse. Variability modeling has been a field of extensive research for over three decades, including Systematic Literature Reviews (SLRs) and Systematic Mapping Studies (SMSs) to categorize and compare different approaches. Much effort goes into such (secondary) studies, partly because they are often done from scratch and searching for relevant studies for specific research questions is tedious. Systematic reuse of search results would benefit the community by improving the efficiency and quality of such studies. In this paper, we report on creating a curated data set of 78 key SLR/SMS publications and primary studies (e.g., surveys) on variability modeling by conducting a tertiary SMS on variability modeling. When using such a curated paper data set for a secondary study, we estimate researchers can save up to 50 percent effort in the search phase. We present the publicly available data set, which includes categorization of the studies and provides update mechanisms. We see our data set as a foundation for building a Variability Modeling Body of Knowledge (VMBoK). We illustrate the efficient use of the data set in two SLR examples. We argue that our process and the data set can be useful for various research communities to improve the efficiency and quality of secondary (and tertiary) studies. © 2021 IEEE.},
  affiliation     = {JKU Linz, LIT CPS Lab, Austria; TU Wien, CDL SQI, Inf. Systems Eng, Austria; JKU Linz, CDL VaSiCS, LIT CPS Lab, Austria},
  author_keywords = {Software Product Lines.; Systematic Literature Review; Systematic Mapping Study; Variability Modeling},
  document_type   = {Conference Paper},
  doi             = {10.1109/SEAA53835.2021.00012},
  groups          = {New Works},
  journal         = {Proceedings - 2021 47th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2021},
  keywords        = {Computer software reusability; Mapping; Software design, Body of knowledge; Data set; Product line engineering; Reuse; Software Product Line; Software product line.; Systematic literature review; Systematic mapping studies; Systematic study; Variability modeling, Efficiency},
  owner           = {Kevin Feichtinger},
  source          = {Scopus},
  timestamp       = {2021-12-16},
  url             = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85115122514&doi=10.1109%2fSEAA53835.2021.00012&partnerID=40&md5=3bbe3bd827487b70a51b53f9218b12a2},
}

@Article{Castelluccia2014,
  author     = {Castelluccia, Daniela and Boffoli, Nicola},
  journal    = {SIGSOFT Softw. Eng. Notes},
  title      = {Service-Oriented Product Lines: A Systematic Mapping Study},
  year       = {2014},
  issn       = {0163-5948},
  month      = {mar},
  number     = {2},
  pages      = {1–6},
  volume     = {39},
  abstract   = {Software product line engineering and service-oriented architectures both enable organizations to capitalize on reuse of existing software assets and capabilities and improve competitive advantage in terms of development savings, product flexibility, time-to-market. Both approaches accommodate variation of assets, including services, by changing the software being reused or composing services according a new orchestration. Therefore, variability management in Service-oriented Product Lines (SoPL) is one of the main challenges today. In order to highlight the emerging evidence-based results from the research community, we apply the well-defined method of systematic mapping in order to populate a classification scheme for the SoPL field of interest. The analysis of results throws light on the current open issues. Moreover, different facets of the scheme can be combined to answer more specific research questions. The report reveals the need for more empirical research able to provide new metrics measuring efficiency and efficacy of the proposed models, new methods and tools supporting variability management in SoPL, especially during maintenance and verification and validation. The mapping study about SoPL opens further investigations by means of a complete systematic review to select and validate the most efficient solutions to variability management in SoPL.},
  address    = {New York, NY, USA},
  doi        = {10.1145/2579281.2579294},
  issue_date = {March 2014},
  keywords   = {mapping study, empirical study, product line development, service-oriented architecture, software product line, service-oriented computing, variability management},
  numpages   = {6},
  owner      = {Kevin Feichtinger},
  publisher  = {Association for Computing Machinery},
  timestamp  = {2021-12-17},
  url        = {https://doi.org/10.1145/2579281.2579294},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: grouping:
0 AllEntriesGroup:;
1 AutomaticKeywordGroup:Categories\;0\;groups\;,\;,\;1\;0x8a8a8aff\;\;\;;
}
